{"version":3,"file":"index.js","sources":["../webpack://actions-linter/./lib/main.js","../webpack://actions-linter/./node_modules/@actions/core/lib/command.js","../webpack://actions-linter/./node_modules/@actions/core/lib/core.js","../webpack://actions-linter/./node_modules/@actions/core/lib/file-command.js","../webpack://actions-linter/./node_modules/@actions/core/lib/utils.js","../webpack://actions-linter/./node_modules/@actions/github/lib/context.js","../webpack://actions-linter/./node_modules/@actions/github/lib/github.js","../webpack://actions-linter/./node_modules/@actions/github/lib/internal/utils.js","../webpack://actions-linter/./node_modules/@actions/github/lib/utils.js","../webpack://actions-linter/./node_modules/@actions/glob/lib/glob.js","../webpack://actions-linter/./node_modules/@actions/glob/lib/internal-glob-options-helper.js","../webpack://actions-linter/./node_modules/@actions/glob/lib/internal-globber.js","../webpack://actions-linter/./node_modules/@actions/glob/lib/internal-match-kind.js","../webpack://actions-linter/./node_modules/@actions/glob/lib/internal-path-helper.js","../webpack://actions-linter/./node_modules/@actions/glob/lib/internal-path.js","../webpack://actions-linter/./node_modules/@actions/glob/lib/internal-pattern-helper.js","../webpack://actions-linter/./node_modules/@actions/glob/lib/internal-pattern.js","../webpack://actions-linter/./node_modules/@actions/glob/lib/internal-search-state.js","../webpack://actions-linter/./node_modules/@actions/http-client/index.js","../webpack://actions-linter/./node_modules/@actions/http-client/proxy.js","../webpack://actions-linter/./node_modules/@octokit/auth-token/dist-node/index.js","../webpack://actions-linter/./node_modules/@octokit/core/dist-node/index.js","../webpack://actions-linter/./node_modules/@octokit/endpoint/dist-node/index.js","../webpack://actions-linter/./node_modules/@octokit/endpoint/node_modules/is-plain-object/dist/is-plain-object.js","../webpack://actions-linter/./node_modules/@octokit/graphql/dist-node/index.js","../webpack://actions-linter/./node_modules/@octokit/plugin-paginate-rest/dist-node/index.js","../webpack://actions-linter/./node_modules/@octokit/plugin-rest-endpoint-methods/dist-node/index.js","../webpack://actions-linter/./node_modules/@octokit/request-error/dist-node/index.js","../webpack://actions-linter/./node_modules/@octokit/request/dist-node/index.js","../webpack://actions-linter/./node_modules/@octokit/request/node_modules/is-plain-object/dist/is-plain-object.js","../webpack://actions-linter/./node_modules/balanced-match/index.js","../webpack://actions-linter/./node_modules/before-after-hook/index.js","../webpack://actions-linter/./node_modules/before-after-hook/lib/add.js","../webpack://actions-linter/./node_modules/before-after-hook/lib/register.js","../webpack://actions-linter/./node_modules/before-after-hook/lib/remove.js","../webpack://actions-linter/./node_modules/brace-expansion/index.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/api.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/diagrams/render_public.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/generate/generate.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/generate/generate_public.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/lang/lang_extensions.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/constants.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/cst/cst.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/errors_public.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/exceptions_public.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/grammar/checks.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/grammar/first.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/grammar/follow.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/grammar/gast/gast.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/grammar/gast/gast_public.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/grammar/gast/gast_visitor_public.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/grammar/keys.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/grammar/resolver.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/grammar/rest.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/parser/parser.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/scan/lexer.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/scan/lexer_public.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/scan/reg_exp.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/scan/tokens.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/scan/tokens_public.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/utils/utils.js","../webpack://actions-linter/./node_modules/chevrotain/lib/src/version.js","../webpack://actions-linter/./node_modules/concat-map/index.js","../webpack://actions-linter/./node_modules/deprecation/dist-node/index.js","../webpack://actions-linter/./node_modules/github-actions-parser/dist/index.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/index.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/common.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/dumper.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/exception.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/loader.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/schema.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/schema/core.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/schema/default.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/schema/failsafe.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/schema/json.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/snippet.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/binary.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/bool.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/float.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/int.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/map.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/merge.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/null.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/omap.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/pairs.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/seq.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/set.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/str.js","../webpack://actions-linter/./node_modules/github-actions-parser/node_modules/js-yaml/lib/type/timestamp.js","../webpack://actions-linter/./node_modules/isarray/index.js","../webpack://actions-linter/./node_modules/line-column/lib/line-column.js","../webpack://actions-linter/./node_modules/line-column/node_modules/isobject/index.js","../webpack://actions-linter/./node_modules/minimatch/minimatch.js","../webpack://actions-linter/./node_modules/node-fetch/lib/index.js","../webpack://actions-linter/./node_modules/once/once.js","../webpack://actions-linter/./node_modules/regexp-to-ast/lib/regexp-to-ast.js","../webpack://actions-linter/./node_modules/tunnel/index.js","../webpack://actions-linter/./node_modules/tunnel/lib/tunnel.js","../webpack://actions-linter/./node_modules/universal-user-agent/dist-node/index.js","../webpack://actions-linter/./node_modules/wrappy/wrappy.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/common.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/dumper.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/exception.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/index.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/loader.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/mark.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/scalarInference.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/schema.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/schema/core.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/schema/default_full.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/schema/default_safe.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/schema/failsafe.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/schema/json.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/binary.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/bool.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/float.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/int.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/js/regexp.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/js/undefined.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/map.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/merge.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/null.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/omap.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/pairs.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/seq.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/set.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/str.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/type/timestamp.js","../webpack://actions-linter/./node_modules/yaml-ast-parser/dist/src/yamlAST.js","../webpack://actions-linter/./node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://actions-linter/external \"assert\"","../webpack://actions-linter/external \"buffer\"","../webpack://actions-linter/external \"events\"","../webpack://actions-linter/external \"fs\"","../webpack://actions-linter/external \"http\"","../webpack://actions-linter/external \"https\"","../webpack://actions-linter/external \"net\"","../webpack://actions-linter/external \"os\"","../webpack://actions-linter/external \"path\"","../webpack://actions-linter/external \"stream\"","../webpack://actions-linter/external \"tls\"","../webpack://actions-linter/external \"url\"","../webpack://actions-linter/external \"util\"","../webpack://actions-linter/external \"zlib\"","../webpack://actions-linter/webpack/bootstrap","../webpack://actions-linter/webpack/runtime/compat","../webpack://actions-linter/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = __importStar(require(\"@actions/core\"));\nconst command_1 = require(\"@actions/core/lib/command\");\nconst github_1 = require(\"@actions/github\");\nconst glob_1 = require(\"@actions/glob\");\nconst fs_1 = require(\"fs\");\nconst github_actions_parser_1 = require(\"github-actions-parser\");\nconst line_column_1 = __importDefault(require(\"line-column\"));\nconst { readFile } = fs_1.promises;\nfunction run() {\n    return __awaiter(this, void 0, void 0, function* () {\n        let errorsFound = false;\n        try {\n            // Enable dynamic features for now.\n            // const token = core.getInput(\"github-token\", {required: true});\n            const parserContext = {\n                owner: github_1.context.repo.owner,\n                repository: github_1.context.repo.repo,\n                client: undefined,\n                orgFeaturesEnabled: false,\n            };\n            const patterns = JSON.parse(core.getInput(\"workflows\")) || [];\n            const globber = yield glob_1.create(patterns.join(\"\\n\"));\n            const files = yield globber.glob();\n            for (const file of files) {\n                try {\n                    const workflowContent = yield readFile(file, \"utf-8\");\n                    const workflow = yield github_actions_parser_1.parse(parserContext, file, workflowContent);\n                    const lineColumnFinder = line_column_1.default(workflowContent);\n                    for (const diagnostic of workflow.diagnostics) {\n                        const { line, col } = lineColumnFinder.fromIndex(diagnostic.pos[0]) || {\n                            line: -1,\n                            col: -1,\n                        };\n                        command_1.issueCommand(diagnostic.kind === 0 /*DiagnosticKind.Error*/\n                            ? \"error\"\n                            : \"warning\", {\n                            file: file,\n                            line,\n                            col,\n                        }, diagnostic.message);\n                        if (diagnostic.kind === 0) {\n                            errorsFound = true;\n                        }\n                    }\n                }\n                catch (e) {\n                    core.error(`Could not parse ${file}: ${e.message}`);\n                }\n            }\n        }\n        catch (error) {\n            core.setFailed(error.message);\n        }\n        if (errorsFound) {\n            core.setFailed(\"Linting errors have been found\");\n        }\n    });\n}\nrun();\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.  The value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n */\nfunction error(message) {\n    command_1.issue('error', message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n */\nfunction warning(message) {\n    command_1.issue('warning', message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Context = void 0;\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nclass Context {\n    /**\n     * Hydrate the context from the environment\n     */\n    constructor() {\n        this.payload = {};\n        if (process.env.GITHUB_EVENT_PATH) {\n            if (fs_1.existsSync(process.env.GITHUB_EVENT_PATH)) {\n                this.payload = JSON.parse(fs_1.readFileSync(process.env.GITHUB_EVENT_PATH, { encoding: 'utf8' }));\n            }\n            else {\n                const path = process.env.GITHUB_EVENT_PATH;\n                process.stdout.write(`GITHUB_EVENT_PATH ${path} does not exist${os_1.EOL}`);\n            }\n        }\n        this.eventName = process.env.GITHUB_EVENT_NAME;\n        this.sha = process.env.GITHUB_SHA;\n        this.ref = process.env.GITHUB_REF;\n        this.workflow = process.env.GITHUB_WORKFLOW;\n        this.action = process.env.GITHUB_ACTION;\n        this.actor = process.env.GITHUB_ACTOR;\n        this.job = process.env.GITHUB_JOB;\n        this.runNumber = parseInt(process.env.GITHUB_RUN_NUMBER, 10);\n        this.runId = parseInt(process.env.GITHUB_RUN_ID, 10);\n    }\n    get issue() {\n        const payload = this.payload;\n        return Object.assign(Object.assign({}, this.repo), { number: (payload.issue || payload.pull_request || payload).number });\n    }\n    get repo() {\n        if (process.env.GITHUB_REPOSITORY) {\n            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');\n            return { owner, repo };\n        }\n        if (this.payload.repository) {\n            return {\n                owner: this.payload.repository.owner.login,\n                repo: this.payload.repository.name\n            };\n        }\n        throw new Error(\"context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'\");\n    }\n}\nexports.Context = Context;\n//# sourceMappingURL=context.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOctokit = exports.context = void 0;\nconst Context = __importStar(require(\"./context\"));\nconst utils_1 = require(\"./utils\");\nexports.context = new Context.Context();\n/**\n * Returns a hydrated octokit ready to use for GitHub Actions\n *\n * @param     token    the repo PAT or GITHUB_TOKEN\n * @param     options  other options to set\n */\nfunction getOctokit(token, options) {\n    return new utils_1.GitHub(utils_1.getOctokitOptions(token, options));\n}\nexports.getOctokit = getOctokit;\n//# sourceMappingURL=github.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApiBaseUrl = exports.getProxyAgent = exports.getAuthString = void 0;\nconst httpClient = __importStar(require(\"@actions/http-client\"));\nfunction getAuthString(token, options) {\n    if (!token && !options.auth) {\n        throw new Error('Parameter token or opts.auth is required');\n    }\n    else if (token && options.auth) {\n        throw new Error('Parameters token and opts.auth may not both be specified');\n    }\n    return typeof options.auth === 'string' ? options.auth : `token ${token}`;\n}\nexports.getAuthString = getAuthString;\nfunction getProxyAgent(destinationUrl) {\n    const hc = new httpClient.HttpClient();\n    return hc.getAgent(destinationUrl);\n}\nexports.getProxyAgent = getProxyAgent;\nfunction getApiBaseUrl() {\n    return process.env['GITHUB_API_URL'] || 'https://api.github.com';\n}\nexports.getApiBaseUrl = getApiBaseUrl;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOctokitOptions = exports.GitHub = exports.context = void 0;\nconst Context = __importStar(require(\"./context\"));\nconst Utils = __importStar(require(\"./internal/utils\"));\n// octokit + plugins\nconst core_1 = require(\"@octokit/core\");\nconst plugin_rest_endpoint_methods_1 = require(\"@octokit/plugin-rest-endpoint-methods\");\nconst plugin_paginate_rest_1 = require(\"@octokit/plugin-paginate-rest\");\nexports.context = new Context.Context();\nconst baseUrl = Utils.getApiBaseUrl();\nconst defaults = {\n    baseUrl,\n    request: {\n        agent: Utils.getProxyAgent(baseUrl)\n    }\n};\nexports.GitHub = core_1.Octokit.plugin(plugin_rest_endpoint_methods_1.restEndpointMethods, plugin_paginate_rest_1.paginateRest).defaults(defaults);\n/**\n * Convience function to correctly format Octokit Options to pass into the constructor.\n *\n * @param     token    the repo PAT or GITHUB_TOKEN\n * @param     options  other options to set\n */\nfunction getOctokitOptions(token, options) {\n    const opts = Object.assign({}, options || {}); // Shallow clone - don't mutate the object provided by the caller\n    // Auth\n    const auth = Utils.getAuthString(token, opts);\n    if (auth) {\n        opts.auth = auth;\n    }\n    return opts;\n}\nexports.getOctokitOptions = getOctokitOptions;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst internal_globber_1 = require(\"./internal-globber\");\n/**\n * Constructs a globber\n *\n * @param patterns  Patterns separated by newlines\n * @param options   Glob options\n */\nfunction create(patterns, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield internal_globber_1.DefaultGlobber.create(patterns, options);\n    });\n}\nexports.create = create;\n//# sourceMappingURL=glob.js.map","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = __importStar(require(\"@actions/core\"));\n/**\n * Returns a copy with defaults filled in.\n */\nfunction getOptions(copy) {\n    const result = {\n        followSymbolicLinks: true,\n        implicitDescendants: true,\n        omitBrokenSymbolicLinks: true\n    };\n    if (copy) {\n        if (typeof copy.followSymbolicLinks === 'boolean') {\n            result.followSymbolicLinks = copy.followSymbolicLinks;\n            core.debug(`followSymbolicLinks '${result.followSymbolicLinks}'`);\n        }\n        if (typeof copy.implicitDescendants === 'boolean') {\n            result.implicitDescendants = copy.implicitDescendants;\n            core.debug(`implicitDescendants '${result.implicitDescendants}'`);\n        }\n        if (typeof copy.omitBrokenSymbolicLinks === 'boolean') {\n            result.omitBrokenSymbolicLinks = copy.omitBrokenSymbolicLinks;\n            core.debug(`omitBrokenSymbolicLinks '${result.omitBrokenSymbolicLinks}'`);\n        }\n    }\n    return result;\n}\nexports.getOptions = getOptions;\n//# sourceMappingURL=internal-glob-options-helper.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = __importStar(require(\"@actions/core\"));\nconst fs = __importStar(require(\"fs\"));\nconst globOptionsHelper = __importStar(require(\"./internal-glob-options-helper\"));\nconst path = __importStar(require(\"path\"));\nconst patternHelper = __importStar(require(\"./internal-pattern-helper\"));\nconst internal_match_kind_1 = require(\"./internal-match-kind\");\nconst internal_pattern_1 = require(\"./internal-pattern\");\nconst internal_search_state_1 = require(\"./internal-search-state\");\nconst IS_WINDOWS = process.platform === 'win32';\nclass DefaultGlobber {\n    constructor(options) {\n        this.patterns = [];\n        this.searchPaths = [];\n        this.options = globOptionsHelper.getOptions(options);\n    }\n    getSearchPaths() {\n        // Return a copy\n        return this.searchPaths.slice();\n    }\n    glob() {\n        var e_1, _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = [];\n            try {\n                for (var _b = __asyncValues(this.globGenerator()), _c; _c = yield _b.next(), !_c.done;) {\n                    const itemPath = _c.value;\n                    result.push(itemPath);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return result;\n        });\n    }\n    globGenerator() {\n        return __asyncGenerator(this, arguments, function* globGenerator_1() {\n            // Fill in defaults options\n            const options = globOptionsHelper.getOptions(this.options);\n            // Implicit descendants?\n            const patterns = [];\n            for (const pattern of this.patterns) {\n                patterns.push(pattern);\n                if (options.implicitDescendants &&\n                    (pattern.trailingSeparator ||\n                        pattern.segments[pattern.segments.length - 1] !== '**')) {\n                    patterns.push(new internal_pattern_1.Pattern(pattern.negate, pattern.segments.concat('**')));\n                }\n            }\n            // Push the search paths\n            const stack = [];\n            for (const searchPath of patternHelper.getSearchPaths(patterns)) {\n                core.debug(`Search path '${searchPath}'`);\n                // Exists?\n                try {\n                    // Intentionally using lstat. Detection for broken symlink\n                    // will be performed later (if following symlinks).\n                    yield __await(fs.promises.lstat(searchPath));\n                }\n                catch (err) {\n                    if (err.code === 'ENOENT') {\n                        continue;\n                    }\n                    throw err;\n                }\n                stack.unshift(new internal_search_state_1.SearchState(searchPath, 1));\n            }\n            // Search\n            const traversalChain = []; // used to detect cycles\n            while (stack.length) {\n                // Pop\n                const item = stack.pop();\n                // Match?\n                const match = patternHelper.match(patterns, item.path);\n                const partialMatch = !!match || patternHelper.partialMatch(patterns, item.path);\n                if (!match && !partialMatch) {\n                    continue;\n                }\n                // Stat\n                const stats = yield __await(DefaultGlobber.stat(item, options, traversalChain)\n                // Broken symlink, or symlink cycle detected, or no longer exists\n                );\n                // Broken symlink, or symlink cycle detected, or no longer exists\n                if (!stats) {\n                    continue;\n                }\n                // Directory\n                if (stats.isDirectory()) {\n                    // Matched\n                    if (match & internal_match_kind_1.MatchKind.Directory) {\n                        yield yield __await(item.path);\n                    }\n                    // Descend?\n                    else if (!partialMatch) {\n                        continue;\n                    }\n                    // Push the child items in reverse\n                    const childLevel = item.level + 1;\n                    const childItems = (yield __await(fs.promises.readdir(item.path))).map(x => new internal_search_state_1.SearchState(path.join(item.path, x), childLevel));\n                    stack.push(...childItems.reverse());\n                }\n                // File\n                else if (match & internal_match_kind_1.MatchKind.File) {\n                    yield yield __await(item.path);\n                }\n            }\n        });\n    }\n    /**\n     * Constructs a DefaultGlobber\n     */\n    static create(patterns, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new DefaultGlobber(options);\n            if (IS_WINDOWS) {\n                patterns = patterns.replace(/\\r\\n/g, '\\n');\n                patterns = patterns.replace(/\\r/g, '\\n');\n            }\n            const lines = patterns.split('\\n').map(x => x.trim());\n            for (const line of lines) {\n                // Empty or comment\n                if (!line || line.startsWith('#')) {\n                    continue;\n                }\n                // Pattern\n                else {\n                    result.patterns.push(new internal_pattern_1.Pattern(line));\n                }\n            }\n            result.searchPaths.push(...patternHelper.getSearchPaths(result.patterns));\n            return result;\n        });\n    }\n    static stat(item, options, traversalChain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Note:\n            // `stat` returns info about the target of a symlink (or symlink chain)\n            // `lstat` returns info about a symlink itself\n            let stats;\n            if (options.followSymbolicLinks) {\n                try {\n                    // Use `stat` (following symlinks)\n                    stats = yield fs.promises.stat(item.path);\n                }\n                catch (err) {\n                    if (err.code === 'ENOENT') {\n                        if (options.omitBrokenSymbolicLinks) {\n                            core.debug(`Broken symlink '${item.path}'`);\n                            return undefined;\n                        }\n                        throw new Error(`No information found for the path '${item.path}'. This may indicate a broken symbolic link.`);\n                    }\n                    throw err;\n                }\n            }\n            else {\n                // Use `lstat` (not following symlinks)\n                stats = yield fs.promises.lstat(item.path);\n            }\n            // Note, isDirectory() returns false for the lstat of a symlink\n            if (stats.isDirectory() && options.followSymbolicLinks) {\n                // Get the realpath\n                const realPath = yield fs.promises.realpath(item.path);\n                // Fixup the traversal chain to match the item level\n                while (traversalChain.length >= item.level) {\n                    traversalChain.pop();\n                }\n                // Test for a cycle\n                if (traversalChain.some((x) => x === realPath)) {\n                    core.debug(`Symlink cycle detected for path '${item.path}' and realpath '${realPath}'`);\n                    return undefined;\n                }\n                // Update the traversal chain\n                traversalChain.push(realPath);\n            }\n            return stats;\n        });\n    }\n}\nexports.DefaultGlobber = DefaultGlobber;\n//# sourceMappingURL=internal-globber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Indicates whether a pattern matches a path\n */\nvar MatchKind;\n(function (MatchKind) {\n    /** Not matched */\n    MatchKind[MatchKind[\"None\"] = 0] = \"None\";\n    /** Matched if the path is a directory */\n    MatchKind[MatchKind[\"Directory\"] = 1] = \"Directory\";\n    /** Matched if the path is a regular file */\n    MatchKind[MatchKind[\"File\"] = 2] = \"File\";\n    /** Matched */\n    MatchKind[MatchKind[\"All\"] = 3] = \"All\";\n})(MatchKind = exports.MatchKind || (exports.MatchKind = {}));\n//# sourceMappingURL=internal-match-kind.js.map","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = __importStar(require(\"path\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst IS_WINDOWS = process.platform === 'win32';\n/**\n * Similar to path.dirname except normalizes the path separators and slightly better handling for Windows UNC paths.\n *\n * For example, on Linux/macOS:\n * - `/               => /`\n * - `/hello          => /`\n *\n * For example, on Windows:\n * - `C:\\             => C:\\`\n * - `C:\\hello        => C:\\`\n * - `C:              => C:`\n * - `C:hello         => C:`\n * - `\\               => \\`\n * - `\\hello          => \\`\n * - `\\\\hello         => \\\\hello`\n * - `\\\\hello\\world   => \\\\hello\\world`\n */\nfunction dirname(p) {\n    // Normalize slashes and trim unnecessary trailing slash\n    p = safeTrimTrailingSeparator(p);\n    // Windows UNC root, e.g. \\\\hello or \\\\hello\\world\n    if (IS_WINDOWS && /^\\\\\\\\[^\\\\]+(\\\\[^\\\\]+)?$/.test(p)) {\n        return p;\n    }\n    // Get dirname\n    let result = path.dirname(p);\n    // Trim trailing slash for Windows UNC root, e.g. \\\\hello\\world\\\n    if (IS_WINDOWS && /^\\\\\\\\[^\\\\]+\\\\[^\\\\]+\\\\$/.test(result)) {\n        result = safeTrimTrailingSeparator(result);\n    }\n    return result;\n}\nexports.dirname = dirname;\n/**\n * Roots the path if not already rooted. On Windows, relative roots like `\\`\n * or `C:` are expanded based on the current working directory.\n */\nfunction ensureAbsoluteRoot(root, itemPath) {\n    assert_1.default(root, `ensureAbsoluteRoot parameter 'root' must not be empty`);\n    assert_1.default(itemPath, `ensureAbsoluteRoot parameter 'itemPath' must not be empty`);\n    // Already rooted\n    if (hasAbsoluteRoot(itemPath)) {\n        return itemPath;\n    }\n    // Windows\n    if (IS_WINDOWS) {\n        // Check for itemPath like C: or C:foo\n        if (itemPath.match(/^[A-Z]:[^\\\\/]|^[A-Z]:$/i)) {\n            let cwd = process.cwd();\n            assert_1.default(cwd.match(/^[A-Z]:\\\\/i), `Expected current directory to start with an absolute drive root. Actual '${cwd}'`);\n            // Drive letter matches cwd? Expand to cwd\n            if (itemPath[0].toUpperCase() === cwd[0].toUpperCase()) {\n                // Drive only, e.g. C:\n                if (itemPath.length === 2) {\n                    // Preserve specified drive letter case (upper or lower)\n                    return `${itemPath[0]}:\\\\${cwd.substr(3)}`;\n                }\n                // Drive + path, e.g. C:foo\n                else {\n                    if (!cwd.endsWith('\\\\')) {\n                        cwd += '\\\\';\n                    }\n                    // Preserve specified drive letter case (upper or lower)\n                    return `${itemPath[0]}:\\\\${cwd.substr(3)}${itemPath.substr(2)}`;\n                }\n            }\n            // Different drive\n            else {\n                return `${itemPath[0]}:\\\\${itemPath.substr(2)}`;\n            }\n        }\n        // Check for itemPath like \\ or \\foo\n        else if (normalizeSeparators(itemPath).match(/^\\\\$|^\\\\[^\\\\]/)) {\n            const cwd = process.cwd();\n            assert_1.default(cwd.match(/^[A-Z]:\\\\/i), `Expected current directory to start with an absolute drive root. Actual '${cwd}'`);\n            return `${cwd[0]}:\\\\${itemPath.substr(1)}`;\n        }\n    }\n    assert_1.default(hasAbsoluteRoot(root), `ensureAbsoluteRoot parameter 'root' must have an absolute root`);\n    // Otherwise ensure root ends with a separator\n    if (root.endsWith('/') || (IS_WINDOWS && root.endsWith('\\\\'))) {\n        // Intentionally empty\n    }\n    else {\n        // Append separator\n        root += path.sep;\n    }\n    return root + itemPath;\n}\nexports.ensureAbsoluteRoot = ensureAbsoluteRoot;\n/**\n * On Linux/macOS, true if path starts with `/`. On Windows, true for paths like:\n * `\\\\hello\\share` and `C:\\hello` (and using alternate separator).\n */\nfunction hasAbsoluteRoot(itemPath) {\n    assert_1.default(itemPath, `hasAbsoluteRoot parameter 'itemPath' must not be empty`);\n    // Normalize separators\n    itemPath = normalizeSeparators(itemPath);\n    // Windows\n    if (IS_WINDOWS) {\n        // E.g. \\\\hello\\share or C:\\hello\n        return itemPath.startsWith('\\\\\\\\') || /^[A-Z]:\\\\/i.test(itemPath);\n    }\n    // E.g. /hello\n    return itemPath.startsWith('/');\n}\nexports.hasAbsoluteRoot = hasAbsoluteRoot;\n/**\n * On Linux/macOS, true if path starts with `/`. On Windows, true for paths like:\n * `\\`, `\\hello`, `\\\\hello\\share`, `C:`, and `C:\\hello` (and using alternate separator).\n */\nfunction hasRoot(itemPath) {\n    assert_1.default(itemPath, `isRooted parameter 'itemPath' must not be empty`);\n    // Normalize separators\n    itemPath = normalizeSeparators(itemPath);\n    // Windows\n    if (IS_WINDOWS) {\n        // E.g. \\ or \\hello or \\\\hello\n        // E.g. C: or C:\\hello\n        return itemPath.startsWith('\\\\') || /^[A-Z]:/i.test(itemPath);\n    }\n    // E.g. /hello\n    return itemPath.startsWith('/');\n}\nexports.hasRoot = hasRoot;\n/**\n * Removes redundant slashes and converts `/` to `\\` on Windows\n */\nfunction normalizeSeparators(p) {\n    p = p || '';\n    // Windows\n    if (IS_WINDOWS) {\n        // Convert slashes on Windows\n        p = p.replace(/\\//g, '\\\\');\n        // Remove redundant slashes\n        const isUnc = /^\\\\\\\\+[^\\\\]/.test(p); // e.g. \\\\hello\n        return (isUnc ? '\\\\' : '') + p.replace(/\\\\\\\\+/g, '\\\\'); // preserve leading \\\\ for UNC\n    }\n    // Remove redundant slashes\n    return p.replace(/\\/\\/+/g, '/');\n}\nexports.normalizeSeparators = normalizeSeparators;\n/**\n * Normalizes the path separators and trims the trailing separator (when safe).\n * For example, `/foo/ => /foo` but `/ => /`\n */\nfunction safeTrimTrailingSeparator(p) {\n    // Short-circuit if empty\n    if (!p) {\n        return '';\n    }\n    // Normalize separators\n    p = normalizeSeparators(p);\n    // No trailing slash\n    if (!p.endsWith(path.sep)) {\n        return p;\n    }\n    // Check '/' on Linux/macOS and '\\' on Windows\n    if (p === path.sep) {\n        return p;\n    }\n    // On Windows check if drive root. E.g. C:\\\n    if (IS_WINDOWS && /^[A-Z]:\\\\$/i.test(p)) {\n        return p;\n    }\n    // Otherwise trim trailing slash\n    return p.substr(0, p.length - 1);\n}\nexports.safeTrimTrailingSeparator = safeTrimTrailingSeparator;\n//# sourceMappingURL=internal-path-helper.js.map","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = __importStar(require(\"path\"));\nconst pathHelper = __importStar(require(\"./internal-path-helper\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst IS_WINDOWS = process.platform === 'win32';\n/**\n * Helper class for parsing paths into segments\n */\nclass Path {\n    /**\n     * Constructs a Path\n     * @param itemPath Path or array of segments\n     */\n    constructor(itemPath) {\n        this.segments = [];\n        // String\n        if (typeof itemPath === 'string') {\n            assert_1.default(itemPath, `Parameter 'itemPath' must not be empty`);\n            // Normalize slashes and trim unnecessary trailing slash\n            itemPath = pathHelper.safeTrimTrailingSeparator(itemPath);\n            // Not rooted\n            if (!pathHelper.hasRoot(itemPath)) {\n                this.segments = itemPath.split(path.sep);\n            }\n            // Rooted\n            else {\n                // Add all segments, while not at the root\n                let remaining = itemPath;\n                let dir = pathHelper.dirname(remaining);\n                while (dir !== remaining) {\n                    // Add the segment\n                    const basename = path.basename(remaining);\n                    this.segments.unshift(basename);\n                    // Truncate the last segment\n                    remaining = dir;\n                    dir = pathHelper.dirname(remaining);\n                }\n                // Remainder is the root\n                this.segments.unshift(remaining);\n            }\n        }\n        // Array\n        else {\n            // Must not be empty\n            assert_1.default(itemPath.length > 0, `Parameter 'itemPath' must not be an empty array`);\n            // Each segment\n            for (let i = 0; i < itemPath.length; i++) {\n                let segment = itemPath[i];\n                // Must not be empty\n                assert_1.default(segment, `Parameter 'itemPath' must not contain any empty segments`);\n                // Normalize slashes\n                segment = pathHelper.normalizeSeparators(itemPath[i]);\n                // Root segment\n                if (i === 0 && pathHelper.hasRoot(segment)) {\n                    segment = pathHelper.safeTrimTrailingSeparator(segment);\n                    assert_1.default(segment === pathHelper.dirname(segment), `Parameter 'itemPath' root segment contains information for multiple segments`);\n                    this.segments.push(segment);\n                }\n                // All other segments\n                else {\n                    // Must not contain slash\n                    assert_1.default(!segment.includes(path.sep), `Parameter 'itemPath' contains unexpected path separators`);\n                    this.segments.push(segment);\n                }\n            }\n        }\n    }\n    /**\n     * Converts the path to it's string representation\n     */\n    toString() {\n        // First segment\n        let result = this.segments[0];\n        // All others\n        let skipSlash = result.endsWith(path.sep) || (IS_WINDOWS && /^[A-Z]:$/i.test(result));\n        for (let i = 1; i < this.segments.length; i++) {\n            if (skipSlash) {\n                skipSlash = false;\n            }\n            else {\n                result += path.sep;\n            }\n            result += this.segments[i];\n        }\n        return result;\n    }\n}\nexports.Path = Path;\n//# sourceMappingURL=internal-path.js.map","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst pathHelper = __importStar(require(\"./internal-path-helper\"));\nconst internal_match_kind_1 = require(\"./internal-match-kind\");\nconst IS_WINDOWS = process.platform === 'win32';\n/**\n * Given an array of patterns, returns an array of paths to search.\n * Duplicates and paths under other included paths are filtered out.\n */\nfunction getSearchPaths(patterns) {\n    // Ignore negate patterns\n    patterns = patterns.filter(x => !x.negate);\n    // Create a map of all search paths\n    const searchPathMap = {};\n    for (const pattern of patterns) {\n        const key = IS_WINDOWS\n            ? pattern.searchPath.toUpperCase()\n            : pattern.searchPath;\n        searchPathMap[key] = 'candidate';\n    }\n    const result = [];\n    for (const pattern of patterns) {\n        // Check if already included\n        const key = IS_WINDOWS\n            ? pattern.searchPath.toUpperCase()\n            : pattern.searchPath;\n        if (searchPathMap[key] === 'included') {\n            continue;\n        }\n        // Check for an ancestor search path\n        let foundAncestor = false;\n        let tempKey = key;\n        let parent = pathHelper.dirname(tempKey);\n        while (parent !== tempKey) {\n            if (searchPathMap[parent]) {\n                foundAncestor = true;\n                break;\n            }\n            tempKey = parent;\n            parent = pathHelper.dirname(tempKey);\n        }\n        // Include the search pattern in the result\n        if (!foundAncestor) {\n            result.push(pattern.searchPath);\n            searchPathMap[key] = 'included';\n        }\n    }\n    return result;\n}\nexports.getSearchPaths = getSearchPaths;\n/**\n * Matches the patterns against the path\n */\nfunction match(patterns, itemPath) {\n    let result = internal_match_kind_1.MatchKind.None;\n    for (const pattern of patterns) {\n        if (pattern.negate) {\n            result &= ~pattern.match(itemPath);\n        }\n        else {\n            result |= pattern.match(itemPath);\n        }\n    }\n    return result;\n}\nexports.match = match;\n/**\n * Checks whether to descend further into the directory\n */\nfunction partialMatch(patterns, itemPath) {\n    return patterns.some(x => !x.negate && x.partialMatch(itemPath));\n}\nexports.partialMatch = partialMatch;\n//# sourceMappingURL=internal-pattern-helper.js.map","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst pathHelper = __importStar(require(\"./internal-path-helper\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst minimatch_1 = require(\"minimatch\");\nconst internal_match_kind_1 = require(\"./internal-match-kind\");\nconst internal_path_1 = require(\"./internal-path\");\nconst IS_WINDOWS = process.platform === 'win32';\nclass Pattern {\n    constructor(patternOrNegate, segments, homedir) {\n        /**\n         * Indicates whether matches should be excluded from the result set\n         */\n        this.negate = false;\n        // Pattern overload\n        let pattern;\n        if (typeof patternOrNegate === 'string') {\n            pattern = patternOrNegate.trim();\n        }\n        // Segments overload\n        else {\n            // Convert to pattern\n            segments = segments || [];\n            assert_1.default(segments.length, `Parameter 'segments' must not empty`);\n            const root = Pattern.getLiteral(segments[0]);\n            assert_1.default(root && pathHelper.hasAbsoluteRoot(root), `Parameter 'segments' first element must be a root path`);\n            pattern = new internal_path_1.Path(segments).toString().trim();\n            if (patternOrNegate) {\n                pattern = `!${pattern}`;\n            }\n        }\n        // Negate\n        while (pattern.startsWith('!')) {\n            this.negate = !this.negate;\n            pattern = pattern.substr(1).trim();\n        }\n        // Normalize slashes and ensures absolute root\n        pattern = Pattern.fixupPattern(pattern, homedir);\n        // Segments\n        this.segments = new internal_path_1.Path(pattern).segments;\n        // Trailing slash indicates the pattern should only match directories, not regular files\n        this.trailingSeparator = pathHelper\n            .normalizeSeparators(pattern)\n            .endsWith(path.sep);\n        pattern = pathHelper.safeTrimTrailingSeparator(pattern);\n        // Search path (literal path prior to the first glob segment)\n        let foundGlob = false;\n        const searchSegments = this.segments\n            .map(x => Pattern.getLiteral(x))\n            .filter(x => !foundGlob && !(foundGlob = x === ''));\n        this.searchPath = new internal_path_1.Path(searchSegments).toString();\n        // Root RegExp (required when determining partial match)\n        this.rootRegExp = new RegExp(Pattern.regExpEscape(searchSegments[0]), IS_WINDOWS ? 'i' : '');\n        // Create minimatch\n        const minimatchOptions = {\n            dot: true,\n            nobrace: true,\n            nocase: IS_WINDOWS,\n            nocomment: true,\n            noext: true,\n            nonegate: true\n        };\n        pattern = IS_WINDOWS ? pattern.replace(/\\\\/g, '/') : pattern;\n        this.minimatch = new minimatch_1.Minimatch(pattern, minimatchOptions);\n    }\n    /**\n     * Matches the pattern against the specified path\n     */\n    match(itemPath) {\n        // Last segment is globstar?\n        if (this.segments[this.segments.length - 1] === '**') {\n            // Normalize slashes\n            itemPath = pathHelper.normalizeSeparators(itemPath);\n            // Append a trailing slash. Otherwise Minimatch will not match the directory immediately\n            // preceding the globstar. For example, given the pattern `/foo/**`, Minimatch returns\n            // false for `/foo` but returns true for `/foo/`. Append a trailing slash to handle that quirk.\n            if (!itemPath.endsWith(path.sep)) {\n                // Note, this is safe because the constructor ensures the pattern has an absolute root.\n                // For example, formats like C: and C:foo on Windows are resolved to an absolute root.\n                itemPath = `${itemPath}${path.sep}`;\n            }\n        }\n        else {\n            // Normalize slashes and trim unnecessary trailing slash\n            itemPath = pathHelper.safeTrimTrailingSeparator(itemPath);\n        }\n        // Match\n        if (this.minimatch.match(itemPath)) {\n            return this.trailingSeparator ? internal_match_kind_1.MatchKind.Directory : internal_match_kind_1.MatchKind.All;\n        }\n        return internal_match_kind_1.MatchKind.None;\n    }\n    /**\n     * Indicates whether the pattern may match descendants of the specified path\n     */\n    partialMatch(itemPath) {\n        // Normalize slashes and trim unnecessary trailing slash\n        itemPath = pathHelper.safeTrimTrailingSeparator(itemPath);\n        // matchOne does not handle root path correctly\n        if (pathHelper.dirname(itemPath) === itemPath) {\n            return this.rootRegExp.test(itemPath);\n        }\n        return this.minimatch.matchOne(itemPath.split(IS_WINDOWS ? /\\\\+/ : /\\/+/), this.minimatch.set[0], true);\n    }\n    /**\n     * Escapes glob patterns within a path\n     */\n    static globEscape(s) {\n        return (IS_WINDOWS ? s : s.replace(/\\\\/g, '\\\\\\\\')) // escape '\\' on Linux/macOS\n            .replace(/(\\[)(?=[^/]+\\])/g, '[[]') // escape '[' when ']' follows within the path segment\n            .replace(/\\?/g, '[?]') // escape '?'\n            .replace(/\\*/g, '[*]'); // escape '*'\n    }\n    /**\n     * Normalizes slashes and ensures absolute root\n     */\n    static fixupPattern(pattern, homedir) {\n        // Empty\n        assert_1.default(pattern, 'pattern cannot be empty');\n        // Must not contain `.` segment, unless first segment\n        // Must not contain `..` segment\n        const literalSegments = new internal_path_1.Path(pattern).segments.map(x => Pattern.getLiteral(x));\n        assert_1.default(literalSegments.every((x, i) => (x !== '.' || i === 0) && x !== '..'), `Invalid pattern '${pattern}'. Relative pathing '.' and '..' is not allowed.`);\n        // Must not contain globs in root, e.g. Windows UNC path \\\\foo\\b*r\n        assert_1.default(!pathHelper.hasRoot(pattern) || literalSegments[0], `Invalid pattern '${pattern}'. Root segment must not contain globs.`);\n        // Normalize slashes\n        pattern = pathHelper.normalizeSeparators(pattern);\n        // Replace leading `.` segment\n        if (pattern === '.' || pattern.startsWith(`.${path.sep}`)) {\n            pattern = Pattern.globEscape(process.cwd()) + pattern.substr(1);\n        }\n        // Replace leading `~` segment\n        else if (pattern === '~' || pattern.startsWith(`~${path.sep}`)) {\n            homedir = homedir || os.homedir();\n            assert_1.default(homedir, 'Unable to determine HOME directory');\n            assert_1.default(pathHelper.hasAbsoluteRoot(homedir), `Expected HOME directory to be a rooted path. Actual '${homedir}'`);\n            pattern = Pattern.globEscape(homedir) + pattern.substr(1);\n        }\n        // Replace relative drive root, e.g. pattern is C: or C:foo\n        else if (IS_WINDOWS &&\n            (pattern.match(/^[A-Z]:$/i) || pattern.match(/^[A-Z]:[^\\\\]/i))) {\n            let root = pathHelper.ensureAbsoluteRoot('C:\\\\dummy-root', pattern.substr(0, 2));\n            if (pattern.length > 2 && !root.endsWith('\\\\')) {\n                root += '\\\\';\n            }\n            pattern = Pattern.globEscape(root) + pattern.substr(2);\n        }\n        // Replace relative root, e.g. pattern is \\ or \\foo\n        else if (IS_WINDOWS && (pattern === '\\\\' || pattern.match(/^\\\\[^\\\\]/))) {\n            let root = pathHelper.ensureAbsoluteRoot('C:\\\\dummy-root', '\\\\');\n            if (!root.endsWith('\\\\')) {\n                root += '\\\\';\n            }\n            pattern = Pattern.globEscape(root) + pattern.substr(1);\n        }\n        // Otherwise ensure absolute root\n        else {\n            pattern = pathHelper.ensureAbsoluteRoot(Pattern.globEscape(process.cwd()), pattern);\n        }\n        return pathHelper.normalizeSeparators(pattern);\n    }\n    /**\n     * Attempts to unescape a pattern segment to create a literal path segment.\n     * Otherwise returns empty string.\n     */\n    static getLiteral(segment) {\n        let literal = '';\n        for (let i = 0; i < segment.length; i++) {\n            const c = segment[i];\n            // Escape\n            if (c === '\\\\' && !IS_WINDOWS && i + 1 < segment.length) {\n                literal += segment[++i];\n                continue;\n            }\n            // Wildcard\n            else if (c === '*' || c === '?') {\n                return '';\n            }\n            // Character set\n            else if (c === '[' && i + 1 < segment.length) {\n                let set = '';\n                let closed = -1;\n                for (let i2 = i + 1; i2 < segment.length; i2++) {\n                    const c2 = segment[i2];\n                    // Escape\n                    if (c2 === '\\\\' && !IS_WINDOWS && i2 + 1 < segment.length) {\n                        set += segment[++i2];\n                        continue;\n                    }\n                    // Closed\n                    else if (c2 === ']') {\n                        closed = i2;\n                        break;\n                    }\n                    // Otherwise\n                    else {\n                        set += c2;\n                    }\n                }\n                // Closed?\n                if (closed >= 0) {\n                    // Cannot convert\n                    if (set.length > 1) {\n                        return '';\n                    }\n                    // Convert to literal\n                    if (set) {\n                        literal += set;\n                        i = closed;\n                        continue;\n                    }\n                }\n                // Otherwise fall thru\n            }\n            // Append\n            literal += c;\n        }\n        return literal;\n    }\n    /**\n     * Escapes regexp special characters\n     * https://javascript.info/regexp-escaping\n     */\n    static regExpEscape(s) {\n        return s.replace(/[[\\\\^$.|?*+()]/g, '\\\\$&');\n    }\n}\nexports.Pattern = Pattern;\n//# sourceMappingURL=internal-pattern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SearchState {\n    constructor(path, level) {\n        this.path = path;\n        this.level = level;\n    }\n}\nexports.SearchState = SearchState;\n//# sourceMappingURL=internal-search-state.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst pm = require(\"./proxy\");\nlet tunnel;\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    let proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return new Promise(async (resolve, reject) => {\n            let output = Buffer.alloc(0);\n            this.message.on('data', (chunk) => {\n                output = Buffer.concat([output, chunk]);\n            });\n            this.message.on('end', () => {\n                resolve(output.toString());\n            });\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    let parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n    }\n    get(requestUrl, additionalHeaders) {\n        return this.request('GET', requestUrl, null, additionalHeaders || {});\n    }\n    del(requestUrl, additionalHeaders) {\n        return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return this.request('POST', requestUrl, data, additionalHeaders || {});\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return this.request('PUT', requestUrl, data, additionalHeaders || {});\n    }\n    head(requestUrl, additionalHeaders) {\n        return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return this.request(verb, requestUrl, stream, additionalHeaders);\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    async getJson(requestUrl, additionalHeaders = {}) {\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        let res = await this.get(requestUrl, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async postJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.post(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async putJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.put(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async patchJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.patch(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    async request(verb, requestUrl, data, headers) {\n        if (this._disposed) {\n            throw new Error('Client has already been disposed.');\n        }\n        let parsedUrl = new URL(requestUrl);\n        let info = this._prepareRequest(verb, parsedUrl, headers);\n        // Only perform retries on reads since writes may not be idempotent.\n        let maxTries = this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1\n            ? this._maxRetries + 1\n            : 1;\n        let numTries = 0;\n        let response;\n        while (numTries < maxTries) {\n            response = await this.requestRaw(info, data);\n            // Check if it's an authentication challenge\n            if (response &&\n                response.message &&\n                response.message.statusCode === HttpCodes.Unauthorized) {\n                let authenticationHandler;\n                for (let i = 0; i < this.handlers.length; i++) {\n                    if (this.handlers[i].canHandleAuthentication(response)) {\n                        authenticationHandler = this.handlers[i];\n                        break;\n                    }\n                }\n                if (authenticationHandler) {\n                    return authenticationHandler.handleAuthentication(this, info, data);\n                }\n                else {\n                    // We have received an unauthorized response but have no handlers to handle it.\n                    // Let the response return to the caller.\n                    return response;\n                }\n            }\n            let redirectsRemaining = this._maxRedirects;\n            while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1 &&\n                this._allowRedirects &&\n                redirectsRemaining > 0) {\n                const redirectUrl = response.message.headers['location'];\n                if (!redirectUrl) {\n                    // if there's no location to redirect to, we won't\n                    break;\n                }\n                let parsedRedirectUrl = new URL(redirectUrl);\n                if (parsedUrl.protocol == 'https:' &&\n                    parsedUrl.protocol != parsedRedirectUrl.protocol &&\n                    !this._allowRedirectDowngrade) {\n                    throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                }\n                // we need to finish reading the response before reassigning response\n                // which will leak the open socket.\n                await response.readBody();\n                // strip authorization header if redirected to a different hostname\n                if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                    for (let header in headers) {\n                        // header names are case insensitive\n                        if (header.toLowerCase() === 'authorization') {\n                            delete headers[header];\n                        }\n                    }\n                }\n                // let's make the request with the new redirectUrl\n                info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                response = await this.requestRaw(info, data);\n                redirectsRemaining--;\n            }\n            if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {\n                // If not a retry code, return immediately instead of retrying\n                return response;\n            }\n            numTries += 1;\n            if (numTries < maxTries) {\n                await response.readBody();\n                await this._performExponentialBackoff(numTries);\n            }\n        }\n        return response;\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return new Promise((resolve, reject) => {\n            let callbackForResult = function (err, res) {\n                if (err) {\n                    reject(err);\n                }\n                resolve(res);\n            };\n            this.requestRawWithCallback(info, data, callbackForResult);\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        let socket;\n        if (typeof data === 'string') {\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        let handleResult = (err, res) => {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        };\n        let req = info.httpModule.request(info.options, (msg) => {\n            let res = new HttpClientResponse(msg);\n            handleResult(null, res);\n        });\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error('Request timeout: ' + info.options.path), null);\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err, null);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        let parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            this.handlers.forEach(handler => {\n                handler.prepareRequest(info.options);\n            });\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        let proxyUrl = pm.getProxyUrl(parsedUrl);\n        let useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (!!agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (!!this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        if (useProxy) {\n            // If using proxy, need tunnel\n            if (!tunnel) {\n                tunnel = require('tunnel');\n            }\n            const agentOptions = {\n                maxSockets: maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: {\n                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`,\n                    host: proxyUrl.hostname,\n                    port: proxyUrl.port\n                }\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n        return new Promise(resolve => setTimeout(() => resolve(), ms));\n    }\n    static dateTimeDeserializer(key, value) {\n        if (typeof value === 'string') {\n            let a = new Date(value);\n            if (!isNaN(a.valueOf())) {\n                return a;\n            }\n        }\n        return value;\n    }\n    async _processResponse(res, options) {\n        return new Promise(async (resolve, reject) => {\n            const statusCode = res.message.statusCode;\n            const response = {\n                statusCode: statusCode,\n                result: null,\n                headers: {}\n            };\n            // not found leads to null obj returned\n            if (statusCode == HttpCodes.NotFound) {\n                resolve(response);\n            }\n            let obj;\n            let contents;\n            // get the result from the body\n            try {\n                contents = await res.readBody();\n                if (contents && contents.length > 0) {\n                    if (options && options.deserializeDates) {\n                        obj = JSON.parse(contents, HttpClient.dateTimeDeserializer);\n                    }\n                    else {\n                        obj = JSON.parse(contents);\n                    }\n                    response.result = obj;\n                }\n                response.headers = res.message.headers;\n            }\n            catch (err) {\n                // Invalid resource (contents not json);  leaving result obj null\n            }\n            // note that 3xx redirects are handled by the http layer.\n            if (statusCode > 299) {\n                let msg;\n                // if exception/error in body, attempt to get better error\n                if (obj && obj.message) {\n                    msg = obj.message;\n                }\n                else if (contents && contents.length > 0) {\n                    // it may be the case that the exception is in the body message as string\n                    msg = contents;\n                }\n                else {\n                    msg = 'Failed request: (' + statusCode + ')';\n                }\n                let err = new HttpClientError(msg, statusCode);\n                err.result = response.result;\n                reject(err);\n            }\n            else {\n                resolve(response);\n            }\n        });\n    }\n}\nexports.HttpClient = HttpClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getProxyUrl(reqUrl) {\n    let usingSsl = reqUrl.protocol === 'https:';\n    let proxyUrl;\n    if (checkBypass(reqUrl)) {\n        return proxyUrl;\n    }\n    let proxyVar;\n    if (usingSsl) {\n        proxyVar = process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n    }\n    else {\n        proxyVar = process.env['http_proxy'] || process.env['HTTP_PROXY'];\n    }\n    if (proxyVar) {\n        proxyUrl = new URL(proxyVar);\n    }\n    return proxyUrl;\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    let noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    let upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (let upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nasync function auth(token) {\n  const tokenType = token.split(/\\./).length === 3 ? \"app\" : /^v\\d+\\./.test(token) ? \"installation\" : \"oauth\";\n  return {\n    type: \"token\",\n    token: token,\n    tokenType\n  };\n}\n\n/**\n * Prefix token for usage in the Authorization header\n *\n * @param token OAuth token or JSON Web Token\n */\nfunction withAuthorizationPrefix(token) {\n  if (token.split(/\\./).length === 3) {\n    return `bearer ${token}`;\n  }\n\n  return `token ${token}`;\n}\n\nasync function hook(token, request, route, parameters) {\n  const endpoint = request.endpoint.merge(route, parameters);\n  endpoint.headers.authorization = withAuthorizationPrefix(token);\n  return request(endpoint);\n}\n\nconst createTokenAuth = function createTokenAuth(token) {\n  if (!token) {\n    throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n  }\n\n  if (typeof token !== \"string\") {\n    throw new Error(\"[@octokit/auth-token] Token passed to createTokenAuth is not a string\");\n  }\n\n  token = token.replace(/^(token|bearer) +/i, \"\");\n  return Object.assign(auth.bind(null, token), {\n    hook: hook.bind(null, token)\n  });\n};\n\nexports.createTokenAuth = createTokenAuth;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar universalUserAgent = require('universal-user-agent');\nvar beforeAfterHook = require('before-after-hook');\nvar request = require('@octokit/request');\nvar graphql = require('@octokit/graphql');\nvar authToken = require('@octokit/auth-token');\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nconst VERSION = \"3.2.1\";\n\nclass Octokit {\n  constructor(options = {}) {\n    const hook = new beforeAfterHook.Collection();\n    const requestDefaults = {\n      baseUrl: request.request.endpoint.DEFAULTS.baseUrl,\n      headers: {},\n      request: Object.assign({}, options.request, {\n        hook: hook.bind(null, \"request\")\n      }),\n      mediaType: {\n        previews: [],\n        format: \"\"\n      }\n    }; // prepend default user agent with `options.userAgent` if set\n\n    requestDefaults.headers[\"user-agent\"] = [options.userAgent, `octokit-core.js/${VERSION} ${universalUserAgent.getUserAgent()}`].filter(Boolean).join(\" \");\n\n    if (options.baseUrl) {\n      requestDefaults.baseUrl = options.baseUrl;\n    }\n\n    if (options.previews) {\n      requestDefaults.mediaType.previews = options.previews;\n    }\n\n    if (options.timeZone) {\n      requestDefaults.headers[\"time-zone\"] = options.timeZone;\n    }\n\n    this.request = request.request.defaults(requestDefaults);\n    this.graphql = graphql.withCustomRequest(this.request).defaults(requestDefaults);\n    this.log = Object.assign({\n      debug: () => {},\n      info: () => {},\n      warn: console.warn.bind(console),\n      error: console.error.bind(console)\n    }, options.log);\n    this.hook = hook; // (1) If neither `options.authStrategy` nor `options.auth` are set, the `octokit` instance\n    //     is unauthenticated. The `this.auth()` method is a no-op and no request hook is registered.\n    // (2) If only `options.auth` is set, use the default token authentication strategy.\n    // (3) If `options.authStrategy` is set then use it and pass in `options.auth`. Always pass own request as many strategies accept a custom request instance.\n    // TODO: type `options.auth` based on `options.authStrategy`.\n\n    if (!options.authStrategy) {\n      if (!options.auth) {\n        // (1)\n        this.auth = async () => ({\n          type: \"unauthenticated\"\n        });\n      } else {\n        // (2)\n        const auth = authToken.createTokenAuth(options.auth); // @ts-ignore  ¯\\_(ツ)_/¯\n\n        hook.wrap(\"request\", auth.hook);\n        this.auth = auth;\n      }\n    } else {\n      const {\n        authStrategy\n      } = options,\n            otherOptions = _objectWithoutProperties(options, [\"authStrategy\"]);\n\n      const auth = authStrategy(Object.assign({\n        request: this.request,\n        log: this.log,\n        // we pass the current octokit instance as well as its constructor options\n        // to allow for authentication strategies that return a new octokit instance\n        // that shares the same internal state as the current one. The original\n        // requirement for this was the \"event-octokit\" authentication strategy\n        // of https://github.com/probot/octokit-auth-probot.\n        octokit: this,\n        octokitOptions: otherOptions\n      }, options.auth)); // @ts-ignore  ¯\\_(ツ)_/¯\n\n      hook.wrap(\"request\", auth.hook);\n      this.auth = auth;\n    } // apply plugins\n    // https://stackoverflow.com/a/16345172\n\n\n    const classConstructor = this.constructor;\n    classConstructor.plugins.forEach(plugin => {\n      Object.assign(this, plugin(this, options));\n    });\n  }\n\n  static defaults(defaults) {\n    const OctokitWithDefaults = class extends this {\n      constructor(...args) {\n        const options = args[0] || {};\n\n        if (typeof defaults === \"function\") {\n          super(defaults(options));\n          return;\n        }\n\n        super(Object.assign({}, defaults, options, options.userAgent && defaults.userAgent ? {\n          userAgent: `${options.userAgent} ${defaults.userAgent}`\n        } : null));\n      }\n\n    };\n    return OctokitWithDefaults;\n  }\n  /**\n   * Attach a plugin (or many) to your Octokit instance.\n   *\n   * @example\n   * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n   */\n\n\n  static plugin(...newPlugins) {\n    var _a;\n\n    const currentPlugins = this.plugins;\n    const NewOctokit = (_a = class extends this {}, _a.plugins = currentPlugins.concat(newPlugins.filter(plugin => !currentPlugins.includes(plugin))), _a);\n    return NewOctokit;\n  }\n\n}\nOctokit.VERSION = VERSION;\nOctokit.plugins = [];\n\nexports.Octokit = Octokit;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar isPlainObject = require('is-plain-object');\nvar universalUserAgent = require('universal-user-agent');\n\nfunction lowercaseKeys(object) {\n  if (!object) {\n    return {};\n  }\n\n  return Object.keys(object).reduce((newObj, key) => {\n    newObj[key.toLowerCase()] = object[key];\n    return newObj;\n  }, {});\n}\n\nfunction mergeDeep(defaults, options) {\n  const result = Object.assign({}, defaults);\n  Object.keys(options).forEach(key => {\n    if (isPlainObject.isPlainObject(options[key])) {\n      if (!(key in defaults)) Object.assign(result, {\n        [key]: options[key]\n      });else result[key] = mergeDeep(defaults[key], options[key]);\n    } else {\n      Object.assign(result, {\n        [key]: options[key]\n      });\n    }\n  });\n  return result;\n}\n\nfunction removeUndefinedProperties(obj) {\n  for (const key in obj) {\n    if (obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n\n  return obj;\n}\n\nfunction merge(defaults, route, options) {\n  if (typeof route === \"string\") {\n    let [method, url] = route.split(\" \");\n    options = Object.assign(url ? {\n      method,\n      url\n    } : {\n      url: method\n    }, options);\n  } else {\n    options = Object.assign({}, route);\n  } // lowercase header names before merging with defaults to avoid duplicates\n\n\n  options.headers = lowercaseKeys(options.headers); // remove properties with undefined values before merging\n\n  removeUndefinedProperties(options);\n  removeUndefinedProperties(options.headers);\n  const mergedOptions = mergeDeep(defaults || {}, options); // mediaType.previews arrays are merged, instead of overwritten\n\n  if (defaults && defaults.mediaType.previews.length) {\n    mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(preview => !mergedOptions.mediaType.previews.includes(preview)).concat(mergedOptions.mediaType.previews);\n  }\n\n  mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map(preview => preview.replace(/-preview/, \"\"));\n  return mergedOptions;\n}\n\nfunction addQueryParameters(url, parameters) {\n  const separator = /\\?/.test(url) ? \"&\" : \"?\";\n  const names = Object.keys(parameters);\n\n  if (names.length === 0) {\n    return url;\n  }\n\n  return url + separator + names.map(name => {\n    if (name === \"q\") {\n      return \"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\");\n    }\n\n    return `${name}=${encodeURIComponent(parameters[name])}`;\n  }).join(\"&\");\n}\n\nconst urlVariableRegex = /\\{[^}]+\\}/g;\n\nfunction removeNonChars(variableName) {\n  return variableName.replace(/^\\W+|\\W+$/g, \"\").split(/,/);\n}\n\nfunction extractUrlVariableNames(url) {\n  const matches = url.match(urlVariableRegex);\n\n  if (!matches) {\n    return [];\n  }\n\n  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n}\n\nfunction omit(object, keysToOmit) {\n  return Object.keys(object).filter(option => !keysToOmit.includes(option)).reduce((obj, key) => {\n    obj[key] = object[key];\n    return obj;\n  }, {});\n}\n\n// Based on https://github.com/bramstein/url-template, licensed under BSD\n// TODO: create separate package.\n//\n// Copyright (c) 2012-2014, Bram Stein\n// All rights reserved.\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions\n// are met:\n//  1. Redistributions of source code must retain the above copyright\n//     notice, this list of conditions and the following disclaimer.\n//  2. Redistributions in binary form must reproduce the above copyright\n//     notice, this list of conditions and the following disclaimer in the\n//     documentation and/or other materials provided with the distribution.\n//  3. The name of the author may not be used to endorse or promote products\n//     derived from this software without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE AUTHOR \"AS IS\" AND ANY EXPRESS OR IMPLIED\n// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n// EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* istanbul ignore file */\nfunction encodeReserved(str) {\n  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n    if (!/%[0-9A-Fa-f]/.test(part)) {\n      part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n    }\n\n    return part;\n  }).join(\"\");\n}\n\nfunction encodeUnreserved(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n    return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\nfunction encodeValue(operator, value, key) {\n  value = operator === \"+\" || operator === \"#\" ? encodeReserved(value) : encodeUnreserved(value);\n\n  if (key) {\n    return encodeUnreserved(key) + \"=\" + value;\n  } else {\n    return value;\n  }\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n  return operator === \";\" || operator === \"&\" || operator === \"?\";\n}\n\nfunction getValues(context, operator, key, modifier) {\n  var value = context[key],\n      result = [];\n\n  if (isDefined(value) && value !== \"\") {\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n      value = value.toString();\n\n      if (modifier && modifier !== \"*\") {\n        value = value.substring(0, parseInt(modifier, 10));\n      }\n\n      result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n    } else {\n      if (modifier === \"*\") {\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function (value) {\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n          });\n        } else {\n          Object.keys(value).forEach(function (k) {\n            if (isDefined(value[k])) {\n              result.push(encodeValue(operator, value[k], k));\n            }\n          });\n        }\n      } else {\n        const tmp = [];\n\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function (value) {\n            tmp.push(encodeValue(operator, value));\n          });\n        } else {\n          Object.keys(value).forEach(function (k) {\n            if (isDefined(value[k])) {\n              tmp.push(encodeUnreserved(k));\n              tmp.push(encodeValue(operator, value[k].toString()));\n            }\n          });\n        }\n\n        if (isKeyOperator(operator)) {\n          result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n        } else if (tmp.length !== 0) {\n          result.push(tmp.join(\",\"));\n        }\n      }\n    }\n  } else {\n    if (operator === \";\") {\n      if (isDefined(value)) {\n        result.push(encodeUnreserved(key));\n      }\n    } else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n      result.push(encodeUnreserved(key) + \"=\");\n    } else if (value === \"\") {\n      result.push(\"\");\n    }\n  }\n\n  return result;\n}\n\nfunction parseUrl(template) {\n  return {\n    expand: expand.bind(null, template)\n  };\n}\n\nfunction expand(template, context) {\n  var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n  return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n    if (expression) {\n      let operator = \"\";\n      const values = [];\n\n      if (operators.indexOf(expression.charAt(0)) !== -1) {\n        operator = expression.charAt(0);\n        expression = expression.substr(1);\n      }\n\n      expression.split(/,/g).forEach(function (variable) {\n        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n        values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n      });\n\n      if (operator && operator !== \"+\") {\n        var separator = \",\";\n\n        if (operator === \"?\") {\n          separator = \"&\";\n        } else if (operator !== \"#\") {\n          separator = operator;\n        }\n\n        return (values.length !== 0 ? operator : \"\") + values.join(separator);\n      } else {\n        return values.join(\",\");\n      }\n    } else {\n      return encodeReserved(literal);\n    }\n  });\n}\n\nfunction parse(options) {\n  // https://fetch.spec.whatwg.org/#methods\n  let method = options.method.toUpperCase(); // replace :varname with {varname} to make it RFC 6570 compatible\n\n  let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n  let headers = Object.assign({}, options.headers);\n  let body;\n  let parameters = omit(options, [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"mediaType\"]); // extract variable names from URL to calculate remaining variables later\n\n  const urlVariableNames = extractUrlVariableNames(url);\n  url = parseUrl(url).expand(parameters);\n\n  if (!/^http/.test(url)) {\n    url = options.baseUrl + url;\n  }\n\n  const omittedParameters = Object.keys(options).filter(option => urlVariableNames.includes(option)).concat(\"baseUrl\");\n  const remainingParameters = omit(parameters, omittedParameters);\n  const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n\n  if (!isBinaryRequest) {\n    if (options.mediaType.format) {\n      // e.g. application/vnd.github.v3+json => application/vnd.github.v3.raw\n      headers.accept = headers.accept.split(/,/).map(preview => preview.replace(/application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`)).join(\",\");\n    }\n\n    if (options.mediaType.previews.length) {\n      const previewsFromAcceptHeader = headers.accept.match(/[\\w-]+(?=-preview)/g) || [];\n      headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map(preview => {\n        const format = options.mediaType.format ? `.${options.mediaType.format}` : \"+json\";\n        return `application/vnd.github.${preview}-preview${format}`;\n      }).join(\",\");\n    }\n  } // for GET/HEAD requests, set URL query parameters from remaining parameters\n  // for PATCH/POST/PUT/DELETE requests, set request body from remaining parameters\n\n\n  if ([\"GET\", \"HEAD\"].includes(method)) {\n    url = addQueryParameters(url, remainingParameters);\n  } else {\n    if (\"data\" in remainingParameters) {\n      body = remainingParameters.data;\n    } else {\n      if (Object.keys(remainingParameters).length) {\n        body = remainingParameters;\n      } else {\n        headers[\"content-length\"] = 0;\n      }\n    }\n  } // default content-type for JSON if body is set\n\n\n  if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n    headers[\"content-type\"] = \"application/json; charset=utf-8\";\n  } // GitHub expects 'content-length: 0' header for PUT/PATCH requests without body.\n  // fetch does not allow to set `content-length` header, but we can set body to an empty string\n\n\n  if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n    body = \"\";\n  } // Only return body/request keys if present\n\n\n  return Object.assign({\n    method,\n    url,\n    headers\n  }, typeof body !== \"undefined\" ? {\n    body\n  } : null, options.request ? {\n    request: options.request\n  } : null);\n}\n\nfunction endpointWithDefaults(defaults, route, options) {\n  return parse(merge(defaults, route, options));\n}\n\nfunction withDefaults(oldDefaults, newDefaults) {\n  const DEFAULTS = merge(oldDefaults, newDefaults);\n  const endpoint = endpointWithDefaults.bind(null, DEFAULTS);\n  return Object.assign(endpoint, {\n    DEFAULTS,\n    defaults: withDefaults.bind(null, DEFAULTS),\n    merge: merge.bind(null, DEFAULTS),\n    parse\n  });\n}\n\nconst VERSION = \"6.0.9\";\n\nconst userAgent = `octokit-endpoint.js/${VERSION} ${universalUserAgent.getUserAgent()}`; // DEFAULTS has all properties set that EndpointOptions has, except url.\n// So we use RequestParameters and add method as additional required property.\n\nconst DEFAULTS = {\n  method: \"GET\",\n  baseUrl: \"https://api.github.com\",\n  headers: {\n    accept: \"application/vnd.github.v3+json\",\n    \"user-agent\": userAgent\n  },\n  mediaType: {\n    format: \"\",\n    previews: []\n  }\n};\n\nconst endpoint = withDefaults(null, DEFAULTS);\n\nexports.endpoint = endpoint;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexports.isPlainObject = isPlainObject;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar request = require('@octokit/request');\nvar universalUserAgent = require('universal-user-agent');\n\nconst VERSION = \"4.5.7\";\n\nclass GraphqlError extends Error {\n  constructor(request, response) {\n    const message = response.data.errors[0].message;\n    super(message);\n    Object.assign(this, response.data);\n    Object.assign(this, {\n      headers: response.headers\n    });\n    this.name = \"GraphqlError\";\n    this.request = request; // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n\n}\n\nconst NON_VARIABLE_OPTIONS = [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"query\", \"mediaType\"];\nconst GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nfunction graphql(request, query, options) {\n  if (typeof query === \"string\" && options && \"query\" in options) {\n    return Promise.reject(new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`));\n  }\n\n  const parsedOptions = typeof query === \"string\" ? Object.assign({\n    query\n  }, options) : query;\n  const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {\n    if (NON_VARIABLE_OPTIONS.includes(key)) {\n      result[key] = parsedOptions[key];\n      return result;\n    }\n\n    if (!result.variables) {\n      result.variables = {};\n    }\n\n    result.variables[key] = parsedOptions[key];\n    return result;\n  }, {}); // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix\n  // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451\n\n  const baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;\n\n  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n  }\n\n  return request(requestOptions).then(response => {\n    if (response.data.errors) {\n      const headers = {};\n\n      for (const key of Object.keys(response.headers)) {\n        headers[key] = response.headers[key];\n      }\n\n      throw new GraphqlError(requestOptions, {\n        headers,\n        data: response.data\n      });\n    }\n\n    return response.data.data;\n  });\n}\n\nfunction withDefaults(request$1, newDefaults) {\n  const newRequest = request$1.defaults(newDefaults);\n\n  const newApi = (query, options) => {\n    return graphql(newRequest, query, options);\n  };\n\n  return Object.assign(newApi, {\n    defaults: withDefaults.bind(null, newRequest),\n    endpoint: request.request.endpoint\n  });\n}\n\nconst graphql$1 = withDefaults(request.request, {\n  headers: {\n    \"user-agent\": `octokit-graphql.js/${VERSION} ${universalUserAgent.getUserAgent()}`\n  },\n  method: \"POST\",\n  url: \"/graphql\"\n});\nfunction withCustomRequest(customRequest) {\n  return withDefaults(customRequest, {\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n}\n\nexports.graphql = graphql$1;\nexports.withCustomRequest = withCustomRequest;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst VERSION = \"2.6.0\";\n\n/**\n * Some “list” response that can be paginated have a different response structure\n *\n * They have a `total_count` key in the response (search also has `incomplete_results`,\n * /installation/repositories also has `repository_selection`), as well as a key with\n * the list of the items which name varies from endpoint to endpoint.\n *\n * Octokit normalizes these responses so that paginated results are always returned following\n * the same structure. One challenge is that if the list response has only one page, no Link\n * header is provided, so this header alone is not sufficient to check wether a response is\n * paginated or not.\n *\n * We check if a \"total_count\" key is present in the response data, but also make sure that\n * a \"url\" property is not, as the \"Get the combined status for a specific ref\" endpoint would\n * otherwise match: https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref\n */\nfunction normalizePaginatedListResponse(response) {\n  const responseNeedsNormalization = \"total_count\" in response.data && !(\"url\" in response.data);\n  if (!responseNeedsNormalization) return response; // keep the additional properties intact as there is currently no other way\n  // to retrieve the same information.\n\n  const incompleteResults = response.data.incomplete_results;\n  const repositorySelection = response.data.repository_selection;\n  const totalCount = response.data.total_count;\n  delete response.data.incomplete_results;\n  delete response.data.repository_selection;\n  delete response.data.total_count;\n  const namespaceKey = Object.keys(response.data)[0];\n  const data = response.data[namespaceKey];\n  response.data = data;\n\n  if (typeof incompleteResults !== \"undefined\") {\n    response.data.incomplete_results = incompleteResults;\n  }\n\n  if (typeof repositorySelection !== \"undefined\") {\n    response.data.repository_selection = repositorySelection;\n  }\n\n  response.data.total_count = totalCount;\n  return response;\n}\n\nfunction iterator(octokit, route, parameters) {\n  const options = typeof route === \"function\" ? route.endpoint(parameters) : octokit.request.endpoint(route, parameters);\n  const requestMethod = typeof route === \"function\" ? route : octokit.request;\n  const method = options.method;\n  const headers = options.headers;\n  let url = options.url;\n  return {\n    [Symbol.asyncIterator]: () => ({\n      async next() {\n        if (!url) return {\n          done: true\n        };\n        const response = await requestMethod({\n          method,\n          url,\n          headers\n        });\n        const normalizedResponse = normalizePaginatedListResponse(response); // `response.headers.link` format:\n        // '<https://api.github.com/users/aseemk/followers?page=2>; rel=\"next\", <https://api.github.com/users/aseemk/followers?page=2>; rel=\"last\"'\n        // sets `url` to undefined if \"next\" URL is not present or `link` header is not set\n\n        url = ((normalizedResponse.headers.link || \"\").match(/<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n        return {\n          value: normalizedResponse\n        };\n      }\n\n    })\n  };\n}\n\nfunction paginate(octokit, route, parameters, mapFn) {\n  if (typeof parameters === \"function\") {\n    mapFn = parameters;\n    parameters = undefined;\n  }\n\n  return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);\n}\n\nfunction gather(octokit, results, iterator, mapFn) {\n  return iterator.next().then(result => {\n    if (result.done) {\n      return results;\n    }\n\n    let earlyExit = false;\n\n    function done() {\n      earlyExit = true;\n    }\n\n    results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);\n\n    if (earlyExit) {\n      return results;\n    }\n\n    return gather(octokit, results, iterator, mapFn);\n  });\n}\n\nconst composePaginateRest = Object.assign(paginate, {\n  iterator\n});\n\n/**\n * @param octokit Octokit instance\n * @param options Options passed to Octokit constructor\n */\n\nfunction paginateRest(octokit) {\n  return {\n    paginate: Object.assign(paginate.bind(null, octokit), {\n      iterator: iterator.bind(null, octokit)\n    })\n  };\n}\npaginateRest.VERSION = VERSION;\n\nexports.composePaginateRest = composePaginateRest;\nexports.paginateRest = paginateRest;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst Endpoints = {\n  actions: {\n    addSelectedRepoToOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"],\n    cancelWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\"],\n    createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n    createOrUpdateRepoSecret: [\"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    createRegistrationTokenForOrg: [\"POST /orgs/{org}/actions/runners/registration-token\"],\n    createRegistrationTokenForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/registration-token\"],\n    createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n    createRemoveTokenForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/remove-token\"],\n    createWorkflowDispatch: [\"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\"],\n    deleteArtifact: [\"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n    deleteRepoSecret: [\"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    deleteSelfHostedRunnerFromOrg: [\"DELETE /orgs/{org}/actions/runners/{runner_id}\"],\n    deleteSelfHostedRunnerFromRepo: [\"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\"],\n    deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    deleteWorkflowRunLogs: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"],\n    downloadArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\"],\n    downloadJobLogsForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\"],\n    downloadWorkflowRunLogs: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"],\n    getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n    getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n    getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n    getSelfHostedRunnerForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\"],\n    getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n    getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    getWorkflowRunUsage: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\"],\n    getWorkflowUsage: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\"],\n    listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n    listJobsForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\"],\n    listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n    listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n    listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n    listRunnerApplicationsForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/downloads\"],\n    listSelectedReposForOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\"],\n    listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n    listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n    listWorkflowRunArtifacts: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\"],\n    listWorkflowRuns: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\"],\n    listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n    reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n    removeSelectedRepoFromOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"],\n    setSelectedReposForOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\"]\n  },\n  activity: {\n    checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n    deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n    deleteThreadSubscription: [\"DELETE /notifications/threads/{thread_id}/subscription\"],\n    getFeeds: [\"GET /feeds\"],\n    getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n    getThread: [\"GET /notifications/threads/{thread_id}\"],\n    getThreadSubscriptionForAuthenticatedUser: [\"GET /notifications/threads/{thread_id}/subscription\"],\n    listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n    listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n    listOrgEventsForAuthenticatedUser: [\"GET /users/{username}/events/orgs/{org}\"],\n    listPublicEvents: [\"GET /events\"],\n    listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n    listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n    listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n    listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n    listReceivedPublicEventsForUser: [\"GET /users/{username}/received_events/public\"],\n    listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n    listRepoNotificationsForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/notifications\"],\n    listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n    listReposStarredByUser: [\"GET /users/{username}/starred\"],\n    listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n    listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n    listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n    listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n    markNotificationsAsRead: [\"PUT /notifications\"],\n    markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n    markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n    setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n    setThreadSubscription: [\"PUT /notifications/threads/{thread_id}/subscription\"],\n    starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n    unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"]\n  },\n  apps: {\n    addRepoToInstallation: [\"PUT /user/installations/{installation_id}/repositories/{repository_id}\"],\n    checkToken: [\"POST /applications/{client_id}/token\"],\n    createContentAttachment: [\"POST /content_references/{content_reference_id}/attachments\", {\n      mediaType: {\n        previews: [\"corsair\"]\n      }\n    }],\n    createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n    createInstallationAccessToken: [\"POST /app/installations/{installation_id}/access_tokens\"],\n    deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n    deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n    deleteToken: [\"DELETE /applications/{client_id}/token\"],\n    getAuthenticated: [\"GET /app\"],\n    getBySlug: [\"GET /apps/{app_slug}\"],\n    getInstallation: [\"GET /app/installations/{installation_id}\"],\n    getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n    getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n    getSubscriptionPlanForAccount: [\"GET /marketplace_listing/accounts/{account_id}\"],\n    getSubscriptionPlanForAccountStubbed: [\"GET /marketplace_listing/stubbed/accounts/{account_id}\"],\n    getUserInstallation: [\"GET /users/{username}/installation\"],\n    listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n    listAccountsForPlanStubbed: [\"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\"],\n    listInstallationReposForAuthenticatedUser: [\"GET /user/installations/{installation_id}/repositories\"],\n    listInstallations: [\"GET /app/installations\"],\n    listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n    listPlans: [\"GET /marketplace_listing/plans\"],\n    listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n    listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n    listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n    listSubscriptionsForAuthenticatedUserStubbed: [\"GET /user/marketplace_purchases/stubbed\"],\n    removeRepoFromInstallation: [\"DELETE /user/installations/{installation_id}/repositories/{repository_id}\"],\n    resetToken: [\"PATCH /applications/{client_id}/token\"],\n    revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n    suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n    unsuspendInstallation: [\"DELETE /app/installations/{installation_id}/suspended\"]\n  },\n  billing: {\n    getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n    getGithubActionsBillingUser: [\"GET /users/{username}/settings/billing/actions\"],\n    getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n    getGithubPackagesBillingUser: [\"GET /users/{username}/settings/billing/packages\"],\n    getSharedStorageBillingOrg: [\"GET /orgs/{org}/settings/billing/shared-storage\"],\n    getSharedStorageBillingUser: [\"GET /users/{username}/settings/billing/shared-storage\"]\n  },\n  checks: {\n    create: [\"POST /repos/{owner}/{repo}/check-runs\", {\n      mediaType: {\n        previews: [\"antiope\"]\n      }\n    }],\n    createSuite: [\"POST /repos/{owner}/{repo}/check-suites\", {\n      mediaType: {\n        previews: [\"antiope\"]\n      }\n    }],\n    get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\", {\n      mediaType: {\n        previews: [\"antiope\"]\n      }\n    }],\n    getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\", {\n      mediaType: {\n        previews: [\"antiope\"]\n      }\n    }],\n    listAnnotations: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\", {\n      mediaType: {\n        previews: [\"antiope\"]\n      }\n    }],\n    listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\", {\n      mediaType: {\n        previews: [\"antiope\"]\n      }\n    }],\n    listForSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\", {\n      mediaType: {\n        previews: [\"antiope\"]\n      }\n    }],\n    listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\", {\n      mediaType: {\n        previews: [\"antiope\"]\n      }\n    }],\n    rerequestSuite: [\"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\", {\n      mediaType: {\n        previews: [\"antiope\"]\n      }\n    }],\n    setSuitesPreferences: [\"PATCH /repos/{owner}/{repo}/check-suites/preferences\", {\n      mediaType: {\n        previews: [\"antiope\"]\n      }\n    }],\n    update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\", {\n      mediaType: {\n        previews: [\"antiope\"]\n      }\n    }]\n  },\n  codeScanning: {\n    getAlert: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\", {}, {\n      renamedParameters: {\n        alert_id: \"alert_number\"\n      }\n    }],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n    listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n    updateAlert: [\"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\"],\n    uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"]\n  },\n  codesOfConduct: {\n    getAllCodesOfConduct: [\"GET /codes_of_conduct\", {\n      mediaType: {\n        previews: [\"scarlet-witch\"]\n      }\n    }],\n    getConductCode: [\"GET /codes_of_conduct/{key}\", {\n      mediaType: {\n        previews: [\"scarlet-witch\"]\n      }\n    }],\n    getForRepo: [\"GET /repos/{owner}/{repo}/community/code_of_conduct\", {\n      mediaType: {\n        previews: [\"scarlet-witch\"]\n      }\n    }]\n  },\n  emojis: {\n    get: [\"GET /emojis\"]\n  },\n  gists: {\n    checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n    create: [\"POST /gists\"],\n    createComment: [\"POST /gists/{gist_id}/comments\"],\n    delete: [\"DELETE /gists/{gist_id}\"],\n    deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n    fork: [\"POST /gists/{gist_id}/forks\"],\n    get: [\"GET /gists/{gist_id}\"],\n    getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n    getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n    list: [\"GET /gists\"],\n    listComments: [\"GET /gists/{gist_id}/comments\"],\n    listCommits: [\"GET /gists/{gist_id}/commits\"],\n    listForUser: [\"GET /users/{username}/gists\"],\n    listForks: [\"GET /gists/{gist_id}/forks\"],\n    listPublic: [\"GET /gists/public\"],\n    listStarred: [\"GET /gists/starred\"],\n    star: [\"PUT /gists/{gist_id}/star\"],\n    unstar: [\"DELETE /gists/{gist_id}/star\"],\n    update: [\"PATCH /gists/{gist_id}\"],\n    updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"]\n  },\n  git: {\n    createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n    createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n    createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n    createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n    createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n    deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n    getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n    getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n    getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n    getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n    listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n    updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"]\n  },\n  gitignore: {\n    getAllTemplates: [\"GET /gitignore/templates\"],\n    getTemplate: [\"GET /gitignore/templates/{name}\"]\n  },\n  interactions: {\n    getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\", {\n      mediaType: {\n        previews: [\"sombra\"]\n      }\n    }],\n    getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\", {\n      mediaType: {\n        previews: [\"sombra\"]\n      }\n    }],\n    removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\", {\n      mediaType: {\n        previews: [\"sombra\"]\n      }\n    }],\n    removeRestrictionsForRepo: [\"DELETE /repos/{owner}/{repo}/interaction-limits\", {\n      mediaType: {\n        previews: [\"sombra\"]\n      }\n    }],\n    setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\", {\n      mediaType: {\n        previews: [\"sombra\"]\n      }\n    }],\n    setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\", {\n      mediaType: {\n        previews: [\"sombra\"]\n      }\n    }]\n  },\n  issues: {\n    addAssignees: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\"],\n    addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n    create: [\"POST /repos/{owner}/{repo}/issues\"],\n    createComment: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n    createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n    deleteComment: [\"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n    deleteMilestone: [\"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n    getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n    getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n    getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    list: [\"GET /issues\"],\n    listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n    listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n    listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n    listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n    listEventsForTimeline: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\", {\n      mediaType: {\n        previews: [\"mockingbird\"]\n      }\n    }],\n    listForAuthenticatedUser: [\"GET /user/issues\"],\n    listForOrg: [\"GET /orgs/{org}/issues\"],\n    listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n    listLabelsForMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\"],\n    listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n    listLabelsOnIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n    lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    removeAllLabels: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    removeAssignees: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\"],\n    removeLabel: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\"],\n    setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n    updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n    updateMilestone: [\"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\"]\n  },\n  licenses: {\n    get: [\"GET /licenses/{license}\"],\n    getAllCommonlyUsed: [\"GET /licenses\"],\n    getForRepo: [\"GET /repos/{owner}/{repo}/license\"]\n  },\n  markdown: {\n    render: [\"POST /markdown\"],\n    renderRaw: [\"POST /markdown/raw\", {\n      headers: {\n        \"content-type\": \"text/plain; charset=utf-8\"\n      }\n    }]\n  },\n  meta: {\n    get: [\"GET /meta\"]\n  },\n  migrations: {\n    cancelImport: [\"DELETE /repos/{owner}/{repo}/import\"],\n    deleteArchiveForAuthenticatedUser: [\"DELETE /user/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    deleteArchiveForOrg: [\"DELETE /orgs/{org}/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    downloadArchiveForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    getArchiveForAuthenticatedUser: [\"GET /user/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    getCommitAuthors: [\"GET /repos/{owner}/{repo}/import/authors\"],\n    getImportStatus: [\"GET /repos/{owner}/{repo}/import\"],\n    getLargeFiles: [\"GET /repos/{owner}/{repo}/import/large_files\"],\n    getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listForAuthenticatedUser: [\"GET /user/migrations\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listForOrg: [\"GET /orgs/{org}/migrations\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listReposForUser: [\"GET /user/migrations/{migration_id}/repositories\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    mapCommitAuthor: [\"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\"],\n    setLfsPreference: [\"PATCH /repos/{owner}/{repo}/import/lfs\"],\n    startForAuthenticatedUser: [\"POST /user/migrations\"],\n    startForOrg: [\"POST /orgs/{org}/migrations\"],\n    startImport: [\"PUT /repos/{owner}/{repo}/import\"],\n    unlockRepoForAuthenticatedUser: [\"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    unlockRepoForOrg: [\"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    updateImport: [\"PATCH /repos/{owner}/{repo}/import\"]\n  },\n  orgs: {\n    blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n    checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n    checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n    checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n    convertMemberToOutsideCollaborator: [\"PUT /orgs/{org}/outside_collaborators/{username}\"],\n    createInvitation: [\"POST /orgs/{org}/invitations\"],\n    createWebhook: [\"POST /orgs/{org}/hooks\"],\n    deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n    get: [\"GET /orgs/{org}\"],\n    getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n    getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n    getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n    list: [\"GET /organizations\"],\n    listAppInstallations: [\"GET /orgs/{org}/installations\"],\n    listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n    listForAuthenticatedUser: [\"GET /user/orgs\"],\n    listForUser: [\"GET /users/{username}/orgs\"],\n    listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n    listMembers: [\"GET /orgs/{org}/members\"],\n    listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n    listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n    listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n    listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n    listWebhooks: [\"GET /orgs/{org}/hooks\"],\n    pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n    removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n    removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n    removeOutsideCollaborator: [\"DELETE /orgs/{org}/outside_collaborators/{username}\"],\n    removePublicMembershipForAuthenticatedUser: [\"DELETE /orgs/{org}/public_members/{username}\"],\n    setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n    setPublicMembershipForAuthenticatedUser: [\"PUT /orgs/{org}/public_members/{username}\"],\n    unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n    update: [\"PATCH /orgs/{org}\"],\n    updateMembershipForAuthenticatedUser: [\"PATCH /user/memberships/orgs/{org}\"],\n    updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"]\n  },\n  projects: {\n    addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createCard: [\"POST /projects/columns/{column_id}/cards\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createColumn: [\"POST /projects/{project_id}/columns\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createForAuthenticatedUser: [\"POST /user/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createForOrg: [\"POST /orgs/{org}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createForRepo: [\"POST /repos/{owner}/{repo}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    delete: [\"DELETE /projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    deleteCard: [\"DELETE /projects/columns/cards/{card_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    deleteColumn: [\"DELETE /projects/columns/{column_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    get: [\"GET /projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    getCard: [\"GET /projects/columns/cards/{card_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    getColumn: [\"GET /projects/columns/{column_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    getPermissionForUser: [\"GET /projects/{project_id}/collaborators/{username}/permission\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listCards: [\"GET /projects/columns/{column_id}/cards\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listCollaborators: [\"GET /projects/{project_id}/collaborators\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listColumns: [\"GET /projects/{project_id}/columns\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listForOrg: [\"GET /orgs/{org}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listForRepo: [\"GET /repos/{owner}/{repo}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listForUser: [\"GET /users/{username}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    moveCard: [\"POST /projects/columns/cards/{card_id}/moves\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    moveColumn: [\"POST /projects/columns/{column_id}/moves\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    removeCollaborator: [\"DELETE /projects/{project_id}/collaborators/{username}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    update: [\"PATCH /projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    updateCard: [\"PATCH /projects/columns/cards/{card_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    updateColumn: [\"PATCH /projects/columns/{column_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }]\n  },\n  pulls: {\n    checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    create: [\"POST /repos/{owner}/{repo}/pulls\"],\n    createReplyForReviewComment: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\"],\n    createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    createReviewComment: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\"],\n    deletePendingReview: [\"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    deleteReviewComment: [\"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    dismissReview: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\"],\n    get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    getReview: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    list: [\"GET /repos/{owner}/{repo}/pulls\"],\n    listCommentsForReview: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\"],\n    listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n    listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n    listRequestedReviewers: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    listReviewComments: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\"],\n    listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n    listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    removeRequestedReviewers: [\"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    requestReviewers: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    submitReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\"],\n    update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    updateBranch: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\", {\n      mediaType: {\n        previews: [\"lydian\"]\n      }\n    }],\n    updateReview: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    updateReviewComment: [\"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\"]\n  },\n  rateLimit: {\n    get: [\"GET /rate_limit\"]\n  },\n  reactions: {\n    createForCommitComment: [\"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForIssue: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForIssueComment: [\"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForPullRequestReviewComment: [\"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForTeamDiscussionCommentInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForTeamDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForIssue: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForIssueComment: [\"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForPullRequestComment: [\"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForTeamDiscussion: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForTeamDiscussionComment: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteLegacy: [\"DELETE /reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }, {\n      deprecated: \"octokit.reactions.deleteLegacy() is deprecated, see https://developer.github.com/v3/reactions/#delete-a-reaction-legacy\"\n    }],\n    listForCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForIssueComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForPullRequestReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForTeamDiscussionCommentInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForTeamDiscussionInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }]\n  },\n  repos: {\n    acceptInvitation: [\"PATCH /user/repository_invitations/{invitation_id}\"],\n    addAppAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n    addStatusCheckContexts: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    addTeamAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    addUserAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n    checkVulnerabilityAlerts: [\"GET /repos/{owner}/{repo}/vulnerability-alerts\", {\n      mediaType: {\n        previews: [\"dorian\"]\n      }\n    }],\n    compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n    createCommitComment: [\"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\"],\n    createCommitSignatureProtection: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\", {\n      mediaType: {\n        previews: [\"zzzax\"]\n      }\n    }],\n    createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n    createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n    createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n    createDeploymentStatus: [\"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"],\n    createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n    createForAuthenticatedUser: [\"POST /user/repos\"],\n    createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n    createInOrg: [\"POST /orgs/{org}/repos\"],\n    createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n    createPagesSite: [\"POST /repos/{owner}/{repo}/pages\", {\n      mediaType: {\n        previews: [\"switcheroo\"]\n      }\n    }],\n    createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n    createUsingTemplate: [\"POST /repos/{template_owner}/{template_repo}/generate\", {\n      mediaType: {\n        previews: [\"baptiste\"]\n      }\n    }],\n    createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n    declineInvitation: [\"DELETE /user/repository_invitations/{invitation_id}\"],\n    delete: [\"DELETE /repos/{owner}/{repo}\"],\n    deleteAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"],\n    deleteAdminBranchProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    deleteBranchProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n    deleteCommitSignatureProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\", {\n      mediaType: {\n        previews: [\"zzzax\"]\n      }\n    }],\n    deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n    deleteDeployment: [\"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n    deleteInvitation: [\"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\"],\n    deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\", {\n      mediaType: {\n        previews: [\"switcheroo\"]\n      }\n    }],\n    deletePullRequestReviewProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n    deleteReleaseAsset: [\"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    disableAutomatedSecurityFixes: [\"DELETE /repos/{owner}/{repo}/automated-security-fixes\", {\n      mediaType: {\n        previews: [\"london\"]\n      }\n    }],\n    disableVulnerabilityAlerts: [\"DELETE /repos/{owner}/{repo}/vulnerability-alerts\", {\n      mediaType: {\n        previews: [\"dorian\"]\n      }\n    }],\n    downloadArchive: [\"GET /repos/{owner}/{repo}/{archive_format}/{ref}\"],\n    enableAutomatedSecurityFixes: [\"PUT /repos/{owner}/{repo}/automated-security-fixes\", {\n      mediaType: {\n        previews: [\"london\"]\n      }\n    }],\n    enableVulnerabilityAlerts: [\"PUT /repos/{owner}/{repo}/vulnerability-alerts\", {\n      mediaType: {\n        previews: [\"dorian\"]\n      }\n    }],\n    get: [\"GET /repos/{owner}/{repo}\"],\n    getAccessRestrictions: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"],\n    getAdminBranchProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    getAllStatusCheckContexts: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\"],\n    getAllTopics: [\"GET /repos/{owner}/{repo}/topics\", {\n      mediaType: {\n        previews: [\"mercy\"]\n      }\n    }],\n    getAppsWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\"],\n    getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n    getBranchProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n    getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n    getCollaboratorPermissionLevel: [\"GET /repos/{owner}/{repo}/collaborators/{username}/permission\"],\n    getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n    getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n    getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n    getCommitSignatureProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\", {\n      mediaType: {\n        previews: [\"zzzax\"]\n      }\n    }],\n    getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\", {\n      mediaType: {\n        previews: [\"black-panther\"]\n      }\n    }],\n    getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n    getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n    getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n    getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    getDeploymentStatus: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\"],\n    getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n    getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n    getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n    getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n    getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n    getPullRequestReviewProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n    getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n    getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n    getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n    getStatusChecksProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    getTeamsWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\"],\n    getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n    getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n    getUsersWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\"],\n    getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n    getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n    listBranchesForHeadCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\", {\n      mediaType: {\n        previews: [\"groot\"]\n      }\n    }],\n    listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n    listCommentsForCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\"],\n    listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n    listCommitStatusesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/statuses\"],\n    listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n    listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n    listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n    listDeploymentStatuses: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"],\n    listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n    listForAuthenticatedUser: [\"GET /user/repos\"],\n    listForOrg: [\"GET /orgs/{org}/repos\"],\n    listForUser: [\"GET /users/{username}/repos\"],\n    listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n    listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n    listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n    listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n    listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n    listPublic: [\"GET /repositories\"],\n    listPullRequestsAssociatedWithCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\", {\n      mediaType: {\n        previews: [\"groot\"]\n      }\n    }],\n    listReleaseAssets: [\"GET /repos/{owner}/{repo}/releases/{release_id}/assets\"],\n    listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n    listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n    listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n    listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n    merge: [\"POST /repos/{owner}/{repo}/merges\"],\n    pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n    removeAppAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    removeCollaborator: [\"DELETE /repos/{owner}/{repo}/collaborators/{username}\"],\n    removeStatusCheckContexts: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    removeStatusCheckProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    removeTeamAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    removeUserAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\", {\n      mediaType: {\n        previews: [\"mercy\"]\n      }\n    }],\n    requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n    setAdminBranchProtection: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    setAppAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    setStatusCheckContexts: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    setTeamAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    setUserAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n    transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n    update: [\"PATCH /repos/{owner}/{repo}\"],\n    updateBranchProtection: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n    updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n    updateInvitation: [\"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\"],\n    updatePullRequestReviewProtection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n    updateReleaseAsset: [\"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    updateStatusCheckPotection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    uploadReleaseAsset: [\"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\", {\n      baseUrl: \"https://uploads.github.com\"\n    }]\n  },\n  search: {\n    code: [\"GET /search/code\"],\n    commits: [\"GET /search/commits\", {\n      mediaType: {\n        previews: [\"cloak\"]\n      }\n    }],\n    issuesAndPullRequests: [\"GET /search/issues\"],\n    labels: [\"GET /search/labels\"],\n    repos: [\"GET /search/repositories\"],\n    topics: [\"GET /search/topics\", {\n      mediaType: {\n        previews: [\"mercy\"]\n      }\n    }],\n    users: [\"GET /search/users\"]\n  },\n  teams: {\n    addOrUpdateMembershipForUserInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    addOrUpdateProjectPermissionsInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    addOrUpdateRepoPermissionsInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    checkPermissionsForProjectInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    checkPermissionsForRepoInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    create: [\"POST /orgs/{org}/teams\"],\n    createDiscussionCommentInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"],\n    createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n    deleteDiscussionCommentInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    deleteDiscussionInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n    getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n    getDiscussionCommentInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    getDiscussionInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    getMembershipForUserInOrg: [\"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    list: [\"GET /orgs/{org}/teams\"],\n    listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n    listDiscussionCommentsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"],\n    listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n    listForAuthenticatedUser: [\"GET /user/teams\"],\n    listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n    listPendingInvitationsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/invitations\"],\n    listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n    removeMembershipForUserInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    removeProjectInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\"],\n    removeRepoInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    updateDiscussionCommentInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    updateDiscussionInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"]\n  },\n  users: {\n    addEmailForAuthenticated: [\"POST /user/emails\"],\n    block: [\"PUT /user/blocks/{username}\"],\n    checkBlocked: [\"GET /user/blocks/{username}\"],\n    checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n    checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n    createGpgKeyForAuthenticated: [\"POST /user/gpg_keys\"],\n    createPublicSshKeyForAuthenticated: [\"POST /user/keys\"],\n    deleteEmailForAuthenticated: [\"DELETE /user/emails\"],\n    deleteGpgKeyForAuthenticated: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n    deletePublicSshKeyForAuthenticated: [\"DELETE /user/keys/{key_id}\"],\n    follow: [\"PUT /user/following/{username}\"],\n    getAuthenticated: [\"GET /user\"],\n    getByUsername: [\"GET /users/{username}\"],\n    getContextForUser: [\"GET /users/{username}/hovercard\"],\n    getGpgKeyForAuthenticated: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n    getPublicSshKeyForAuthenticated: [\"GET /user/keys/{key_id}\"],\n    list: [\"GET /users\"],\n    listBlockedByAuthenticated: [\"GET /user/blocks\"],\n    listEmailsForAuthenticated: [\"GET /user/emails\"],\n    listFollowedByAuthenticated: [\"GET /user/following\"],\n    listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n    listFollowersForUser: [\"GET /users/{username}/followers\"],\n    listFollowingForUser: [\"GET /users/{username}/following\"],\n    listGpgKeysForAuthenticated: [\"GET /user/gpg_keys\"],\n    listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n    listPublicEmailsForAuthenticated: [\"GET /user/public_emails\"],\n    listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n    listPublicSshKeysForAuthenticated: [\"GET /user/keys\"],\n    setPrimaryEmailVisibilityForAuthenticated: [\"PATCH /user/email/visibility\"],\n    unblock: [\"DELETE /user/blocks/{username}\"],\n    unfollow: [\"DELETE /user/following/{username}\"],\n    updateAuthenticated: [\"PATCH /user\"]\n  }\n};\n\nconst VERSION = \"4.2.1\";\n\nfunction endpointsToMethods(octokit, endpointsMap) {\n  const newMethods = {};\n\n  for (const [scope, endpoints] of Object.entries(endpointsMap)) {\n    for (const [methodName, endpoint] of Object.entries(endpoints)) {\n      const [route, defaults, decorations] = endpoint;\n      const [method, url] = route.split(/ /);\n      const endpointDefaults = Object.assign({\n        method,\n        url\n      }, defaults);\n\n      if (!newMethods[scope]) {\n        newMethods[scope] = {};\n      }\n\n      const scopeMethods = newMethods[scope];\n\n      if (decorations) {\n        scopeMethods[methodName] = decorate(octokit, scope, methodName, endpointDefaults, decorations);\n        continue;\n      }\n\n      scopeMethods[methodName] = octokit.request.defaults(endpointDefaults);\n    }\n  }\n\n  return newMethods;\n}\n\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n  const requestWithDefaults = octokit.request.defaults(defaults);\n  /* istanbul ignore next */\n\n  function withDecorations(...args) {\n    // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n    let options = requestWithDefaults.endpoint.merge(...args); // There are currently no other decorations than `.mapToData`\n\n    if (decorations.mapToData) {\n      options = Object.assign({}, options, {\n        data: options[decorations.mapToData],\n        [decorations.mapToData]: undefined\n      });\n      return requestWithDefaults(options);\n    }\n\n    if (decorations.renamed) {\n      const [newScope, newMethodName] = decorations.renamed;\n      octokit.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`);\n    }\n\n    if (decorations.deprecated) {\n      octokit.log.warn(decorations.deprecated);\n    }\n\n    if (decorations.renamedParameters) {\n      // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n      const options = requestWithDefaults.endpoint.merge(...args);\n\n      for (const [name, alias] of Object.entries(decorations.renamedParameters)) {\n        if (name in options) {\n          octokit.log.warn(`\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`);\n\n          if (!(alias in options)) {\n            options[alias] = options[name];\n          }\n\n          delete options[name];\n        }\n      }\n\n      return requestWithDefaults(options);\n    } // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n\n\n    return requestWithDefaults(...args);\n  }\n\n  return Object.assign(withDecorations, requestWithDefaults);\n}\n\n/**\n * This plugin is a 1:1 copy of internal @octokit/rest plugins. The primary\n * goal is to rebuild @octokit/rest on top of @octokit/core. Once that is\n * done, we will remove the registerEndpoints methods and return the methods\n * directly as with the other plugins. At that point we will also remove the\n * legacy workarounds and deprecations.\n *\n * See the plan at\n * https://github.com/octokit/plugin-rest-endpoint-methods.js/pull/1\n */\n\nfunction restEndpointMethods(octokit) {\n  return endpointsToMethods(octokit, Endpoints);\n}\nrestEndpointMethods.VERSION = VERSION;\n\nexports.restEndpointMethods = restEndpointMethods;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar deprecation = require('deprecation');\nvar once = _interopDefault(require('once'));\n\nconst logOnce = once(deprecation => console.warn(deprecation));\n/**\n * Error with extra properties to help with debugging\n */\n\nclass RequestError extends Error {\n  constructor(message, statusCode, options) {\n    super(message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = \"HttpError\";\n    this.status = statusCode;\n    Object.defineProperty(this, \"code\", {\n      get() {\n        logOnce(new deprecation.Deprecation(\"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"));\n        return statusCode;\n      }\n\n    });\n    this.headers = options.headers || {}; // redact request credentials without mutating original request options\n\n    const requestCopy = Object.assign({}, options.request);\n\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(/ .*$/, \" [REDACTED]\")\n      });\n    }\n\n    requestCopy.url = requestCopy.url // client_id & client_secret can be passed as URL query parameters to increase rate limit\n    // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\n    .replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\") // OAuth tokens can be passed as URL query parameters, although it is not recommended\n    // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header\n    .replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    this.request = requestCopy;\n  }\n\n}\n\nexports.RequestError = RequestError;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar endpoint = require('@octokit/endpoint');\nvar universalUserAgent = require('universal-user-agent');\nvar isPlainObject = require('is-plain-object');\nvar nodeFetch = _interopDefault(require('node-fetch'));\nvar requestError = require('@octokit/request-error');\n\nconst VERSION = \"5.4.10\";\n\nfunction getBufferResponse(response) {\n  return response.arrayBuffer();\n}\n\nfunction fetchWrapper(requestOptions) {\n  if (isPlainObject.isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {\n    requestOptions.body = JSON.stringify(requestOptions.body);\n  }\n\n  let headers = {};\n  let status;\n  let url;\n  const fetch = requestOptions.request && requestOptions.request.fetch || nodeFetch;\n  return fetch(requestOptions.url, Object.assign({\n    method: requestOptions.method,\n    body: requestOptions.body,\n    headers: requestOptions.headers,\n    redirect: requestOptions.redirect\n  }, requestOptions.request)).then(response => {\n    url = response.url;\n    status = response.status;\n\n    for (const keyAndValue of response.headers) {\n      headers[keyAndValue[0]] = keyAndValue[1];\n    }\n\n    if (status === 204 || status === 205) {\n      return;\n    } // GitHub API returns 200 for HEAD requests\n\n\n    if (requestOptions.method === \"HEAD\") {\n      if (status < 400) {\n        return;\n      }\n\n      throw new requestError.RequestError(response.statusText, status, {\n        headers,\n        request: requestOptions\n      });\n    }\n\n    if (status === 304) {\n      throw new requestError.RequestError(\"Not modified\", status, {\n        headers,\n        request: requestOptions\n      });\n    }\n\n    if (status >= 400) {\n      return response.text().then(message => {\n        const error = new requestError.RequestError(message, status, {\n          headers,\n          request: requestOptions\n        });\n\n        try {\n          let responseBody = JSON.parse(error.message);\n          Object.assign(error, responseBody);\n          let errors = responseBody.errors; // Assumption `errors` would always be in Array format\n\n          error.message = error.message + \": \" + errors.map(JSON.stringify).join(\", \");\n        } catch (e) {// ignore, see octokit/rest.js#684\n        }\n\n        throw error;\n      });\n    }\n\n    const contentType = response.headers.get(\"content-type\");\n\n    if (/application\\/json/.test(contentType)) {\n      return response.json();\n    }\n\n    if (!contentType || /^text\\/|charset=utf-8$/.test(contentType)) {\n      return response.text();\n    }\n\n    return getBufferResponse(response);\n  }).then(data => {\n    return {\n      status,\n      url,\n      headers,\n      data\n    };\n  }).catch(error => {\n    if (error instanceof requestError.RequestError) {\n      throw error;\n    }\n\n    throw new requestError.RequestError(error.message, 500, {\n      headers,\n      request: requestOptions\n    });\n  });\n}\n\nfunction withDefaults(oldEndpoint, newDefaults) {\n  const endpoint = oldEndpoint.defaults(newDefaults);\n\n  const newApi = function (route, parameters) {\n    const endpointOptions = endpoint.merge(route, parameters);\n\n    if (!endpointOptions.request || !endpointOptions.request.hook) {\n      return fetchWrapper(endpoint.parse(endpointOptions));\n    }\n\n    const request = (route, parameters) => {\n      return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));\n    };\n\n    Object.assign(request, {\n      endpoint,\n      defaults: withDefaults.bind(null, endpoint)\n    });\n    return endpointOptions.request.hook(request, endpointOptions);\n  };\n\n  return Object.assign(newApi, {\n    endpoint,\n    defaults: withDefaults.bind(null, endpoint)\n  });\n}\n\nconst request = withDefaults(endpoint.endpoint, {\n  headers: {\n    \"user-agent\": `octokit-request.js/${VERSION} ${universalUserAgent.getUserAgent()}`\n  }\n});\n\nexports.request = request;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexports.isPlainObject = isPlainObject;\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var register = require('./lib/register')\nvar addHook = require('./lib/add')\nvar removeHook = require('./lib/remove')\n\n// bind with array of arguments: https://stackoverflow.com/a/21792913\nvar bind = Function.bind\nvar bindable = bind.bind(bind)\n\nfunction bindApi (hook, state, name) {\n  var removeHookRef = bindable(removeHook, null).apply(null, name ? [state, name] : [state])\n  hook.api = { remove: removeHookRef }\n  hook.remove = removeHookRef\n\n  ;['before', 'error', 'after', 'wrap'].forEach(function (kind) {\n    var args = name ? [state, kind, name] : [state, kind]\n    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args)\n  })\n}\n\nfunction HookSingular () {\n  var singularHookName = 'h'\n  var singularHookState = {\n    registry: {}\n  }\n  var singularHook = register.bind(null, singularHookState, singularHookName)\n  bindApi(singularHook, singularHookState, singularHookName)\n  return singularHook\n}\n\nfunction HookCollection () {\n  var state = {\n    registry: {}\n  }\n\n  var hook = register.bind(null, state)\n  bindApi(hook, state)\n\n  return hook\n}\n\nvar collectionHookDeprecationMessageDisplayed = false\nfunction Hook () {\n  if (!collectionHookDeprecationMessageDisplayed) {\n    console.warn('[before-after-hook]: \"Hook()\" repurposing warning, use \"Hook.Collection()\". Read more: https://git.io/upgrade-before-after-hook-to-1.4')\n    collectionHookDeprecationMessageDisplayed = true\n  }\n  return HookCollection()\n}\n\nHook.Singular = HookSingular.bind()\nHook.Collection = HookCollection.bind()\n\nmodule.exports = Hook\n// expose constructors as a named property for TypeScript\nmodule.exports.Hook = Hook\nmodule.exports.Singular = Hook.Singular\nmodule.exports.Collection = Hook.Collection\n","module.exports = addHook\n\nfunction addHook (state, kind, name, hook) {\n  var orig = hook\n  if (!state.registry[name]) {\n    state.registry[name] = []\n  }\n\n  if (kind === 'before') {\n    hook = function (method, options) {\n      return Promise.resolve()\n        .then(orig.bind(null, options))\n        .then(method.bind(null, options))\n    }\n  }\n\n  if (kind === 'after') {\n    hook = function (method, options) {\n      var result\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .then(function (result_) {\n          result = result_\n          return orig(result, options)\n        })\n        .then(function () {\n          return result\n        })\n    }\n  }\n\n  if (kind === 'error') {\n    hook = function (method, options) {\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .catch(function (error) {\n          return orig(error, options)\n        })\n    }\n  }\n\n  state.registry[name].push({\n    hook: hook,\n    orig: orig\n  })\n}\n","module.exports = register\n\nfunction register (state, name, method, options) {\n  if (typeof method !== 'function') {\n    throw new Error('method for before hook must be a function')\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  if (Array.isArray(name)) {\n    return name.reverse().reduce(function (callback, name) {\n      return register.bind(null, state, name, callback, options)\n    }, method)()\n  }\n\n  return Promise.resolve()\n    .then(function () {\n      if (!state.registry[name]) {\n        return method(options)\n      }\n\n      return (state.registry[name]).reduce(function (method, registered) {\n        return registered.hook.bind(null, method, options)\n      }, method)()\n    })\n}\n","module.exports = removeHook\n\nfunction removeHook (state, name, method) {\n  if (!state.registry[name]) {\n    return\n  }\n\n  var index = state.registry[name]\n    .map(function (registered) { return registered.orig })\n    .indexOf(method)\n\n  if (index === -1) {\n    return\n  }\n\n  state.registry[name].splice(index, 1)\n}\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","\"use strict\";\n/* istanbul ignore file - tricky to import some things from this module during testing */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Parser = exports.generateParserModule = exports.generateParserFactory = exports.createSyntaxDiagramsCode = exports.clearCache = exports.validateGrammar = exports.resolveGrammar = exports.assignOccurrenceIndices = exports.GAstVisitor = exports.serializeProduction = exports.serializeGrammar = exports.Terminal = exports.Rule = exports.RepetitionWithSeparator = exports.RepetitionMandatoryWithSeparator = exports.RepetitionMandatory = exports.Repetition = exports.Option = exports.NonTerminal = exports.Alternative = exports.Alternation = exports.defaultLexerErrorProvider = exports.NoViableAltException = exports.NotAllInputParsedException = exports.MismatchedTokenException = exports.isRecognitionException = exports.EarlyExitException = exports.defaultParserErrorProvider = exports.defaultGrammarValidatorErrorProvider = exports.defaultGrammarResolverErrorProvider = exports.tokenName = exports.tokenMatcher = exports.tokenLabel = exports.EOF = exports.createTokenInstance = exports.createToken = exports.LexerDefinitionErrorType = exports.Lexer = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.EmbeddedActionsParser = exports.CstParser = exports.VERSION = void 0;\n// semantic version\nvar version_1 = require(\"./version\");\nObject.defineProperty(exports, \"VERSION\", { enumerable: true, get: function () { return version_1.VERSION; } });\nvar parser_1 = require(\"./parse/parser/parser\");\nObject.defineProperty(exports, \"CstParser\", { enumerable: true, get: function () { return parser_1.CstParser; } });\nObject.defineProperty(exports, \"EmbeddedActionsParser\", { enumerable: true, get: function () { return parser_1.EmbeddedActionsParser; } });\nObject.defineProperty(exports, \"ParserDefinitionErrorType\", { enumerable: true, get: function () { return parser_1.ParserDefinitionErrorType; } });\nObject.defineProperty(exports, \"EMPTY_ALT\", { enumerable: true, get: function () { return parser_1.EMPTY_ALT; } });\nvar lexer_public_1 = require(\"./scan/lexer_public\");\nObject.defineProperty(exports, \"Lexer\", { enumerable: true, get: function () { return lexer_public_1.Lexer; } });\nObject.defineProperty(exports, \"LexerDefinitionErrorType\", { enumerable: true, get: function () { return lexer_public_1.LexerDefinitionErrorType; } });\n// Tokens utilities\nvar tokens_public_1 = require(\"./scan/tokens_public\");\nObject.defineProperty(exports, \"createToken\", { enumerable: true, get: function () { return tokens_public_1.createToken; } });\nObject.defineProperty(exports, \"createTokenInstance\", { enumerable: true, get: function () { return tokens_public_1.createTokenInstance; } });\nObject.defineProperty(exports, \"EOF\", { enumerable: true, get: function () { return tokens_public_1.EOF; } });\nObject.defineProperty(exports, \"tokenLabel\", { enumerable: true, get: function () { return tokens_public_1.tokenLabel; } });\nObject.defineProperty(exports, \"tokenMatcher\", { enumerable: true, get: function () { return tokens_public_1.tokenMatcher; } });\nObject.defineProperty(exports, \"tokenName\", { enumerable: true, get: function () { return tokens_public_1.tokenName; } });\n// Other Utilities\nvar errors_public_1 = require(\"./parse/errors_public\");\nObject.defineProperty(exports, \"defaultGrammarResolverErrorProvider\", { enumerable: true, get: function () { return errors_public_1.defaultGrammarResolverErrorProvider; } });\nObject.defineProperty(exports, \"defaultGrammarValidatorErrorProvider\", { enumerable: true, get: function () { return errors_public_1.defaultGrammarValidatorErrorProvider; } });\nObject.defineProperty(exports, \"defaultParserErrorProvider\", { enumerable: true, get: function () { return errors_public_1.defaultParserErrorProvider; } });\nvar exceptions_public_1 = require(\"./parse/exceptions_public\");\nObject.defineProperty(exports, \"EarlyExitException\", { enumerable: true, get: function () { return exceptions_public_1.EarlyExitException; } });\nObject.defineProperty(exports, \"isRecognitionException\", { enumerable: true, get: function () { return exceptions_public_1.isRecognitionException; } });\nObject.defineProperty(exports, \"MismatchedTokenException\", { enumerable: true, get: function () { return exceptions_public_1.MismatchedTokenException; } });\nObject.defineProperty(exports, \"NotAllInputParsedException\", { enumerable: true, get: function () { return exceptions_public_1.NotAllInputParsedException; } });\nObject.defineProperty(exports, \"NoViableAltException\", { enumerable: true, get: function () { return exceptions_public_1.NoViableAltException; } });\nvar lexer_errors_public_1 = require(\"./scan/lexer_errors_public\");\nObject.defineProperty(exports, \"defaultLexerErrorProvider\", { enumerable: true, get: function () { return lexer_errors_public_1.defaultLexerErrorProvider; } });\n// grammar reflection API\nvar gast_public_1 = require(\"./parse/grammar/gast/gast_public\");\nObject.defineProperty(exports, \"Alternation\", { enumerable: true, get: function () { return gast_public_1.Alternation; } });\nObject.defineProperty(exports, \"Alternative\", { enumerable: true, get: function () { return gast_public_1.Alternative; } });\nObject.defineProperty(exports, \"NonTerminal\", { enumerable: true, get: function () { return gast_public_1.NonTerminal; } });\nObject.defineProperty(exports, \"Option\", { enumerable: true, get: function () { return gast_public_1.Option; } });\nObject.defineProperty(exports, \"Repetition\", { enumerable: true, get: function () { return gast_public_1.Repetition; } });\nObject.defineProperty(exports, \"RepetitionMandatory\", { enumerable: true, get: function () { return gast_public_1.RepetitionMandatory; } });\nObject.defineProperty(exports, \"RepetitionMandatoryWithSeparator\", { enumerable: true, get: function () { return gast_public_1.RepetitionMandatoryWithSeparator; } });\nObject.defineProperty(exports, \"RepetitionWithSeparator\", { enumerable: true, get: function () { return gast_public_1.RepetitionWithSeparator; } });\nObject.defineProperty(exports, \"Rule\", { enumerable: true, get: function () { return gast_public_1.Rule; } });\nObject.defineProperty(exports, \"Terminal\", { enumerable: true, get: function () { return gast_public_1.Terminal; } });\n// GAST Utilities\nvar gast_public_2 = require(\"./parse/grammar/gast/gast_public\");\nObject.defineProperty(exports, \"serializeGrammar\", { enumerable: true, get: function () { return gast_public_2.serializeGrammar; } });\nObject.defineProperty(exports, \"serializeProduction\", { enumerable: true, get: function () { return gast_public_2.serializeProduction; } });\nvar gast_visitor_public_1 = require(\"./parse/grammar/gast/gast_visitor_public\");\nObject.defineProperty(exports, \"GAstVisitor\", { enumerable: true, get: function () { return gast_visitor_public_1.GAstVisitor; } });\nvar gast_resolver_public_1 = require(\"./parse/grammar/gast/gast_resolver_public\");\nObject.defineProperty(exports, \"assignOccurrenceIndices\", { enumerable: true, get: function () { return gast_resolver_public_1.assignOccurrenceIndices; } });\nObject.defineProperty(exports, \"resolveGrammar\", { enumerable: true, get: function () { return gast_resolver_public_1.resolveGrammar; } });\nObject.defineProperty(exports, \"validateGrammar\", { enumerable: true, get: function () { return gast_resolver_public_1.validateGrammar; } });\n/* istanbul ignore next */\nfunction clearCache() {\n    console.warn(\"The clearCache function was 'soft' removed from the Chevrotain API.\" +\n        \"\\n\\t It performs no action other than printing this message.\" +\n        \"\\n\\t Please avoid using it as it will be completely removed in the future\");\n}\nexports.clearCache = clearCache;\nvar render_public_1 = require(\"./diagrams/render_public\");\nObject.defineProperty(exports, \"createSyntaxDiagramsCode\", { enumerable: true, get: function () { return render_public_1.createSyntaxDiagramsCode; } });\nvar generate_public_1 = require(\"./generate/generate_public\");\nObject.defineProperty(exports, \"generateParserFactory\", { enumerable: true, get: function () { return generate_public_1.generateParserFactory; } });\nObject.defineProperty(exports, \"generateParserModule\", { enumerable: true, get: function () { return generate_public_1.generateParserModule; } });\nvar Parser = /** @class */ (function () {\n    function Parser() {\n        throw new Error(\"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" +\n            \"See: https://sap.github.io/chevrotain/docs/changes/BREAKING_CHANGES.html#_7-0-0\");\n    }\n    return Parser;\n}());\nexports.Parser = Parser;\n//# sourceMappingURL=api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSyntaxDiagramsCode = void 0;\nvar version_1 = require(\"../version\");\nfunction createSyntaxDiagramsCode(grammar, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.resourceBase, resourceBase = _c === void 0 ? \"https://unpkg.com/chevrotain@\" + version_1.VERSION + \"/diagrams/\" : _c, _d = _b.css, css = _d === void 0 ? \"https://unpkg.com/chevrotain@\" + version_1.VERSION + \"/diagrams/diagrams.css\" : _d;\n    var header = \"\\n<!-- This is a generated file -->\\n<!DOCTYPE html>\\n<meta charset=\\\"utf-8\\\">\\n<style>\\n  body {\\n    background-color: hsl(30, 20%, 95%)\\n  }\\n</style>\\n\\n\";\n    var cssHtml = \"\\n<link rel='stylesheet' href='\" + css + \"'>\\n\";\n    var scripts = \"\\n<script src='\" + resourceBase + \"vendor/railroad-diagrams.js'></script>\\n<script src='\" + resourceBase + \"src/diagrams_builder.js'></script>\\n<script src='\" + resourceBase + \"src/diagrams_behavior.js'></script>\\n<script src='\" + resourceBase + \"src/main.js'></script>\\n\";\n    var diagramsDiv = \"\\n<div id=\\\"diagrams\\\" align=\\\"center\\\"></div>    \\n\";\n    var serializedGrammar = \"\\n<script>\\n    window.serializedGrammar = \" + JSON.stringify(grammar, null, \"  \") + \";\\n</script>\\n\";\n    var initLogic = \"\\n<script>\\n    var diagramsDiv = document.getElementById(\\\"diagrams\\\");\\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\\n</script>\\n\";\n    return (header + cssHtml + scripts + diagramsDiv + serializedGrammar + initLogic);\n}\nexports.createSyntaxDiagramsCode = createSyntaxDiagramsCode;\n//# sourceMappingURL=render_public.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.genSingleAlt = exports.genAlternation = exports.genNonTerminal = exports.genTerminal = exports.genRule = exports.genAllRules = exports.genClass = exports.genWrapperFunction = exports.genUmdModule = void 0;\nvar utils_1 = require(\"../utils/utils\");\nvar gast_public_1 = require(\"../parse/grammar/gast/gast_public\");\n/**\n * Missing features\n * 1. Rule arguments\n * 2. Gates\n * 3. embedded actions\n */\nvar NL = \"\\n\";\nfunction genUmdModule(options) {\n    return \"\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        // AMD. Register as an anonymous module.\\n        define(['chevrotain'], factory);\\n    } else if (typeof module === 'object' && module.exports) {\\n        // Node. Does not work with strict CommonJS, but\\n        // only CommonJS-like environments that support module.exports,\\n        // like Node.\\n        module.exports = factory(require('chevrotain'));\\n    } else {\\n        // Browser globals (root is window)\\n        root.returnExports = factory(root.b);\\n    }\\n}(typeof self !== 'undefined' ? self : this, function (chevrotain) {\\n\\n\" + genClass(options) + \"\\n    \\nreturn {\\n    \" + options.name + \": \" + options.name + \" \\n}\\n}));\\n\";\n}\nexports.genUmdModule = genUmdModule;\nfunction genWrapperFunction(options) {\n    return \"    \\n\" + genClass(options) + \"\\nreturn new \" + options.name + \"(tokenVocabulary, config)    \\n\";\n}\nexports.genWrapperFunction = genWrapperFunction;\nfunction genClass(options) {\n    // TODO: how to pass the token vocabulary? Constructor? other?\n    var result = \"\\nfunction \" + options.name + \"(tokenVocabulary, config) {\\n    // invoke super constructor\\n    // No support for embedded actions currently, so we can 'hardcode'\\n    // The use of CstParser.\\n    chevrotain.CstParser.call(this, tokenVocabulary, config)\\n\\n    const $ = this\\n\\n    \" + genAllRules(options.rules) + \"\\n\\n    // very important to call this after all the rules have been defined.\\n    // otherwise the parser may not work correctly as it will lack information\\n    // derived during the self analysis phase.\\n    this.performSelfAnalysis(this)\\n}\\n\\n// inheritance as implemented in javascript in the previous decade... :(\\n\" + options.name + \".prototype = Object.create(chevrotain.CstParser.prototype)\\n\" + options.name + \".prototype.constructor = \" + options.name + \"    \\n    \";\n    return result;\n}\nexports.genClass = genClass;\nfunction genAllRules(rules) {\n    var rulesText = utils_1.map(rules, function (currRule) {\n        return genRule(currRule, 1);\n    });\n    return rulesText.join(\"\\n\");\n}\nexports.genAllRules = genAllRules;\nfunction genRule(prod, n) {\n    var result = indent(n, \"$.RULE(\\\"\" + prod.name + \"\\\", function() {\") + NL;\n    result += genDefinition(prod.definition, n + 1);\n    result += indent(n + 1, \"})\") + NL;\n    return result;\n}\nexports.genRule = genRule;\nfunction genTerminal(prod, n) {\n    var name = prod.terminalType.name;\n    // TODO: potential performance optimization, avoid tokenMap Dictionary access\n    return indent(n, \"$.CONSUME\" + prod.idx + \"(this.tokensMap.\" + name + \")\" + NL);\n}\nexports.genTerminal = genTerminal;\nfunction genNonTerminal(prod, n) {\n    return indent(n, \"$.SUBRULE\" + prod.idx + \"($.\" + prod.nonTerminalName + \")\" + NL);\n}\nexports.genNonTerminal = genNonTerminal;\nfunction genAlternation(prod, n) {\n    var result = indent(n, \"$.OR\" + prod.idx + \"([\") + NL;\n    var alts = utils_1.map(prod.definition, function (altDef) { return genSingleAlt(altDef, n + 1); });\n    result += alts.join(\",\" + NL);\n    result += NL + indent(n, \"])\" + NL);\n    return result;\n}\nexports.genAlternation = genAlternation;\nfunction genSingleAlt(prod, n) {\n    var result = indent(n, \"{\") + NL;\n    result += indent(n + 1, \"ALT: function() {\") + NL;\n    result += genDefinition(prod.definition, n + 1);\n    result += indent(n + 1, \"}\") + NL;\n    result += indent(n, \"}\");\n    return result;\n}\nexports.genSingleAlt = genSingleAlt;\nfunction genProd(prod, n) {\n    /* istanbul ignore else */\n    if (prod instanceof gast_public_1.NonTerminal) {\n        return genNonTerminal(prod, n);\n    }\n    else if (prod instanceof gast_public_1.Option) {\n        return genDSLRule(\"OPTION\", prod, n);\n    }\n    else if (prod instanceof gast_public_1.RepetitionMandatory) {\n        return genDSLRule(\"AT_LEAST_ONE\", prod, n);\n    }\n    else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n        return genDSLRule(\"AT_LEAST_ONE_SEP\", prod, n);\n    }\n    else if (prod instanceof gast_public_1.RepetitionWithSeparator) {\n        return genDSLRule(\"MANY_SEP\", prod, n);\n    }\n    else if (prod instanceof gast_public_1.Repetition) {\n        return genDSLRule(\"MANY\", prod, n);\n    }\n    else if (prod instanceof gast_public_1.Alternation) {\n        return genAlternation(prod, n);\n    }\n    else if (prod instanceof gast_public_1.Terminal) {\n        return genTerminal(prod, n);\n    }\n    else if (prod instanceof gast_public_1.Alternative) {\n        return genDefinition(prod.definition, n);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction genDSLRule(dslName, prod, n) {\n    var result = indent(n, \"$.\" + (dslName + prod.idx) + \"(\");\n    if (prod.separator) {\n        result += \"{\" + NL;\n        result +=\n            indent(n + 1, \"SEP: this.tokensMap.\" + prod.separator.name) + \",\" + NL;\n        result += \"DEF: \" + genDefFunction(prod.definition, n + 2) + NL;\n        result += indent(n, \"}\") + NL;\n    }\n    else {\n        result += genDefFunction(prod.definition, n + 1);\n    }\n    result += indent(n, \")\") + NL;\n    return result;\n}\nfunction genDefFunction(definition, n) {\n    var def = \"function() {\" + NL;\n    def += genDefinition(definition, n);\n    def += indent(n, \"}\") + NL;\n    return def;\n}\nfunction genDefinition(def, n) {\n    var result = \"\";\n    utils_1.forEach(def, function (prod) {\n        result += genProd(prod, n + 1);\n    });\n    return result;\n}\nfunction indent(howMuch, text) {\n    var spaces = Array(howMuch * 4 + 1).join(\" \");\n    return spaces + text;\n}\n//# sourceMappingURL=generate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateParserModule = exports.generateParserFactory = void 0;\nvar generate_1 = require(\"./generate\");\nfunction generateParserFactory(options) {\n    var wrapperText = generate_1.genWrapperFunction({\n        name: options.name,\n        rules: options.rules\n    });\n    var constructorWrapper = new Function(\"tokenVocabulary\", \"config\", \"chevrotain\", wrapperText);\n    return function (config) {\n        return constructorWrapper(options.tokenVocabulary, config, \n        // TODO: check how the require is transpiled/webpacked\n        require(\"../api\"));\n    };\n}\nexports.generateParserFactory = generateParserFactory;\nfunction generateParserModule(options) {\n    return generate_1.genUmdModule({ name: options.name, rules: options.rules });\n}\nexports.generateParserModule = generateParserModule;\n//# sourceMappingURL=generate_public.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineNameProp = exports.functionName = exports.classNameFromInstance = void 0;\nvar utils_1 = require(\"../utils/utils\");\nfunction classNameFromInstance(instance) {\n    return functionName(instance.constructor);\n}\nexports.classNameFromInstance = classNameFromInstance;\nvar NAME = \"name\";\n/**\n * Utility to obtain Function names.\n * Note that there should not be an assumptions on the result of this function.\n * E.g: When running from minified source code the result may be auto generated.\n */\nfunction functionName(func) {\n    // Engines that support Function.prototype.name OR the nth (n>1) time after\n    // the name has been computed in the following else block.\n    var existingNameProp = func.name;\n    /* istanbul ignore else - too many hacks for IE/old versions of node.js here*/\n    if (existingNameProp) {\n        return existingNameProp;\n    }\n    else {\n        return \"anonymous\";\n    }\n}\nexports.functionName = functionName;\n/**\n * @returns {boolean} - has the property been successfully defined\n */\nfunction defineNameProp(obj, nameValue) {\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(obj, NAME);\n    /* istanbul ignore else -> will only run in old versions of node.js */\n    if (utils_1.isUndefined(namePropDescriptor) || namePropDescriptor.configurable) {\n        Object.defineProperty(obj, NAME, {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: nameValue\n        });\n        return true;\n    }\n    /* istanbul ignore next -> will only run in old versions of node.js */\n    return false;\n}\nexports.defineNameProp = defineNameProp;\n//# sourceMappingURL=lang_extensions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IN = void 0;\n// TODO: can this be removed? where is it used?\nexports.IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addNoneTerminalToCst = exports.addTerminalToCst = exports.setNodeLocationFull = exports.setNodeLocationOnlyOffset = void 0;\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nfunction setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\nexports.setNodeLocationOnlyOffset = setNodeLocationOnlyOffset;\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nfunction setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexports.setNodeLocationFull = setNodeLocationFull;\nfunction addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexports.addTerminalToCst = addTerminalToCst;\nfunction addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\nexports.addNoneTerminalToCst = addNoneTerminalToCst;\n//# sourceMappingURL=cst.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateRedundantMethods = exports.validateMissingCstMethods = exports.validateVisitor = exports.CstVisitorDefinitionError = exports.createBaseVisitorConstructorWithDefaults = exports.createBaseSemanticVisitorConstructor = exports.defaultVisit = void 0;\nvar utils_1 = require(\"../../utils/utils\");\nvar lang_extensions_1 = require(\"../../lang/lang_extensions\");\nfunction defaultVisit(ctx, param) {\n    var childrenNames = utils_1.keys(ctx);\n    var childrenNamesLength = childrenNames.length;\n    for (var i = 0; i < childrenNamesLength; i++) {\n        var currChildName = childrenNames[i];\n        var currChildArray = ctx[currChildName];\n        var currChildArrayLength = currChildArray.length;\n        for (var j = 0; j < currChildArrayLength; j++) {\n            var currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n    return undefined;\n}\nexports.defaultVisit = defaultVisit;\nfunction createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    var derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    lang_extensions_1.defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    var semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (utils_1.isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (utils_1.isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            var semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!utils_1.isEmpty(semanticDefinitionErrors)) {\n                var errorMessages = utils_1.map(semanticDefinitionErrors, function (currDefError) { return currDefError.msg; });\n                throw Error(\"Errors Detected in CST Visitor <\" + lang_extensions_1.functionName(this.constructor) + \">:\\n\\t\" + (\"\" + errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")));\n            }\n        }\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexports.createBaseSemanticVisitorConstructor = createBaseSemanticVisitorConstructor;\nfunction createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    var derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    lang_extensions_1.defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    var withDefaultsProto = Object.create(baseConstructor.prototype);\n    utils_1.forEach(ruleNames, function (ruleName) {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexports.createBaseVisitorConstructorWithDefaults = createBaseVisitorConstructorWithDefaults;\nvar CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError = exports.CstVisitorDefinitionError || (exports.CstVisitorDefinitionError = {}));\nfunction validateVisitor(visitorInstance, ruleNames) {\n    var missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    var redundantErrors = validateRedundantMethods(visitorInstance, ruleNames);\n    return missingErrors.concat(redundantErrors);\n}\nexports.validateVisitor = validateVisitor;\nfunction validateMissingCstMethods(visitorInstance, ruleNames) {\n    var errors = utils_1.map(ruleNames, function (currRuleName) {\n        if (!utils_1.isFunction(visitorInstance[currRuleName])) {\n            return {\n                msg: \"Missing visitor method: <\" + currRuleName + \"> on \" + lang_extensions_1.functionName(visitorInstance.constructor) + \" CST Visitor.\",\n                type: CstVisitorDefinitionError.MISSING_METHOD,\n                methodName: currRuleName\n            };\n        }\n    });\n    return utils_1.compact(errors);\n}\nexports.validateMissingCstMethods = validateMissingCstMethods;\nvar VALID_PROP_NAMES = [\"constructor\", \"visit\", \"validateVisitor\"];\nfunction validateRedundantMethods(visitorInstance, ruleNames) {\n    var errors = [];\n    for (var prop in visitorInstance) {\n        if (utils_1.isFunction(visitorInstance[prop]) &&\n            !utils_1.contains(VALID_PROP_NAMES, prop) &&\n            !utils_1.contains(ruleNames, prop)) {\n            errors.push({\n                msg: \"Redundant visitor method: <\" + prop + \"> on \" + lang_extensions_1.functionName(visitorInstance.constructor) + \" CST Visitor\\n\" +\n                    \"There is no Grammar Rule corresponding to this method's name.\\n\",\n                type: CstVisitorDefinitionError.REDUNDANT_METHOD,\n                methodName: prop\n            });\n        }\n    }\n    return errors;\n}\nexports.validateRedundantMethods = validateRedundantMethods;\n//# sourceMappingURL=cst_visitor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultGrammarValidatorErrorProvider = exports.defaultGrammarResolverErrorProvider = exports.defaultParserErrorProvider = void 0;\nvar tokens_public_1 = require(\"../scan/tokens_public\");\nvar utils = require(\"../utils/utils\");\nvar utils_1 = require(\"../utils/utils\");\nvar gast_public_1 = require(\"./grammar/gast/gast_public\");\nvar gast_1 = require(\"./grammar/gast/gast\");\nexports.defaultParserErrorProvider = {\n    buildMismatchTokenMessage: function (_a) {\n        var expected = _a.expected, actual = _a.actual, previous = _a.previous, ruleName = _a.ruleName;\n        var hasLabel = tokens_public_1.hasTokenLabel(expected);\n        var expectedMsg = hasLabel\n            ? \"--> \" + tokens_public_1.tokenLabel(expected) + \" <--\"\n            : \"token of type --> \" + expected.name + \" <--\";\n        var msg = \"Expecting \" + expectedMsg + \" but found --> '\" + actual.image + \"' <--\";\n        return msg;\n    },\n    buildNotAllInputParsedMessage: function (_a) {\n        var firstRedundant = _a.firstRedundant, ruleName = _a.ruleName;\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage: function (_a) {\n        var expectedPathsPerAlt = _a.expectedPathsPerAlt, actual = _a.actual, previous = _a.previous, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\n        var errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        var actualText = utils_1.first(actual).image;\n        var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            var allLookAheadPaths = utils_1.reduce(expectedPathsPerAlt, function (result, currAltPaths) { return result.concat(currAltPaths); }, []);\n            var nextValidTokenSequences = utils_1.map(allLookAheadPaths, function (currPath) {\n                return \"[\" + utils_1.map(currPath, function (currTokenType) { return tokens_public_1.tokenLabel(currTokenType); }).join(\", \") + \"]\";\n            });\n            var nextValidSequenceItems = utils_1.map(nextValidTokenSequences, function (itemMsg, idx) { return \"  \" + (idx + 1) + \". \" + itemMsg; });\n            var calculatedDescription = \"one of these possible Token sequences:\\n\" + nextValidSequenceItems.join(\"\\n\");\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage: function (_a) {\n        var expectedIterationPaths = _a.expectedIterationPaths, actual = _a.actual, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\n        var errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        var actualText = utils_1.first(actual).image;\n        var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            var nextValidTokenSequences = utils_1.map(expectedIterationPaths, function (currPath) {\n                return \"[\" + utils_1.map(currPath, function (currTokenType) { return tokens_public_1.tokenLabel(currTokenType); }).join(\",\") + \"]\";\n            });\n            var calculatedDescription = \"expecting at least one iteration which starts with one of these possible Token sequences::\\n  \" +\n                (\"<\" + nextValidTokenSequences.join(\" ,\") + \">\");\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    }\n};\nObject.freeze(exports.defaultParserErrorProvider);\nexports.defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError: function (topLevelRule, undefinedRule) {\n        var msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    }\n};\nexports.defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError: function (topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof gast_public_1.Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof gast_public_1.NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        var topLevelName = topLevelRule.name;\n        var duplicateProd = utils_1.first(duplicateProds);\n        var index = duplicateProd.idx;\n        var dslName = gast_1.getProductionDslName(duplicateProd);\n        var extraArgument = getExtraProductionArgument(duplicateProd);\n        var hasExplicitIndex = index > 0;\n        var msg = \"->\" + dslName + (hasExplicitIndex ? index : \"\") + \"<- \" + (extraArgument ? \"with argument: ->\" + extraArgument + \"<-\" : \"\") + \"\\n                  appears more than once (\" + duplicateProds.length + \" times) in the top level rule: ->\" + topLevelName + \"<-.                  \\n                  For further details see: https://sap.github.io/chevrotain/docs/FAQ.html#NUMERICAL_SUFFIXES \\n                  \";\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError: function (rule) {\n        var errMsg = \"Namespace conflict found in grammar.\\n\" +\n            (\"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <\" + rule.name + \">.\\n\") +\n            \"To resolve this make sure each Terminal and Non-Terminal names are unique\\n\" +\n            \"This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n\" +\n            \"and Non-Terminal names start with a lower case letter.\";\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError: function (options) {\n        var pathMsg = utils_1.map(options.prefixPath, function (currTok) {\n            return tokens_public_1.tokenLabel(currTok);\n        }).join(\", \");\n        var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        var errMsg = \"Ambiguous alternatives: <\" + options.ambiguityIndices.join(\" ,\") + \"> due to common lookahead prefix\\n\" +\n            (\"in <OR\" + occurrence + \"> inside <\" + options.topLevelRule.name + \"> Rule,\\n\") +\n            (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\") +\n            \"See: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n\" +\n            \"For Further details.\";\n        return errMsg;\n    },\n    buildAlternationAmbiguityError: function (options) {\n        var pathMsg = utils_1.map(options.prefixPath, function (currtok) {\n            return tokens_public_1.tokenLabel(currtok);\n        }).join(\", \");\n        var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        var currMessage = \"Ambiguous Alternatives Detected: <\" + options.ambiguityIndices.join(\" ,\") + \"> in <OR\" + occurrence + \">\" +\n            (\" inside <\" + options.topLevelRule.name + \"> Rule,\\n\") +\n            (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\");\n        currMessage =\n            currMessage +\n                \"See: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n\" +\n                \"For Further details.\";\n        return currMessage;\n    },\n    buildEmptyRepetitionError: function (options) {\n        var dslName = gast_1.getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        var errMsg = \"The repetition <\" + dslName + \"> within Rule <\" + options.topLevelRule.name + \"> can never consume any tokens.\\n\" +\n            \"This could lead to an infinite loop.\";\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError: function (options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError: function (options) {\n        var errMsg = \"Ambiguous empty alternative: <\" + (options.emptyChoiceIdx + 1) + \">\" +\n            (\" in <OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n\") +\n            \"Only the last alternative may be an empty alternative.\";\n        return errMsg;\n    },\n    buildTooManyAlternativesError: function (options) {\n        var errMsg = \"An Alternation cannot have more than 256 alternatives:\\n\" +\n            (\"<OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n has \" + (options.alternation.definition.length + 1) + \" alternatives.\");\n        return errMsg;\n    },\n    buildLeftRecursionError: function (options) {\n        var ruleName = options.topLevelRule.name;\n        var pathNames = utils.map(options.leftRecursionPath, function (currRule) { return currRule.name; });\n        var leftRecursivePath = ruleName + \" --> \" + pathNames\n            .concat([ruleName])\n            .join(\" --> \");\n        var errMsg = \"Left Recursion found in grammar.\\n\" +\n            (\"rule: <\" + ruleName + \"> can be invoked from itself (directly or indirectly)\\n\") +\n            (\"without consuming any Tokens. The grammar path that causes this is: \\n \" + leftRecursivePath + \"\\n\") +\n            \" To fix this refactor your grammar to remove the left recursion.\\n\" +\n            \"see: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.\";\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError: function (options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError: function (options) {\n        var ruleName;\n        if (options.topLevelRule instanceof gast_public_1.Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        var errMsg = \"Duplicate definition, rule: ->\" + ruleName + \"<- is already defined in the grammar: ->\" + options.grammarName + \"<-\";\n        return errMsg;\n    }\n};\n//# sourceMappingURL=errors_public.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EarlyExitException = exports.NotAllInputParsedException = exports.NoViableAltException = exports.MismatchedTokenException = exports.isRecognitionException = void 0;\nvar utils_1 = require(\"../utils/utils\");\nvar MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nvar NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nvar EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nvar NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nvar RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nfunction isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return utils_1.contains(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nexports.isRecognitionException = isRecognitionException;\nfunction MismatchedTokenException(message, token, previousToken) {\n    this.name = MISMATCHED_TOKEN_EXCEPTION;\n    this.message = message;\n    this.token = token;\n    this.previousToken = previousToken;\n    this.resyncedTokens = [];\n}\nexports.MismatchedTokenException = MismatchedTokenException;\n// must use the \"Error.prototype\" instead of \"new Error\"\n// because the stack trace points to where \"new Error\" was invoked\"\nMismatchedTokenException.prototype = Error.prototype;\nfunction NoViableAltException(message, token, previousToken) {\n    this.name = NO_VIABLE_ALT_EXCEPTION;\n    this.message = message;\n    this.token = token;\n    this.previousToken = previousToken;\n    this.resyncedTokens = [];\n}\nexports.NoViableAltException = NoViableAltException;\nNoViableAltException.prototype = Error.prototype;\nfunction NotAllInputParsedException(message, token) {\n    this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    this.message = message;\n    this.token = token;\n    this.resyncedTokens = [];\n}\nexports.NotAllInputParsedException = NotAllInputParsedException;\nNotAllInputParsedException.prototype = Error.prototype;\nfunction EarlyExitException(message, token, previousToken) {\n    this.name = EARLY_EXIT_EXCEPTION;\n    this.message = message;\n    this.token = token;\n    this.previousToken = previousToken;\n    this.resyncedTokens = [];\n}\nexports.EarlyExitException = EarlyExitException;\nEarlyExitException.prototype = Error.prototype;\n//# sourceMappingURL=exceptions_public.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkPrefixAlternativesAmbiguities = exports.validateSomeNonEmptyLookaheadPath = exports.validateTooManyAlts = exports.RepetionCollector = exports.validateAmbiguousAlternationAlternatives = exports.validateEmptyOrAlternative = exports.getFirstNoneTerminal = exports.validateNoLeftRecursion = exports.validateRuleIsOverridden = exports.validateRuleDoesNotAlreadyExist = exports.OccurrenceValidationCollector = exports.identifyProductionForDuplicates = exports.validateGrammar = void 0;\nvar utils = require(\"../../utils/utils\");\nvar utils_1 = require(\"../../utils/utils\");\nvar parser_1 = require(\"../parser/parser\");\nvar gast_1 = require(\"./gast/gast\");\nvar lookahead_1 = require(\"./lookahead\");\nvar interpreter_1 = require(\"./interpreter\");\nvar gast_public_1 = require(\"./gast/gast_public\");\nvar gast_visitor_public_1 = require(\"./gast/gast_visitor_public\");\nfunction validateGrammar(topLevels, globalMaxLookahead, tokenTypes, errMsgProvider, grammarName) {\n    var duplicateErrors = utils.map(topLevels, function (currTopLevel) {\n        return validateDuplicateProductions(currTopLevel, errMsgProvider);\n    });\n    var leftRecursionErrors = utils.map(topLevels, function (currTopRule) {\n        return validateNoLeftRecursion(currTopRule, currTopRule, errMsgProvider);\n    });\n    var emptyAltErrors = [];\n    var ambiguousAltsErrors = [];\n    var emptyRepetitionErrors = [];\n    // left recursion could cause infinite loops in the following validations.\n    // It is safest to first have the user fix the left recursion errors first and only then examine Further issues.\n    if (utils_1.every(leftRecursionErrors, utils_1.isEmpty)) {\n        emptyAltErrors = utils_1.map(topLevels, function (currTopRule) {\n            return validateEmptyOrAlternative(currTopRule, errMsgProvider);\n        });\n        ambiguousAltsErrors = utils_1.map(topLevels, function (currTopRule) {\n            return validateAmbiguousAlternationAlternatives(currTopRule, globalMaxLookahead, errMsgProvider);\n        });\n        emptyRepetitionErrors = validateSomeNonEmptyLookaheadPath(topLevels, globalMaxLookahead, errMsgProvider);\n    }\n    var termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    var tooManyAltsErrors = utils_1.map(topLevels, function (curRule) {\n        return validateTooManyAlts(curRule, errMsgProvider);\n    });\n    var duplicateRulesError = utils_1.map(topLevels, function (curRule) {\n        return validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider);\n    });\n    return (utils.flatten(duplicateErrors.concat(emptyRepetitionErrors, leftRecursionErrors, emptyAltErrors, ambiguousAltsErrors, termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError)));\n}\nexports.validateGrammar = validateGrammar;\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    var collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    var allRuleProductions = collectorVisitor.allProductions;\n    var productionGroups = utils.groupBy(allRuleProductions, identifyProductionForDuplicates);\n    var duplicates = utils.pick(productionGroups, function (currGroup) {\n        return currGroup.length > 1;\n    });\n    var errors = utils.map(utils.values(duplicates), function (currDuplicates) {\n        var firstProd = utils.first(currDuplicates);\n        var msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        var dslName = gast_1.getProductionDslName(firstProd);\n        var defError = {\n            message: msg,\n            type: parser_1.ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx\n        };\n        var param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nfunction identifyProductionForDuplicates(prod) {\n    return gast_1.getProductionDslName(prod) + \"_#_\" + prod.idx + \"_#_\" + getExtraProductionArgument(prod);\n}\nexports.identifyProductionForDuplicates = identifyProductionForDuplicates;\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof gast_public_1.Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof gast_public_1.NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nvar OccurrenceValidationCollector = /** @class */ (function (_super) {\n    __extends(OccurrenceValidationCollector, _super);\n    function OccurrenceValidationCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.allProductions = [];\n        return _this;\n    }\n    OccurrenceValidationCollector.prototype.visitNonTerminal = function (subrule) {\n        this.allProductions.push(subrule);\n    };\n    OccurrenceValidationCollector.prototype.visitOption = function (option) {\n        this.allProductions.push(option);\n    };\n    OccurrenceValidationCollector.prototype.visitRepetitionWithSeparator = function (manySep) {\n        this.allProductions.push(manySep);\n    };\n    OccurrenceValidationCollector.prototype.visitRepetitionMandatory = function (atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    };\n    OccurrenceValidationCollector.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    };\n    OccurrenceValidationCollector.prototype.visitRepetition = function (many) {\n        this.allProductions.push(many);\n    };\n    OccurrenceValidationCollector.prototype.visitAlternation = function (or) {\n        this.allProductions.push(or);\n    };\n    OccurrenceValidationCollector.prototype.visitTerminal = function (terminal) {\n        this.allProductions.push(terminal);\n    };\n    return OccurrenceValidationCollector;\n}(gast_visitor_public_1.GAstVisitor));\nexports.OccurrenceValidationCollector = OccurrenceValidationCollector;\nfunction validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    var errors = [];\n    var occurrences = utils_1.reduce(allRules, function (result, curRule) {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        var errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className\n        });\n        errors.push({\n            message: errMsg,\n            type: parser_1.ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name\n        });\n    }\n    return errors;\n}\nexports.validateRuleDoesNotAlreadyExist = validateRuleDoesNotAlreadyExist;\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nfunction validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    var errors = [];\n    var errMsg;\n    if (!utils.contains(definedRulesNames, ruleName)) {\n        errMsg =\n            \"Invalid rule override, rule: ->\" + ruleName + \"<- cannot be overridden in the grammar: ->\" + className + \"<-\" +\n                \"as it is not defined in any of the super grammars \";\n        errors.push({\n            message: errMsg,\n            type: parser_1.ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName\n        });\n    }\n    return errors;\n}\nexports.validateRuleIsOverridden = validateRuleIsOverridden;\nfunction validateNoLeftRecursion(topRule, currRule, errMsgProvider, path) {\n    if (path === void 0) { path = []; }\n    var errors = [];\n    var nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (utils.isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        var ruleName = topRule.name;\n        var foundLeftRecursion = utils.contains(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path\n                }),\n                type: parser_1.ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        var validNextSteps = utils.difference(nextNonTerminals, path.concat([topRule]));\n        var errorsFromNextSteps = utils.map(validNextSteps, function (currRefRule) {\n            var newPath = utils.cloneArr(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(utils.flatten(errorsFromNextSteps));\n    }\n}\nexports.validateNoLeftRecursion = validateNoLeftRecursion;\nfunction getFirstNoneTerminal(definition) {\n    var result = [];\n    if (utils.isEmpty(definition)) {\n        return result;\n    }\n    var firstProd = utils.first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof gast_public_1.NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof gast_public_1.Alternative ||\n        firstProd instanceof gast_public_1.Option ||\n        firstProd instanceof gast_public_1.RepetitionMandatory ||\n        firstProd instanceof gast_public_1.RepetitionMandatoryWithSeparator ||\n        firstProd instanceof gast_public_1.RepetitionWithSeparator ||\n        firstProd instanceof gast_public_1.Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof gast_public_1.Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = utils.flatten(utils.map(firstProd.definition, function (currSubDef) {\n            return getFirstNoneTerminal(currSubDef.definition);\n        }));\n    }\n    else if (firstProd instanceof gast_public_1.Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    var isFirstOptional = gast_1.isOptionalProd(firstProd);\n    var hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        var rest = utils.drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nexports.getFirstNoneTerminal = getFirstNoneTerminal;\nvar OrCollector = /** @class */ (function (_super) {\n    __extends(OrCollector, _super);\n    function OrCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.alternations = [];\n        return _this;\n    }\n    OrCollector.prototype.visitAlternation = function (node) {\n        this.alternations.push(node);\n    };\n    return OrCollector;\n}(gast_visitor_public_1.GAstVisitor));\nfunction validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    var orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    var ors = orCollector.alternations;\n    var errors = utils.reduce(ors, function (errors, currOr) {\n        var exceptLast = utils.dropRight(currOr.definition);\n        var currErrors = utils.map(exceptLast, function (currAlternative, currAltIdx) {\n            var possibleFirstInAlt = interpreter_1.nextPossibleTokensAfter([currAlternative], [], null, 1);\n            if (utils.isEmpty(possibleFirstInAlt)) {\n                return {\n                    message: errMsgProvider.buildEmptyAlternationError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                        emptyChoiceIdx: currAltIdx\n                    }),\n                    type: parser_1.ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                    alternative: currAltIdx + 1\n                };\n            }\n            else {\n                return null;\n            }\n        });\n        return errors.concat(utils.compact(currErrors));\n    }, []);\n    return errors;\n}\nexports.validateEmptyOrAlternative = validateEmptyOrAlternative;\nfunction validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    var orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    var ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/SAP/chevrotain/issues/869\n    ors = utils_1.reject(ors, function (currOr) { return currOr.ignoreAmbiguities === true; });\n    var errors = utils.reduce(ors, function (result, currOr) {\n        var currOccurrence = currOr.idx;\n        var actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        var alternatives = lookahead_1.getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        var altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        var altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return result.concat(altsAmbiguityErrors, altsPrefixAmbiguityErrors);\n    }, []);\n    return errors;\n}\nexports.validateAmbiguousAlternationAlternatives = validateAmbiguousAlternationAlternatives;\nvar RepetionCollector = /** @class */ (function (_super) {\n    __extends(RepetionCollector, _super);\n    function RepetionCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.allProductions = [];\n        return _this;\n    }\n    RepetionCollector.prototype.visitRepetitionWithSeparator = function (manySep) {\n        this.allProductions.push(manySep);\n    };\n    RepetionCollector.prototype.visitRepetitionMandatory = function (atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    };\n    RepetionCollector.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    };\n    RepetionCollector.prototype.visitRepetition = function (many) {\n        this.allProductions.push(many);\n    };\n    return RepetionCollector;\n}(gast_visitor_public_1.GAstVisitor));\nexports.RepetionCollector = RepetionCollector;\nfunction validateTooManyAlts(topLevelRule, errMsgProvider) {\n    var orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    var ors = orCollector.alternations;\n    var errors = utils.reduce(ors, function (errors, currOr) {\n        if (currOr.definition.length > 255) {\n            errors.push({\n                message: errMsgProvider.buildTooManyAlternativesError({\n                    topLevelRule: topLevelRule,\n                    alternation: currOr\n                }),\n                type: parser_1.ParserDefinitionErrorType.TOO_MANY_ALTS,\n                ruleName: topLevelRule.name,\n                occurrence: currOr.idx\n            });\n        }\n        return errors;\n    }, []);\n    return errors;\n}\nexports.validateTooManyAlts = validateTooManyAlts;\nfunction validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    var errors = [];\n    utils_1.forEach(topLevelRules, function (currTopRule) {\n        var collectorVisitor = new RepetionCollector();\n        currTopRule.accept(collectorVisitor);\n        var allRuleProductions = collectorVisitor.allProductions;\n        utils_1.forEach(allRuleProductions, function (currProd) {\n            var prodType = lookahead_1.getProdType(currProd);\n            var actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            var currOccurrence = currProd.idx;\n            var paths = lookahead_1.getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            var pathsInsideProduction = paths[0];\n            if (utils_1.isEmpty(utils_1.flatten(pathsInsideProduction))) {\n                var errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd\n                });\n                errors.push({\n                    message: errMsg,\n                    type: parser_1.ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name\n                });\n            }\n        });\n    });\n    return errors;\n}\nexports.validateSomeNonEmptyLookaheadPath = validateSomeNonEmptyLookaheadPath;\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    var foundAmbiguousPaths = [];\n    var identicalAmbiguities = utils_1.reduce(alternatives, function (result, currAlt, currAltIdx) {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        utils_1.forEach(currAlt, function (currPath) {\n            var altsCurrPathAppearsIn = [currAltIdx];\n            utils_1.forEach(alternatives, function (currOtherAlt, currOtherAltIdx) {\n                if (currAltIdx !== currOtherAltIdx &&\n                    lookahead_1.containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !lookahead_1.containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath\n                });\n            }\n        });\n        return result;\n    }, []);\n    var currErrors = utils.map(identicalAmbiguities, function (currAmbDescriptor) {\n        var ambgIndices = utils_1.map(currAmbDescriptor.alts, function (currAltIdx) { return currAltIdx + 1; });\n        var currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path\n        });\n        return {\n            message: currMessage,\n            type: parser_1.ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: [currAmbDescriptor.alts]\n        };\n    });\n    return currErrors;\n}\nfunction checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    var errors = [];\n    // flatten\n    var pathsAndIndices = utils_1.reduce(alternatives, function (result, currAlt, idx) {\n        var currPathsAndIdx = utils_1.map(currAlt, function (currPath) {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    utils_1.forEach(pathsAndIndices, function (currPathAndIdx) {\n        var alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return;\n        }\n        var targetIdx = currPathAndIdx.idx;\n        var targetPath = currPathAndIdx.path;\n        var prefixAmbiguitiesPathsAndIndices = utils_1.findAll(pathsAndIndices, function (searchPathAndIdx) {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                lookahead_1.isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        var currPathPrefixErrors = utils_1.map(prefixAmbiguitiesPathsAndIndices, function (currAmbPathAndIdx) {\n            var ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            var occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            var message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path\n            });\n            return {\n                message: message,\n                type: parser_1.ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices\n            };\n        });\n        errors = errors.concat(currPathPrefixErrors);\n    });\n    return errors;\n}\nexports.checkPrefixAlternativesAmbiguities = checkPrefixAlternativesAmbiguities;\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    var errors = [];\n    var tokenNames = utils_1.map(tokenTypes, function (currToken) { return currToken.name; });\n    utils_1.forEach(topLevels, function (currRule) {\n        var currRuleName = currRule.name;\n        if (utils_1.contains(tokenNames, currRuleName)) {\n            var errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: parser_1.ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.firstForTerminal = exports.firstForBranching = exports.firstForSequence = exports.first = void 0;\nvar utils_1 = require(\"../../utils/utils\");\nvar gast_public_1 = require(\"./gast/gast_public\");\nvar gast_1 = require(\"./gast/gast\");\nfunction first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof gast_public_1.NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof gast_public_1.Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (gast_1.isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (gast_1.isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.first = first;\nfunction firstForSequence(prod) {\n    var firstSet = [];\n    var seq = prod.definition;\n    var nextSubProdIdx = 0;\n    var hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    var currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    var isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = gast_1.isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return utils_1.uniq(firstSet);\n}\nexports.firstForSequence = firstForSequence;\nfunction firstForBranching(prod) {\n    var allAlternativesFirsts = utils_1.map(prod.definition, function (innerProd) {\n        return first(innerProd);\n    });\n    return utils_1.uniq(utils_1.flatten(allAlternativesFirsts));\n}\nexports.firstForBranching = firstForBranching;\nfunction firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\nexports.firstForTerminal = firstForTerminal;\n//# sourceMappingURL=first.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildInProdFollowPrefix = exports.buildBetweenProdsFollowPrefix = exports.computeAllProdsFollows = exports.ResyncFollowsWalker = void 0;\nvar rest_1 = require(\"./rest\");\nvar first_1 = require(\"./first\");\nvar utils_1 = require(\"../../utils/utils\");\nvar constants_1 = require(\"../constants\");\nvar gast_public_1 = require(\"./gast/gast_public\");\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nvar ResyncFollowsWalker = /** @class */ (function (_super) {\n    __extends(ResyncFollowsWalker, _super);\n    function ResyncFollowsWalker(topProd) {\n        var _this = _super.call(this) || this;\n        _this.topProd = topProd;\n        _this.follows = {};\n        return _this;\n    }\n    ResyncFollowsWalker.prototype.startWalking = function () {\n        this.walk(this.topProd);\n        return this.follows;\n    };\n    ResyncFollowsWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    };\n    ResyncFollowsWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) {\n        var followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        var fullRest = currRest.concat(prevRest);\n        var restProd = new gast_public_1.Alternative({ definition: fullRest });\n        var t_in_topProd_follows = first_1.first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    };\n    return ResyncFollowsWalker;\n}(rest_1.RestWalker));\nexports.ResyncFollowsWalker = ResyncFollowsWalker;\nfunction computeAllProdsFollows(topProductions) {\n    var reSyncFollows = {};\n    utils_1.forEach(topProductions, function (topProd) {\n        var currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        utils_1.assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexports.computeAllProdsFollows = computeAllProdsFollows;\nfunction buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + constants_1.IN;\n}\nexports.buildBetweenProdsFollowPrefix = buildBetweenProdsFollowPrefix;\nfunction buildInProdFollowPrefix(terminal) {\n    var terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + constants_1.IN;\n}\nexports.buildInProdFollowPrefix = buildInProdFollowPrefix;\n//# sourceMappingURL=follow.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.collectMethods = exports.DslMethodsCollectorVisitor = exports.getProductionDslName = exports.isBranchingProd = exports.isOptionalProd = exports.isSequenceProd = void 0;\nvar utils_1 = require(\"../../../utils/utils\");\nvar gast_public_1 = require(\"./gast_public\");\nvar gast_visitor_public_1 = require(\"./gast_visitor_public\");\nfunction isSequenceProd(prod) {\n    return (prod instanceof gast_public_1.Alternative ||\n        prod instanceof gast_public_1.Option ||\n        prod instanceof gast_public_1.Repetition ||\n        prod instanceof gast_public_1.RepetitionMandatory ||\n        prod instanceof gast_public_1.RepetitionMandatoryWithSeparator ||\n        prod instanceof gast_public_1.RepetitionWithSeparator ||\n        prod instanceof gast_public_1.Terminal ||\n        prod instanceof gast_public_1.Rule);\n}\nexports.isSequenceProd = isSequenceProd;\nfunction isOptionalProd(prod, alreadyVisited) {\n    if (alreadyVisited === void 0) { alreadyVisited = []; }\n    var isDirectlyOptional = prod instanceof gast_public_1.Option ||\n        prod instanceof gast_public_1.Repetition ||\n        prod instanceof gast_public_1.RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof gast_public_1.Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return utils_1.some(prod.definition, function (subProd) {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof gast_public_1.NonTerminal && utils_1.contains(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof gast_public_1.AbstractProduction) {\n        if (prod instanceof gast_public_1.NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return utils_1.every(prod.definition, function (subProd) {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexports.isOptionalProd = isOptionalProd;\nfunction isBranchingProd(prod) {\n    return prod instanceof gast_public_1.Alternation;\n}\nexports.isBranchingProd = isBranchingProd;\nfunction getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof gast_public_1.NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof gast_public_1.Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof gast_public_1.Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof gast_public_1.RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof gast_public_1.RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof gast_public_1.Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof gast_public_1.Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.getProductionDslName = getProductionDslName;\nvar DslMethodsCollectorVisitor = /** @class */ (function (_super) {\n    __extends(DslMethodsCollectorVisitor, _super);\n    function DslMethodsCollectorVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // A minus is never valid in an identifier name\n        _this.separator = \"-\";\n        _this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: []\n        };\n        return _this;\n    }\n    DslMethodsCollectorVisitor.prototype.reset = function () {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: []\n        };\n    };\n    DslMethodsCollectorVisitor.prototype.visitTerminal = function (terminal) {\n        var key = terminal.terminalType.name + this.separator + \"Terminal\";\n        if (!utils_1.has(this.dslMethods, key)) {\n            this.dslMethods[key] = [];\n        }\n        this.dslMethods[key].push(terminal);\n    };\n    DslMethodsCollectorVisitor.prototype.visitNonTerminal = function (subrule) {\n        var key = subrule.nonTerminalName + this.separator + \"Terminal\";\n        if (!utils_1.has(this.dslMethods, key)) {\n            this.dslMethods[key] = [];\n        }\n        this.dslMethods[key].push(subrule);\n    };\n    DslMethodsCollectorVisitor.prototype.visitOption = function (option) {\n        this.dslMethods.option.push(option);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetition = function (many) {\n        this.dslMethods.repetition.push(many);\n    };\n    DslMethodsCollectorVisitor.prototype.visitAlternation = function (or) {\n        this.dslMethods.alternation.push(or);\n    };\n    return DslMethodsCollectorVisitor;\n}(gast_visitor_public_1.GAstVisitor));\nexports.DslMethodsCollectorVisitor = DslMethodsCollectorVisitor;\nvar collectorVisitor = new DslMethodsCollectorVisitor();\nfunction collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    var dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\nexports.collectMethods = collectMethods;\n//# sourceMappingURL=gast.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeProduction = exports.serializeGrammar = exports.Terminal = exports.Alternation = exports.RepetitionWithSeparator = exports.Repetition = exports.RepetitionMandatoryWithSeparator = exports.RepetitionMandatory = exports.Option = exports.Alternative = exports.Rule = exports.NonTerminal = exports.AbstractProduction = void 0;\nvar utils_1 = require(\"../../../utils/utils\");\nvar tokens_public_1 = require(\"../../../scan/tokens_public\");\nvar AbstractProduction = /** @class */ (function () {\n    function AbstractProduction(_definition) {\n        this._definition = _definition;\n    }\n    Object.defineProperty(AbstractProduction.prototype, \"definition\", {\n        get: function () {\n            return this._definition;\n        },\n        set: function (value) {\n            this._definition = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractProduction.prototype.accept = function (visitor) {\n        visitor.visit(this);\n        utils_1.forEach(this.definition, function (prod) {\n            prod.accept(visitor);\n        });\n    };\n    return AbstractProduction;\n}());\nexports.AbstractProduction = AbstractProduction;\nvar NonTerminal = /** @class */ (function (_super) {\n    __extends(NonTerminal, _super);\n    function NonTerminal(options) {\n        var _this = _super.call(this, []) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    Object.defineProperty(NonTerminal.prototype, \"definition\", {\n        get: function () {\n            if (this.referencedRule !== undefined) {\n                return this.referencedRule.definition;\n            }\n            return [];\n        },\n        set: function (definition) {\n            // immutable\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NonTerminal.prototype.accept = function (visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    };\n    return NonTerminal;\n}(AbstractProduction));\nexports.NonTerminal = NonTerminal;\nvar Rule = /** @class */ (function (_super) {\n    __extends(Rule, _super);\n    function Rule(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.orgText = \"\";\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Rule;\n}(AbstractProduction));\nexports.Rule = Rule;\nvar Alternative = /** @class */ (function (_super) {\n    __extends(Alternative, _super);\n    function Alternative(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.ignoreAmbiguities = false;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Alternative;\n}(AbstractProduction));\nexports.Alternative = Alternative;\nvar Option = /** @class */ (function (_super) {\n    __extends(Option, _super);\n    function Option(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Option;\n}(AbstractProduction));\nexports.Option = Option;\nvar RepetitionMandatory = /** @class */ (function (_super) {\n    __extends(RepetitionMandatory, _super);\n    function RepetitionMandatory(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return RepetitionMandatory;\n}(AbstractProduction));\nexports.RepetitionMandatory = RepetitionMandatory;\nvar RepetitionMandatoryWithSeparator = /** @class */ (function (_super) {\n    __extends(RepetitionMandatoryWithSeparator, _super);\n    function RepetitionMandatoryWithSeparator(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return RepetitionMandatoryWithSeparator;\n}(AbstractProduction));\nexports.RepetitionMandatoryWithSeparator = RepetitionMandatoryWithSeparator;\nvar Repetition = /** @class */ (function (_super) {\n    __extends(Repetition, _super);\n    function Repetition(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Repetition;\n}(AbstractProduction));\nexports.Repetition = Repetition;\nvar RepetitionWithSeparator = /** @class */ (function (_super) {\n    __extends(RepetitionWithSeparator, _super);\n    function RepetitionWithSeparator(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return RepetitionWithSeparator;\n}(AbstractProduction));\nexports.RepetitionWithSeparator = RepetitionWithSeparator;\nvar Alternation = /** @class */ (function (_super) {\n    __extends(Alternation, _super);\n    function Alternation(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        _this.ignoreAmbiguities = false;\n        _this.hasPredicates = false;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    Object.defineProperty(Alternation.prototype, \"definition\", {\n        get: function () {\n            return this._definition;\n        },\n        set: function (value) {\n            this._definition = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Alternation;\n}(AbstractProduction));\nexports.Alternation = Alternation;\nvar Terminal = /** @class */ (function () {\n    function Terminal(options) {\n        this.idx = 1;\n        utils_1.assign(this, utils_1.pick(options, function (v) { return v !== undefined; }));\n    }\n    Terminal.prototype.accept = function (visitor) {\n        visitor.visit(this);\n    };\n    return Terminal;\n}());\nexports.Terminal = Terminal;\nfunction serializeGrammar(topRules) {\n    return utils_1.map(topRules, serializeProduction);\n}\nexports.serializeGrammar = serializeGrammar;\nfunction serializeProduction(node) {\n    function convertDefinition(definition) {\n        return utils_1.map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        return {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx\n        };\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Terminal) {\n        var serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokens_public_1.tokenLabel(node.terminalType),\n            idx: node.idx\n        };\n        var pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = utils_1.isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.serializeProduction = serializeProduction;\n//# sourceMappingURL=gast_public.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignOccurrenceIndices = exports.validateGrammar = exports.resolveGrammar = void 0;\nvar utils_1 = require(\"../../../utils/utils\");\nvar resolver_1 = require(\"../resolver\");\nvar checks_1 = require(\"../checks\");\nvar errors_public_1 = require(\"../../errors_public\");\nvar gast_1 = require(\"./gast\");\nfunction resolveGrammar(options) {\n    options = utils_1.defaults(options, {\n        errMsgProvider: errors_public_1.defaultGrammarResolverErrorProvider\n    });\n    var topRulesTable = {};\n    utils_1.forEach(options.rules, function (rule) {\n        topRulesTable[rule.name] = rule;\n    });\n    return resolver_1.resolveGrammar(topRulesTable, options.errMsgProvider);\n}\nexports.resolveGrammar = resolveGrammar;\nfunction validateGrammar(options) {\n    options = utils_1.defaults(options, {\n        errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider\n    });\n    return checks_1.validateGrammar(options.rules, options.maxLookahead, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\nexports.validateGrammar = validateGrammar;\nfunction assignOccurrenceIndices(options) {\n    utils_1.forEach(options.rules, function (currRule) {\n        var methodsCollector = new gast_1.DslMethodsCollectorVisitor();\n        currRule.accept(methodsCollector);\n        utils_1.forEach(methodsCollector.dslMethods, function (methods) {\n            utils_1.forEach(methods, function (currMethod, arrIdx) {\n                currMethod.idx = arrIdx + 1;\n            });\n        });\n    });\n}\nexports.assignOccurrenceIndices = assignOccurrenceIndices;\n//# sourceMappingURL=gast_resolver_public.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GAstVisitor = void 0;\nvar gast_public_1 = require(\"./gast_public\");\nvar GAstVisitor = /** @class */ (function () {\n    function GAstVisitor() {\n    }\n    GAstVisitor.prototype.visit = function (node) {\n        var nodeAny = node;\n        switch (nodeAny.constructor) {\n            case gast_public_1.NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case gast_public_1.Alternative:\n                return this.visitAlternative(nodeAny);\n            case gast_public_1.Option:\n                return this.visitOption(nodeAny);\n            case gast_public_1.RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case gast_public_1.RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case gast_public_1.RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case gast_public_1.Repetition:\n                return this.visitRepetition(nodeAny);\n            case gast_public_1.Alternation:\n                return this.visitAlternation(nodeAny);\n            case gast_public_1.Terminal:\n                return this.visitTerminal(nodeAny);\n            case gast_public_1.Rule:\n                return this.visitRule(nodeAny);\n            /* istanbul ignore next */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    };\n    GAstVisitor.prototype.visitNonTerminal = function (node) { };\n    GAstVisitor.prototype.visitAlternative = function (node) { };\n    GAstVisitor.prototype.visitOption = function (node) { };\n    GAstVisitor.prototype.visitRepetition = function (node) { };\n    GAstVisitor.prototype.visitRepetitionMandatory = function (node) { };\n    GAstVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) { };\n    GAstVisitor.prototype.visitRepetitionWithSeparator = function (node) { };\n    GAstVisitor.prototype.visitAlternation = function (node) { };\n    GAstVisitor.prototype.visitTerminal = function (node) { };\n    GAstVisitor.prototype.visitRule = function (node) { };\n    return GAstVisitor;\n}());\nexports.GAstVisitor = GAstVisitor;\n//# sourceMappingURL=gast_visitor_public.js.map","\"use strict\";\n/* istanbul ignore next */ var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nextPossibleTokensAfter = exports.possiblePathsFrom = exports.NextTerminalAfterAtLeastOneSepWalker = exports.NextTerminalAfterAtLeastOneWalker = exports.NextTerminalAfterManySepWalker = exports.NextTerminalAfterManyWalker = exports.AbstractNextTerminalAfterProductionWalker = exports.NextAfterTokenWalker = exports.AbstractNextPossibleTokensWalker = void 0;\nvar rest_1 = require(\"./rest\");\nvar utils_1 = require(\"../../utils/utils\");\nvar first_1 = require(\"./first\");\nvar gast_public_1 = require(\"./gast/gast_public\");\nvar AbstractNextPossibleTokensWalker = /** @class */ (function (_super) {\n    __extends(AbstractNextPossibleTokensWalker, _super);\n    function AbstractNextPossibleTokensWalker(topProd, path) {\n        var _this = _super.call(this) /* istanbul ignore next */ || this;\n        _this.topProd = topProd;\n        _this.path = path;\n        _this.possibleTokTypes = [];\n        _this.nextProductionName = \"\";\n        _this.nextProductionOccurrence = 0;\n        _this.found = false;\n        _this.isAtEndOfPath = false;\n        return _this;\n    }\n    AbstractNextPossibleTokensWalker.prototype.startWalking = function () {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = utils_1.cloneArr(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = utils_1.cloneArr(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    };\n    AbstractNextPossibleTokensWalker.prototype.walk = function (prod, prevRest) {\n        if (prevRest === void 0) { prevRest = []; }\n        // stop scanning once we found the path\n        if (!this.found) {\n            _super.prototype.walk.call(this, prod, prevRest);\n        }\n    };\n    AbstractNextPossibleTokensWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            var fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    };\n    AbstractNextPossibleTokensWalker.prototype.updateExpectedNext = function () {\n        // need to consume the Terminal\n        if (utils_1.isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    };\n    return AbstractNextPossibleTokensWalker;\n}(rest_1.RestWalker));\nexports.AbstractNextPossibleTokensWalker = AbstractNextPossibleTokensWalker;\nvar NextAfterTokenWalker = /** @class */ (function (_super) {\n    __extends(NextAfterTokenWalker, _super);\n    function NextAfterTokenWalker(topProd, path) {\n        var _this = _super.call(this, topProd, path) /* istanbul ignore next */ || this;\n        _this.path = path;\n        _this.nextTerminalName = \"\";\n        _this.nextTerminalOccurrence = 0;\n        _this.nextTerminalName = _this.path.lastTok.name;\n        _this.nextTerminalOccurrence = _this.path.lastTokOccurrence;\n        return _this;\n    }\n    NextAfterTokenWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            var fullRest = currRest.concat(prevRest);\n            var restProd = new gast_public_1.Alternative({ definition: fullRest });\n            this.possibleTokTypes = first_1.first(restProd);\n            this.found = true;\n        }\n    };\n    return NextAfterTokenWalker;\n}(AbstractNextPossibleTokensWalker));\nexports.NextAfterTokenWalker = NextAfterTokenWalker;\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nvar AbstractNextTerminalAfterProductionWalker = /** @class */ (function (_super) {\n    __extends(AbstractNextTerminalAfterProductionWalker, _super);\n    function AbstractNextTerminalAfterProductionWalker(topRule, occurrence) {\n        var _this = _super.call(this) /* istanbul ignore next */ || this;\n        _this.topRule = topRule;\n        _this.occurrence = occurrence;\n        _this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined\n        };\n        return _this;\n    }\n    AbstractNextTerminalAfterProductionWalker.prototype.startWalking = function () {\n        this.walk(this.topRule);\n        return this.result;\n    };\n    return AbstractNextTerminalAfterProductionWalker;\n}(rest_1.RestWalker));\nexports.AbstractNextTerminalAfterProductionWalker = AbstractNextTerminalAfterProductionWalker;\nvar NextTerminalAfterManyWalker = /** @class */ (function (_super) {\n    __extends(NextTerminalAfterManyWalker, _super);\n    function NextTerminalAfterManyWalker() {\n        return _super !== null && _super.apply(this, arguments) /* istanbul ignore next */ || this;\n    }\n    NextTerminalAfterManyWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            var firstAfterMany = utils_1.first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof gast_public_1.Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            _super.prototype.walkMany.call(this, manyProd, currRest, prevRest);\n        }\n    };\n    return NextTerminalAfterManyWalker;\n}(AbstractNextTerminalAfterProductionWalker));\nexports.NextTerminalAfterManyWalker = NextTerminalAfterManyWalker;\nvar NextTerminalAfterManySepWalker = /** @class */ (function (_super) {\n    __extends(NextTerminalAfterManySepWalker, _super);\n    function NextTerminalAfterManySepWalker() {\n        return _super !== null && _super.apply(this, arguments) /* istanbul ignore next */ || this;\n    }\n    NextTerminalAfterManySepWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            var firstAfterManySep = utils_1.first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof gast_public_1.Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            _super.prototype.walkManySep.call(this, manySepProd, currRest, prevRest);\n        }\n    };\n    return NextTerminalAfterManySepWalker;\n}(AbstractNextTerminalAfterProductionWalker));\nexports.NextTerminalAfterManySepWalker = NextTerminalAfterManySepWalker;\nvar NextTerminalAfterAtLeastOneWalker = /** @class */ (function (_super) {\n    __extends(NextTerminalAfterAtLeastOneWalker, _super);\n    function NextTerminalAfterAtLeastOneWalker() {\n        return _super !== null && _super.apply(this, arguments) /* istanbul ignore next */ || this;\n    }\n    NextTerminalAfterAtLeastOneWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            var firstAfterAtLeastOne = utils_1.first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof gast_public_1.Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            _super.prototype.walkAtLeastOne.call(this, atLeastOneProd, currRest, prevRest);\n        }\n    };\n    return NextTerminalAfterAtLeastOneWalker;\n}(AbstractNextTerminalAfterProductionWalker));\nexports.NextTerminalAfterAtLeastOneWalker = NextTerminalAfterAtLeastOneWalker;\n// TODO: reduce code duplication in the AfterWalkers\nvar NextTerminalAfterAtLeastOneSepWalker = /** @class */ (function (_super) {\n    __extends(NextTerminalAfterAtLeastOneSepWalker, _super);\n    function NextTerminalAfterAtLeastOneSepWalker() {\n        return _super !== null && _super.apply(this, arguments) /* istanbul ignore next */ || this;\n    }\n    NextTerminalAfterAtLeastOneSepWalker.prototype.walkAtLeastOneSep = function (atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            var firstAfterfirstAfterAtLeastOneSep = utils_1.first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof gast_public_1.Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            _super.prototype.walkAtLeastOneSep.call(this, atleastOneSepProd, currRest, prevRest);\n        }\n    };\n    return NextTerminalAfterAtLeastOneSepWalker;\n}(AbstractNextTerminalAfterProductionWalker));\nexports.NextTerminalAfterAtLeastOneSepWalker = NextTerminalAfterAtLeastOneSepWalker;\nfunction possiblePathsFrom(targetDef, maxLength, currPath) {\n    if (currPath === void 0) { currPath = []; }\n    // avoid side effects\n    currPath = utils_1.cloneArr(currPath);\n    var result = [];\n    var i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(utils_1.drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        var alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        var prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof gast_public_1.Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof gast_public_1.NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof gast_public_1.Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof gast_public_1.RepetitionMandatory) {\n            var newDef = prod.definition.concat([\n                new gast_public_1.Repetition({\n                    definition: prod.definition\n                })\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n            var newDef = [\n                new gast_public_1.Alternative({ definition: prod.definition }),\n                new gast_public_1.Repetition({\n                    definition: [new gast_public_1.Terminal({ terminalType: prod.separator })].concat(prod.definition)\n                })\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof gast_public_1.RepetitionWithSeparator) {\n            var newDef = prod.definition.concat([\n                new gast_public_1.Repetition({\n                    definition: [new gast_public_1.Terminal({ terminalType: prod.separator })].concat(prod.definition)\n                })\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof gast_public_1.Repetition) {\n            var newDef = prod.definition.concat([\n                new gast_public_1.Repetition({\n                    definition: prod.definition\n                })\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof gast_public_1.Alternation) {\n            utils_1.forEach(prod.definition, function (currAlt) {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (utils_1.isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof gast_public_1.Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: utils_1.drop(targetDef, i)\n    });\n    return result;\n}\nexports.possiblePathsFrom = possiblePathsFrom;\nfunction nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    var EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    var EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    var EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    var foundCompletePath = false;\n    var tokenVectorLength = tokenVector.length;\n    var minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    var result = [];\n    var possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: []\n    });\n    while (!utils_1.isEmpty(possiblePaths)) {\n        var currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                utils_1.last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        var currDef = currPath.def;\n        var currIdx = currPath.idx;\n        var currRuleStack = currPath.ruleStack;\n        var currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (utils_1.isEmpty(currDef)) {\n            continue;\n        }\n        var prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            var nextPath = {\n                idx: currIdx,\n                def: utils_1.drop(currDef),\n                ruleStack: utils_1.dropRight(currRuleStack),\n                occurrenceStack: utils_1.dropRight(currOccurrenceStack)\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof gast_public_1.Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                var nextIdx = currIdx + 1;\n                var actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    var nextPath = {\n                        idx: nextIdx,\n                        def: utils_1.drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof gast_public_1.NonTerminal) {\n            var newRuleStack = utils_1.cloneArr(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            var newOccurrenceStack = utils_1.cloneArr(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            var nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, utils_1.drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof gast_public_1.Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            var nextPathWithout = {\n                idx: currIdx,\n                def: utils_1.drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            var nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(utils_1.drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof gast_public_1.RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            var secondIteration = new gast_public_1.Repetition({\n                definition: prod.definition,\n                idx: prod.idx\n            });\n            var nextDef = prod.definition.concat([secondIteration], utils_1.drop(currDef));\n            var nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            var separatorGast = new gast_public_1.Terminal({\n                terminalType: prod.separator\n            });\n            var secondIteration = new gast_public_1.Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx\n            });\n            var nextDef = prod.definition.concat([secondIteration], utils_1.drop(currDef));\n            var nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof gast_public_1.RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            var nextPathWithout = {\n                idx: currIdx,\n                def: utils_1.drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            var separatorGast = new gast_public_1.Terminal({\n                terminalType: prod.separator\n            });\n            var nthRepetition = new gast_public_1.Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx\n            });\n            var nextDef = prod.definition.concat([nthRepetition], utils_1.drop(currDef));\n            var nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof gast_public_1.Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            var nextPathWithout = {\n                idx: currIdx,\n                def: utils_1.drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            var nthRepetition = new gast_public_1.Repetition({\n                definition: prod.definition,\n                idx: prod.idx\n            });\n            var nextDef = prod.definition.concat([nthRepetition], utils_1.drop(currDef));\n            var nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof gast_public_1.Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (var i = prod.definition.length - 1; i >= 0; i--) {\n                var currAlt = prod.definition[i];\n                var currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(utils_1.drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof gast_public_1.Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(utils_1.drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            });\n        }\n        else if (prod instanceof gast_public_1.Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nexports.nextPossibleTokensAfter = nextPossibleTokensAfter;\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    var newRuleStack = utils_1.cloneArr(currRuleStack);\n    newRuleStack.push(topRule.name);\n    var newCurrOccurrenceStack = utils_1.cloneArr(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack\n    };\n}\n//# sourceMappingURL=interpreter.js.map","\"use strict\";\n// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getKeyForAutomaticLookahead = exports.AT_LEAST_ONE_SEP_IDX = exports.MANY_SEP_IDX = exports.AT_LEAST_ONE_IDX = exports.MANY_IDX = exports.OPTION_IDX = exports.OR_IDX = exports.BITS_FOR_ALT_IDX = exports.BITS_FOR_RULE_IDX = exports.BITS_FOR_OCCURRENCE_IDX = exports.BITS_FOR_METHOD_TYPE = void 0;\nexports.BITS_FOR_METHOD_TYPE = 4;\nexports.BITS_FOR_OCCURRENCE_IDX = 8;\nexports.BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexports.BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\n/* tslint:disable */\nexports.OR_IDX = 1 << exports.BITS_FOR_OCCURRENCE_IDX;\nexports.OPTION_IDX = 2 << exports.BITS_FOR_OCCURRENCE_IDX;\nexports.MANY_IDX = 3 << exports.BITS_FOR_OCCURRENCE_IDX;\nexports.AT_LEAST_ONE_IDX = 4 << exports.BITS_FOR_OCCURRENCE_IDX;\nexports.MANY_SEP_IDX = 5 << exports.BITS_FOR_OCCURRENCE_IDX;\nexports.AT_LEAST_ONE_SEP_IDX = 6 << exports.BITS_FOR_OCCURRENCE_IDX;\n/* tslint:enable */\n// this actually returns a number, but it is always used as a string (object prop key)\nfunction getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    /* tslint:disable */\n    return occurrence | dslMethodIdx | ruleIdx;\n    /* tslint:enable */\n}\nexports.getKeyForAutomaticLookahead = getKeyForAutomaticLookahead;\nvar BITS_START_FOR_ALT_IDX = 32 - exports.BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.areTokenCategoriesNotUsed = exports.isStrictPrefixOfPath = exports.containsPath = exports.getLookaheadPathsForOptionalProd = exports.getLookaheadPathsForOr = exports.lookAheadSequenceFromAlternatives = exports.buildSingleAlternativeLookaheadFunction = exports.buildAlternativesLookAheadFunc = exports.buildLookaheadFuncForOptionalProd = exports.buildLookaheadFuncForOr = exports.getProdType = exports.PROD_TYPE = void 0;\nvar utils_1 = require(\"../../utils/utils\");\nvar interpreter_1 = require(\"./interpreter\");\nvar rest_1 = require(\"./rest\");\nvar tokens_1 = require(\"../../scan/tokens\");\nvar gast_public_1 = require(\"./gast/gast_public\");\nvar gast_visitor_public_1 = require(\"./gast/gast_visitor_public\");\nvar PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE = exports.PROD_TYPE || (exports.PROD_TYPE = {}));\nfunction getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof gast_public_1.Option) {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof gast_public_1.Repetition) {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof gast_public_1.RepetitionMandatory) {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof gast_public_1.RepetitionWithSeparator) {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof gast_public_1.Alternation) {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.getProdType = getProdType;\nfunction buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    var lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    var tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokens_1.tokenStructuredMatcherNoCategories\n        : tokens_1.tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\nexports.buildLookaheadFuncForOr = buildLookaheadFuncForOr;\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nfunction buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    var lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    var tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokens_1.tokenStructuredMatcherNoCategories\n        : tokens_1.tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexports.buildLookaheadFuncForOptionalProd = buildLookaheadFuncForOptionalProd;\nfunction buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    var numOfAlts = alts.length;\n    var areAllOneTokenLookahead = utils_1.every(alts, function (currAlt) {\n        return utils_1.every(currAlt, function (currPath) {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            var predicates = utils_1.map(orAlts, function (currAlt) { return currAlt.GATE; });\n            for (var t = 0; t < numOfAlts; t++) {\n                var currAlt = alts[t];\n                var currNumOfPaths = currAlt.length;\n                var currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (var j = 0; j < currNumOfPaths; j++) {\n                    var currPath = currAlt[j];\n                    var currPathLength = currPath.length;\n                    for (var i = 0; i < currPathLength; i++) {\n                        var nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        var singleTokenAlts = utils_1.map(alts, function (currAlt) {\n            return utils_1.flatten(currAlt);\n        });\n        var choiceToAlt_1 = utils_1.reduce(singleTokenAlts, function (result, currAlt, idx) {\n            utils_1.forEach(currAlt, function (currTokType) {\n                if (!utils_1.has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                utils_1.forEach(currTokType.categoryMatches, function (currExtendingType) {\n                    if (!utils_1.has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, []);\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            var nextToken = this.LA(1);\n            return choiceToAlt_1[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (var t = 0; t < numOfAlts; t++) {\n                var currAlt = alts[t];\n                var currNumOfPaths = currAlt.length;\n                nextPath: for (var j = 0; j < currNumOfPaths; j++) {\n                    var currPath = currAlt[j];\n                    var currPathLength = currPath.length;\n                    for (var i = 0; i < currPathLength; i++) {\n                        var nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexports.buildAlternativesLookAheadFunc = buildAlternativesLookAheadFunc;\nfunction buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    var areAllOneTokenLookahead = utils_1.every(alt, function (currPath) {\n        return currPath.length === 1;\n    });\n    var numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        var singleTokensTypes = utils_1.flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            utils_1.isEmpty(singleTokensTypes[0].categoryMatches)) {\n            var expectedTokenType = singleTokensTypes[0];\n            var expectedTokenUniqueKey_1 = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey_1;\n            };\n        }\n        else {\n            var choiceToAlt_2 = utils_1.reduce(singleTokensTypes, function (result, currTokType, idx) {\n                result[currTokType.tokenTypeIdx] = true;\n                utils_1.forEach(currTokType.categoryMatches, function (currExtendingType) {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                var nextToken = this.LA(1);\n                return choiceToAlt_2[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (var j = 0; j < numOfPaths; j++) {\n                var currPath = alt[j];\n                var currPathLength = currPath.length;\n                for (var i = 0; i < currPathLength; i++) {\n                    var nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nexports.buildSingleAlternativeLookaheadFunction = buildSingleAlternativeLookaheadFunction;\nvar RestDefinitionFinderWalker = /** @class */ (function (_super) {\n    __extends(RestDefinitionFinderWalker, _super);\n    function RestDefinitionFinderWalker(topProd, targetOccurrence, targetProdType) {\n        var _this = _super.call(this) || this;\n        _this.topProd = topProd;\n        _this.targetOccurrence = targetOccurrence;\n        _this.targetProdType = targetProdType;\n        return _this;\n    }\n    RestDefinitionFinderWalker.prototype.startWalking = function () {\n        this.walk(this.topProd);\n        return this.restDef;\n    };\n    RestDefinitionFinderWalker.prototype.checkIsTarget = function (node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    };\n    RestDefinitionFinderWalker.prototype.walkOption = function (optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, optionProd, currRest, prevRest);\n        }\n    };\n    RestDefinitionFinderWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, atLeastOneProd, currRest, prevRest);\n        }\n    };\n    RestDefinitionFinderWalker.prototype.walkAtLeastOneSep = function (atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, atLeastOneSepProd, currRest, prevRest);\n        }\n    };\n    RestDefinitionFinderWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, manyProd, currRest, prevRest);\n        }\n    };\n    RestDefinitionFinderWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, manySepProd, currRest, prevRest);\n        }\n    };\n    return RestDefinitionFinderWalker;\n}(rest_1.RestWalker));\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nvar InsideDefinitionFinderVisitor = /** @class */ (function (_super) {\n    __extends(InsideDefinitionFinderVisitor, _super);\n    function InsideDefinitionFinderVisitor(targetOccurrence, targetProdType, targetRef) {\n        var _this = _super.call(this) || this;\n        _this.targetOccurrence = targetOccurrence;\n        _this.targetProdType = targetProdType;\n        _this.targetRef = targetRef;\n        _this.result = [];\n        return _this;\n    }\n    InsideDefinitionFinderVisitor.prototype.checkIsTarget = function (node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    };\n    InsideDefinitionFinderVisitor.prototype.visitOption = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitRepetition = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitRepetitionMandatory = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitRepetitionWithSeparator = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitAlternation = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    };\n    return InsideDefinitionFinderVisitor;\n}(gast_visitor_public_1.GAstVisitor));\nfunction initializeArrayOfArrays(size) {\n    var result = new Array(size);\n    for (var i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    var keys = [\"\"];\n    for (var i = 0; i < path.length; i++) {\n        var tokType = path[i];\n        var longerKeys = [];\n        for (var j = 0; j < keys.length; j++) {\n            var currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (var t = 0; t < tokType.categoryMatches.length; t++) {\n                var categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (var currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        var otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (var searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            var searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nfunction lookAheadSequenceFromAlternatives(altsDefs, k) {\n    var partialAlts = utils_1.map(altsDefs, function (currAlt) { return interpreter_1.possiblePathsFrom([currAlt], 1); });\n    var finalResult = initializeArrayOfArrays(partialAlts.length);\n    var altsHashes = utils_1.map(partialAlts, function (currAltPaths) {\n        var dict = {};\n        utils_1.forEach(currAltPaths, function (item) {\n            var keys = pathToHashKeys(item.partialPath);\n            utils_1.forEach(keys, function (currKey) {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    var newData = partialAlts;\n    // maxLookahead loop\n    for (var pathLength = 1; pathLength <= k; pathLength++) {\n        var currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        var _loop_1 = function (altIdx) {\n            var currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (var currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                var currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                var suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                var prefixKeys = pathToHashKeys(currPathPrefix);\n                var isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || utils_1.isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    var currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (var j = 0; j < prefixKeys.length; j++) {\n                            var currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    var newPartialPathsAndSuffixes = interpreter_1.possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    utils_1.forEach(newPartialPathsAndSuffixes, function (item) {\n                        var prefixKeys = pathToHashKeys(item.partialPath);\n                        utils_1.forEach(prefixKeys, function (key) {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        };\n        // alternatives loop\n        for (var altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            _loop_1(altIdx);\n        }\n    }\n    return finalResult;\n}\nexports.lookAheadSequenceFromAlternatives = lookAheadSequenceFromAlternatives;\nfunction getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    var visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexports.getLookaheadPathsForOr = getLookaheadPathsForOr;\nfunction getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    var insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    var insideDef = insideDefVisitor.result;\n    var afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    var afterDef = afterDefWalker.startWalking();\n    var insideFlat = new gast_public_1.Alternative({ definition: insideDef });\n    var afterFlat = new gast_public_1.Alternative({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexports.getLookaheadPathsForOptionalProd = getLookaheadPathsForOptionalProd;\nfunction containsPath(alternative, searchPath) {\n    compareOtherPath: for (var i = 0; i < alternative.length; i++) {\n        var otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (var j = 0; j < otherPath.length; j++) {\n            var searchTok = searchPath[j];\n            var otherTok = otherPath[j];\n            var matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexports.containsPath = containsPath;\nfunction isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        utils_1.every(prefix, function (tokType, idx) {\n            var otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexports.isStrictPrefixOfPath = isStrictPrefixOfPath;\nfunction areTokenCategoriesNotUsed(lookAheadPaths) {\n    return utils_1.every(lookAheadPaths, function (singleAltPaths) {\n        return utils_1.every(singleAltPaths, function (singlePath) {\n            return utils_1.every(singlePath, function (token) { return utils_1.isEmpty(token.categoryMatches); });\n        });\n    });\n}\nexports.areTokenCategoriesNotUsed = areTokenCategoriesNotUsed;\n//# sourceMappingURL=lookahead.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GastRefResolverVisitor = exports.resolveGrammar = void 0;\nvar parser_1 = require(\"../parser/parser\");\nvar utils_1 = require(\"../../utils/utils\");\nvar gast_visitor_public_1 = require(\"./gast/gast_visitor_public\");\nfunction resolveGrammar(topLevels, errMsgProvider) {\n    var refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexports.resolveGrammar = resolveGrammar;\nvar GastRefResolverVisitor = /** @class */ (function (_super) {\n    __extends(GastRefResolverVisitor, _super);\n    function GastRefResolverVisitor(nameToTopRule, errMsgProvider) {\n        var _this = _super.call(this) || this;\n        _this.nameToTopRule = nameToTopRule;\n        _this.errMsgProvider = errMsgProvider;\n        _this.errors = [];\n        return _this;\n    }\n    GastRefResolverVisitor.prototype.resolveRefs = function () {\n        var _this = this;\n        utils_1.forEach(utils_1.values(this.nameToTopRule), function (prod) {\n            _this.currTopLevel = prod;\n            prod.accept(_this);\n        });\n    };\n    GastRefResolverVisitor.prototype.visitNonTerminal = function (node) {\n        var ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            var msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: parser_1.ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    };\n    return GastRefResolverVisitor;\n}(gast_visitor_public_1.GAstVisitor));\nexports.GastRefResolverVisitor = GastRefResolverVisitor;\n//# sourceMappingURL=resolver.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RestWalker = void 0;\nvar utils_1 = require(\"../../utils/utils\");\nvar gast_public_1 = require(\"./gast/gast_public\");\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nvar RestWalker = /** @class */ (function () {\n    function RestWalker() {\n    }\n    RestWalker.prototype.walk = function (prod, prevRest) {\n        var _this = this;\n        if (prevRest === void 0) { prevRest = []; }\n        utils_1.forEach(prod.definition, function (subProd, index) {\n            var currRest = utils_1.drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof gast_public_1.NonTerminal) {\n                _this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Terminal) {\n                _this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Alternative) {\n                _this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Option) {\n                _this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.RepetitionMandatory) {\n                _this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n                _this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.RepetitionWithSeparator) {\n                _this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Repetition) {\n                _this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Alternation) {\n                _this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    };\n    RestWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) { };\n    RestWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) { };\n    RestWalker.prototype.walkFlat = function (flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        var fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    };\n    RestWalker.prototype.walkOption = function (optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        var fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    };\n    RestWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        var fullAtLeastOneRest = [\n            new gast_public_1.Option({ definition: atLeastOneProd.definition })\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    };\n    RestWalker.prototype.walkAtLeastOneSep = function (atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        var fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    };\n    RestWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        var fullManyRest = [\n            new gast_public_1.Option({ definition: manyProd.definition })\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    };\n    RestWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        var fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    };\n    RestWalker.prototype.walkOr = function (orProd, currRest, prevRest) {\n        var _this = this;\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        var fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        utils_1.forEach(orProd.definition, function (alt) {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            var prodWrapper = new gast_public_1.Alternative({ definition: [alt] });\n            _this.walk(prodWrapper, fullOrRest);\n        });\n    };\n    return RestWalker;\n}());\nexports.RestWalker = RestWalker;\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    var repSepRest = [\n        new gast_public_1.Option({\n            definition: [new gast_public_1.Terminal({ terminalType: repSepProd.separator })].concat(repSepProd.definition)\n        })\n    ];\n    var fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmbeddedActionsParser = exports.CstParser = exports.Parser = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.DEFAULT_RULE_CONFIG = exports.DEFAULT_PARSER_CONFIG = exports.END_OF_FILE = void 0;\nvar utils_1 = require(\"../../utils/utils\");\nvar follow_1 = require(\"../grammar/follow\");\nvar tokens_public_1 = require(\"../../scan/tokens_public\");\nvar errors_public_1 = require(\"../errors_public\");\nvar gast_resolver_public_1 = require(\"../grammar/gast/gast_resolver_public\");\nvar recoverable_1 = require(\"./traits/recoverable\");\nvar looksahead_1 = require(\"./traits/looksahead\");\nvar tree_builder_1 = require(\"./traits/tree_builder\");\nvar lexer_adapter_1 = require(\"./traits/lexer_adapter\");\nvar recognizer_api_1 = require(\"./traits/recognizer_api\");\nvar recognizer_engine_1 = require(\"./traits/recognizer_engine\");\nvar error_handler_1 = require(\"./traits/error_handler\");\nvar context_assist_1 = require(\"./traits/context_assist\");\nvar gast_recorder_1 = require(\"./traits/gast_recorder\");\nvar perf_tracer_1 = require(\"./traits/perf_tracer\");\nexports.END_OF_FILE = tokens_public_1.createTokenInstance(tokens_public_1.EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(exports.END_OF_FILE);\nexports.DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: errors_public_1.defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false\n});\nexports.DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: function () { return undefined; },\n    resyncEnabled: true\n});\nvar ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType = exports.ParserDefinitionErrorType || (exports.ParserDefinitionErrorType = {}));\nfunction EMPTY_ALT(value) {\n    if (value === void 0) { value = undefined; }\n    return function () {\n        return value;\n    };\n}\nexports.EMPTY_ALT = EMPTY_ALT;\nvar Parser = /** @class */ (function () {\n    function Parser(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        var that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (utils_1.has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = utils_1.has(config, \"skipValidations\")\n            ? config.skipValidations\n            : exports.DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    Parser.performSelfAnalysis = function (parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    };\n    Parser.prototype.performSelfAnalysis = function () {\n        var _this = this;\n        this.TRACE_INIT(\"performSelfAnalysis\", function () {\n            var defErrorsMsgs;\n            _this.selfAnalysisDone = true;\n            var className = _this.className;\n            _this.TRACE_INIT(\"toFastProps\", function () {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                utils_1.toFastProperties(_this);\n            });\n            _this.TRACE_INIT(\"Grammar Recording\", function () {\n                try {\n                    _this.enableRecording();\n                    // Building the GAST\n                    utils_1.forEach(_this.definedRulesNames, function (currRuleName) {\n                        var wrappedRule = _this[currRuleName];\n                        var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        var recordedRuleGast = undefined;\n                        _this.TRACE_INIT(currRuleName + \" Rule\", function () {\n                            recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        _this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    _this.disableRecording();\n                }\n            });\n            var resolverErrors = [];\n            _this.TRACE_INIT(\"Grammar Resolving\", function () {\n                resolverErrors = gast_resolver_public_1.resolveGrammar({\n                    rules: utils_1.values(_this.gastProductionsCache)\n                });\n                _this.definitionErrors.push.apply(_this.definitionErrors, resolverErrors); // mutability for the win?\n            });\n            _this.TRACE_INIT(\"Grammar Validations\", function () {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (utils_1.isEmpty(resolverErrors) && _this.skipValidations === false) {\n                    var validationErrors = gast_resolver_public_1.validateGrammar({\n                        rules: utils_1.values(_this.gastProductionsCache),\n                        maxLookahead: _this.maxLookahead,\n                        tokenTypes: utils_1.values(_this.tokensMap),\n                        errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider,\n                        grammarName: className\n                    });\n                    _this.definitionErrors.push.apply(_this.definitionErrors, validationErrors); // mutability for the win?\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (utils_1.isEmpty(_this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (_this.recoveryEnabled) {\n                    _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\n                        var allFollows = follow_1.computeAllProdsFollows(utils_1.values(_this.gastProductionsCache));\n                        _this.resyncFollows = allFollows;\n                    });\n                }\n                _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\n                    _this.preComputeLookaheadFunctions(utils_1.values(_this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !utils_1.isEmpty(_this.definitionErrors)) {\n                defErrorsMsgs = utils_1.map(_this.definitionErrors, function (defError) { return defError.message; });\n                throw new Error(\"Parser Definition Errors detected:\\n \" + defErrorsMsgs.join(\"\\n-------------------------------\\n\"));\n            }\n        });\n    };\n    // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n    // (normally during the parser's constructor).\n    // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n    // for example: duplicate rule names, referencing an unresolved subrule, ect...\n    // This flag should not be enabled during normal usage, it is used in special situations, for example when\n    // needing to display the parser definition errors in some GUI(online playground).\n    Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n    return Parser;\n}());\nexports.Parser = Parser;\nutils_1.applyMixins(Parser, [\n    recoverable_1.Recoverable,\n    looksahead_1.LooksAhead,\n    tree_builder_1.TreeBuilder,\n    lexer_adapter_1.LexerAdapter,\n    recognizer_engine_1.RecognizerEngine,\n    recognizer_api_1.RecognizerApi,\n    error_handler_1.ErrorHandler,\n    context_assist_1.ContentAssist,\n    gast_recorder_1.GastRecorder,\n    perf_tracer_1.PerformanceTracer\n]);\nvar CstParser = /** @class */ (function (_super) {\n    __extends(CstParser, _super);\n    function CstParser(tokenVocabulary, config) {\n        if (config === void 0) { config = exports.DEFAULT_PARSER_CONFIG; }\n        var _this = this;\n        var configClone = utils_1.cloneObj(config);\n        configClone.outputCst = true;\n        _this = _super.call(this, tokenVocabulary, configClone) || this;\n        return _this;\n    }\n    return CstParser;\n}(Parser));\nexports.CstParser = CstParser;\nvar EmbeddedActionsParser = /** @class */ (function (_super) {\n    __extends(EmbeddedActionsParser, _super);\n    function EmbeddedActionsParser(tokenVocabulary, config) {\n        if (config === void 0) { config = exports.DEFAULT_PARSER_CONFIG; }\n        var _this = this;\n        var configClone = utils_1.cloneObj(config);\n        configClone.outputCst = false;\n        _this = _super.call(this, tokenVocabulary, configClone) || this;\n        return _this;\n    }\n    return EmbeddedActionsParser;\n}(Parser));\nexports.EmbeddedActionsParser = EmbeddedActionsParser;\n//# sourceMappingURL=parser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContentAssist = void 0;\nvar interpreter_1 = require(\"../../grammar/interpreter\");\nvar utils_1 = require(\"../../../utils/utils\");\nvar ContentAssist = /** @class */ (function () {\n    function ContentAssist() {\n    }\n    ContentAssist.prototype.initContentAssist = function () { };\n    ContentAssist.prototype.computeContentAssist = function (startRuleName, precedingInput) {\n        var startRuleGast = this.gastProductionsCache[startRuleName];\n        if (utils_1.isUndefined(startRuleGast)) {\n            throw Error(\"Rule ->\" + startRuleName + \"<- does not exist in this grammar.\");\n        }\n        return interpreter_1.nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    };\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    ContentAssist.prototype.getNextPossibleTokenTypes = function (grammarPath) {\n        var topRuleName = utils_1.first(grammarPath.ruleStack);\n        var gastProductions = this.getGAstProductions();\n        var topProduction = gastProductions[topRuleName];\n        var nextPossibleTokenTypes = new interpreter_1.NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    };\n    return ContentAssist;\n}());\nexports.ContentAssist = ContentAssist;\n//# sourceMappingURL=context_assist.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorHandler = void 0;\nvar exceptions_public_1 = require(\"../../exceptions_public\");\nvar utils_1 = require(\"../../../utils/utils\");\nvar lookahead_1 = require(\"../../grammar/lookahead\");\nvar parser_1 = require(\"../parser\");\n/**\n * Trait responsible for runtime parsing errors.\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n    }\n    ErrorHandler.prototype.initErrorHandler = function (config) {\n        this._errors = [];\n        this.errorMessageProvider = utils_1.has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider\n            : parser_1.DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    };\n    ErrorHandler.prototype.SAVE_ERROR = function (error) {\n        if (exceptions_public_1.isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: utils_1.cloneArr(this.RULE_OCCURRENCE_STACK)\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    };\n    Object.defineProperty(ErrorHandler.prototype, \"errors\", {\n        get: function () {\n            return utils_1.cloneArr(this._errors);\n        },\n        set: function (newErrors) {\n            this._errors = newErrors;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // TODO: consider caching the error message computed information\n    ErrorHandler.prototype.raiseEarlyExitException = function (occurrence, prodType, userDefinedErrMsg) {\n        var ruleName = this.getCurrRuleFullName();\n        var ruleGrammar = this.getGAstProductions()[ruleName];\n        var lookAheadPathsPerAlternative = lookahead_1.getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        var insideProdPaths = lookAheadPathsPerAlternative[0];\n        var actualTokens = [];\n        for (var i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        var msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName\n        });\n        throw this.SAVE_ERROR(new exceptions_public_1.EarlyExitException(msg, this.LA(1), this.LA(0)));\n    };\n    // TODO: consider caching the error message computed information\n    ErrorHandler.prototype.raiseNoAltException = function (occurrence, errMsgTypes) {\n        var ruleName = this.getCurrRuleFullName();\n        var ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        var lookAheadPathsPerAlternative = lookahead_1.getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        var actualTokens = [];\n        for (var i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        var previousToken = this.LA(0);\n        var errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName()\n        });\n        throw this.SAVE_ERROR(new exceptions_public_1.NoViableAltException(errMsg, this.LA(1), previousToken));\n    };\n    return ErrorHandler;\n}());\nexports.ErrorHandler = ErrorHandler;\n//# sourceMappingURL=error_handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GastRecorder = void 0;\nvar utils_1 = require(\"../../../utils/utils\");\nvar gast_public_1 = require(\"../../grammar/gast/gast_public\");\nvar lexer_public_1 = require(\"../../../scan/lexer_public\");\nvar tokens_1 = require(\"../../../scan/tokens\");\nvar tokens_public_1 = require(\"../../../scan/tokens_public\");\nvar parser_1 = require(\"../parser\");\nvar keys_1 = require(\"../../grammar/keys\");\nvar RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\"\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nvar HANDLE_SEPARATOR = true;\nvar MAX_METHOD_IDX = Math.pow(2, keys_1.BITS_FOR_OCCURRENCE_IDX) - 1;\nvar RFT = tokens_public_1.createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: lexer_public_1.Lexer.NA });\ntokens_1.augmentTokenTypes([RFT]);\nvar RECORDING_PHASE_TOKEN = tokens_public_1.createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://sap.github.io/chevrotain/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nvar RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://sap.github.io/chevrotain/docs/guide/internals.html#grammar-recording for details\",\n    children: {}\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nvar GastRecorder = /** @class */ (function () {\n    function GastRecorder() {\n    }\n    GastRecorder.prototype.initGastRecorder = function (config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    };\n    GastRecorder.prototype.enableRecording = function () {\n        var _this = this;\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", function () {\n            var _loop_1 = function (i) {\n                var idx = i > 0 ? i : \"\";\n                _this[\"CONSUME\" + idx] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                _this[\"SUBRULE\" + idx] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                _this[\"OPTION\" + idx] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                _this[\"OR\" + idx] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                _this[\"MANY\" + idx] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                _this[\"MANY_SEP\" + idx] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                _this[\"AT_LEAST_ONE\" + idx] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                _this[\"AT_LEAST_ONE_SEP\" + idx] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            };\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (var i = 0; i < 10; i++) {\n                _loop_1(i);\n            }\n            // DSL methods with the idx(suffix) as an argument\n            _this[\"consume\"] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            _this[\"subrule\"] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            _this[\"option\"] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            _this[\"or\"] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            _this[\"many\"] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            _this[\"atLeastOne\"] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            _this.ACTION = _this.ACTION_RECORD;\n            _this.BACKTRACK = _this.BACKTRACK_RECORD;\n            _this.LA = _this.LA_RECORD;\n        });\n    };\n    GastRecorder.prototype.disableRecording = function () {\n        var _this = this;\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", function () {\n            for (var i = 0; i < 10; i++) {\n                var idx = i > 0 ? i : \"\";\n                delete _this[\"CONSUME\" + idx];\n                delete _this[\"SUBRULE\" + idx];\n                delete _this[\"OPTION\" + idx];\n                delete _this[\"OR\" + idx];\n                delete _this[\"MANY\" + idx];\n                delete _this[\"MANY_SEP\" + idx];\n                delete _this[\"AT_LEAST_ONE\" + idx];\n                delete _this[\"AT_LEAST_ONE_SEP\" + idx];\n            }\n            delete _this[\"consume\"];\n            delete _this[\"subrule\"];\n            delete _this[\"option\"];\n            delete _this[\"or\"];\n            delete _this[\"many\"];\n            delete _this[\"atLeastOne\"];\n            delete _this.ACTION;\n            delete _this.BACKTRACK;\n            delete _this.LA;\n        });\n    };\n    // TODO: is there any way to use this method to check no\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    GastRecorder.prototype.ACTION_RECORD = function (impl) {\n        // NO-OP during recording\n        return;\n    };\n    // Executing backtracking logic will break our recording logic assumptions\n    GastRecorder.prototype.BACKTRACK_RECORD = function (grammarRule, args) {\n        return function () { return true; };\n    };\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    GastRecorder.prototype.LA_RECORD = function (howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return parser_1.END_OF_FILE;\n    };\n    GastRecorder.prototype.topLevelRuleRecord = function (name, def) {\n        try {\n            var newTopLevelRule = new gast_public_1.Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://sap.github.io/chevrotain/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    };\n    // Implementation of parsing DSL\n    GastRecorder.prototype.optionInternalRecord = function (actionORMethodDef, occurrence) {\n        return recordProd.call(this, gast_public_1.Option, actionORMethodDef, occurrence);\n    };\n    GastRecorder.prototype.atLeastOneInternalRecord = function (occurrence, actionORMethodDef) {\n        recordProd.call(this, gast_public_1.RepetitionMandatory, actionORMethodDef, occurrence);\n    };\n    GastRecorder.prototype.atLeastOneSepFirstInternalRecord = function (occurrence, options) {\n        recordProd.call(this, gast_public_1.RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    };\n    GastRecorder.prototype.manyInternalRecord = function (occurrence, actionORMethodDef) {\n        recordProd.call(this, gast_public_1.Repetition, actionORMethodDef, occurrence);\n    };\n    GastRecorder.prototype.manySepFirstInternalRecord = function (occurrence, options) {\n        recordProd.call(this, gast_public_1.RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    };\n    GastRecorder.prototype.orInternalRecord = function (altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    };\n    GastRecorder.prototype.subruleInternalRecord = function (ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || utils_1.has(ruleToCall, \"ruleName\") === false) {\n            var error = new Error(\"<SUBRULE\" + getIdxSuffix(occurrence) + \"> argument is invalid\" +\n                (\" expecting a Parser method reference but got: <\" + JSON.stringify(ruleToCall) + \">\") +\n                (\"\\n inside top level rule: <\" + this.recordingProdStack[0].name + \">\"));\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        var prevProd = utils_1.peek(this.recordingProdStack);\n        var ruleName = ruleToCall[\"ruleName\"];\n        var newNoneTerminal = new gast_public_1.NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst ? RECORDING_PHASE_CSTNODE : RECORDING_NULL_OBJECT;\n    };\n    GastRecorder.prototype.consumeInternalRecord = function (tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!tokens_1.hasShortKeyProperty(tokType)) {\n            var error = new Error(\"<CONSUME\" + getIdxSuffix(occurrence) + \"> argument is invalid\" +\n                (\" expecting a TokenType reference but got: <\" + JSON.stringify(tokType) + \">\") +\n                (\"\\n inside top level rule: <\" + this.recordingProdStack[0].name + \">\"));\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        var prevProd = utils_1.peek(this.recordingProdStack);\n        var newNoneTerminal = new gast_public_1.Terminal({\n            idx: occurrence,\n            terminalType: tokType\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    };\n    return GastRecorder;\n}());\nexports.GastRecorder = GastRecorder;\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep) {\n    if (handleSep === void 0) { handleSep = false; }\n    assertMethodIdxIsValid(occurrence);\n    var prevProd = utils_1.peek(this.recordingProdStack);\n    var grammarAction = utils_1.isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    var newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (utils_1.has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    var _this = this;\n    assertMethodIdxIsValid(occurrence);\n    var prevProd = utils_1.peek(this.recordingProdStack);\n    // Only an array of alternatives\n    var hasOptions = utils_1.isArray(mainProdArg) === false;\n    var alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    var newOrProd = new gast_public_1.Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true\n    });\n    if (utils_1.has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    var hasPredicates = utils_1.some(alts, function (currAlt) { return utils_1.isFunction(currAlt.GATE); });\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    utils_1.forEach(alts, function (currAlt) {\n        var currAltFlat = new gast_public_1.Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (utils_1.has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES;\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (utils_1.has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        _this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(_this);\n        _this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : \"\" + idx;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        var error = new Error(\n        // The stack trace will contain all the needed details\n        \"Invalid DSL Method idx value: <\" + idx + \">\\n\\t\" +\n            (\"Idx value must be a none negative value smaller than \" + (MAX_METHOD_IDX + 1)));\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LexerAdapter = void 0;\nvar parser_1 = require(\"../parser\");\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nvar LexerAdapter = /** @class */ (function () {\n    function LexerAdapter() {\n    }\n    LexerAdapter.prototype.initLexerAdapter = function () {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    };\n    Object.defineProperty(LexerAdapter.prototype, \"input\", {\n        get: function () {\n            return this.tokVector;\n        },\n        set: function (newInput) {\n            // @ts-ignore - `this parameter` not supported in setters/getters\n            //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n            if (this.selfAnalysisDone !== true) {\n                throw Error(\"Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.\");\n            }\n            // @ts-ignore - `this parameter` not supported in setters/getters\n            //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n            this.reset();\n            this.tokVector = newInput;\n            this.tokVectorLength = newInput.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // skips a token and returns the next token\n    LexerAdapter.prototype.SKIP_TOKEN = function () {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return parser_1.END_OF_FILE;\n        }\n    };\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LexerAdapter.prototype.LA = function (howMuch) {\n        var soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return parser_1.END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    };\n    LexerAdapter.prototype.consumeToken = function () {\n        this.currIdx++;\n    };\n    LexerAdapter.prototype.exportLexerState = function () {\n        return this.currIdx;\n    };\n    LexerAdapter.prototype.importLexerState = function (newState) {\n        this.currIdx = newState;\n    };\n    LexerAdapter.prototype.resetLexerState = function () {\n        this.currIdx = -1;\n    };\n    LexerAdapter.prototype.moveToTerminatedState = function () {\n        this.currIdx = this.tokVector.length - 1;\n    };\n    LexerAdapter.prototype.getLexerPosition = function () {\n        return this.exportLexerState();\n    };\n    return LexerAdapter;\n}());\nexports.LexerAdapter = LexerAdapter;\n//# sourceMappingURL=lexer_adapter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LooksAhead = void 0;\nvar lookahead_1 = require(\"../../grammar/lookahead\");\nvar utils_1 = require(\"../../../utils/utils\");\nvar parser_1 = require(\"../parser\");\nvar keys_1 = require(\"../../grammar/keys\");\nvar gast_1 = require(\"../../grammar/gast/gast\");\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nvar LooksAhead = /** @class */ (function () {\n    function LooksAhead() {\n    }\n    LooksAhead.prototype.initLooksAhead = function (config) {\n        this.dynamicTokensEnabled = utils_1.has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled\n            : parser_1.DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = utils_1.has(config, \"maxLookahead\")\n            ? config.maxLookahead\n            : parser_1.DEFAULT_PARSER_CONFIG.maxLookahead;\n        /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n        this.lookAheadFuncsCache = utils_1.isES2015MapSupported() ? new Map() : [];\n        // Performance optimization on newer engines that support ES6 Map\n        // For larger Maps this is slightly faster than using a plain object (array in our case).\n        /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n        if (utils_1.isES2015MapSupported()) {\n            this.getLaFuncFromCache = this.getLaFuncFromMap;\n            this.setLaFuncCache = this.setLaFuncCacheUsingMap;\n        }\n        else {\n            this.getLaFuncFromCache = this.getLaFuncFromObj;\n            this.setLaFuncCache = this.setLaFuncUsingObj;\n        }\n    };\n    LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {\n        var _this = this;\n        utils_1.forEach(rules, function (currRule) {\n            _this.TRACE_INIT(currRule.name + \" Rule Lookahead\", function () {\n                var _a = gast_1.collectMethods(currRule), alternation = _a.alternation, repetition = _a.repetition, option = _a.option, repetitionMandatory = _a.repetitionMandatory, repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator, repetitionWithSeparator = _a.repetitionWithSeparator;\n                utils_1.forEach(alternation, function (currProd) {\n                    var prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    _this.TRACE_INIT(\"\" + gast_1.getProductionDslName(currProd) + prodIdx, function () {\n                        var laFunc = lookahead_1.buildLookaheadFuncForOr(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);\n                        var key = keys_1.getKeyForAutomaticLookahead(_this.fullRuleNameToShort[currRule.name], keys_1.OR_IDX, currProd.idx);\n                        _this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                utils_1.forEach(repetition, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, keys_1.MANY_IDX, lookahead_1.PROD_TYPE.REPETITION, currProd.maxLookahead, gast_1.getProductionDslName(currProd));\n                });\n                utils_1.forEach(option, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, keys_1.OPTION_IDX, lookahead_1.PROD_TYPE.OPTION, currProd.maxLookahead, gast_1.getProductionDslName(currProd));\n                });\n                utils_1.forEach(repetitionMandatory, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, keys_1.AT_LEAST_ONE_IDX, lookahead_1.PROD_TYPE.REPETITION_MANDATORY, currProd.maxLookahead, gast_1.getProductionDslName(currProd));\n                });\n                utils_1.forEach(repetitionMandatoryWithSeparator, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, keys_1.AT_LEAST_ONE_SEP_IDX, lookahead_1.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, gast_1.getProductionDslName(currProd));\n                });\n                utils_1.forEach(repetitionWithSeparator, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, keys_1.MANY_SEP_IDX, lookahead_1.PROD_TYPE.REPETITION_WITH_SEPARATOR, currProd.maxLookahead, gast_1.getProductionDslName(currProd));\n                });\n            });\n        });\n    };\n    LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        var _this = this;\n        this.TRACE_INIT(\"\" + dslMethodName + (prodOccurrence === 0 ? \"\" : prodOccurrence), function () {\n            var laFunc = lookahead_1.buildLookaheadFuncForOptionalProd(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);\n            var key = keys_1.getKeyForAutomaticLookahead(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            _this.setLaFuncCache(key, laFunc);\n        });\n    };\n    LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n        return lookahead_1.buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);\n    };\n    LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n        return lookahead_1.buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n    };\n    // this actually returns a number, but it is always used as a string (object prop key)\n    LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n        var currRuleShortName = this.getLastExplicitRuleShortName();\n        return keys_1.getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.getLaFuncFromCache = function (key) {\n        return undefined;\n    };\n    LooksAhead.prototype.getLaFuncFromMap = function (key) {\n        return this.lookAheadFuncsCache.get(key);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.getLaFuncFromObj = function (key) {\n        return this.lookAheadFuncsCache[key];\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.setLaFuncCache = function (key, value) { };\n    LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {\n        this.lookAheadFuncsCache[key] = value;\n    };\n    return LooksAhead;\n}());\nexports.LooksAhead = LooksAhead;\n//# sourceMappingURL=looksahead.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PerformanceTracer = void 0;\nvar utils_1 = require(\"../../../utils/utils\");\nvar parser_1 = require(\"../parser\");\n/**\n * Trait responsible for runtime parsing errors.\n */\nvar PerformanceTracer = /** @class */ (function () {\n    function PerformanceTracer() {\n    }\n    PerformanceTracer.prototype.initPerformanceTracer = function (config) {\n        if (utils_1.has(config, \"traceInitPerf\")) {\n            var userTraceInitPerf = config.traceInitPerf;\n            var traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf;\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = parser_1.DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    };\n    PerformanceTracer.prototype.TRACE_INIT = function (phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            var indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(indent + \"--> <\" + phaseDesc + \">\");\n            }\n            var _a = utils_1.timer(phaseImpl), time = _a.time, value = _a.value;\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            var traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(indent + \"<-- <\" + phaseDesc + \"> time: \" + time + \"ms\");\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    };\n    return PerformanceTracer;\n}());\nexports.PerformanceTracer = PerformanceTracer;\n//# sourceMappingURL=perf_tracer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognizerApi = void 0;\nvar utils_1 = require(\"../../../utils/utils\");\nvar exceptions_public_1 = require(\"../../exceptions_public\");\nvar parser_1 = require(\"../parser\");\nvar errors_public_1 = require(\"../../errors_public\");\nvar checks_1 = require(\"../../grammar/checks\");\nvar gast_public_1 = require(\"../../grammar/gast/gast_public\");\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nvar RecognizerApi = /** @class */ (function () {\n    function RecognizerApi() {\n    }\n    RecognizerApi.prototype.ACTION = function (impl) {\n        return impl.call(this);\n    };\n    RecognizerApi.prototype.consume = function (idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    };\n    RecognizerApi.prototype.subrule = function (idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    };\n    RecognizerApi.prototype.option = function (idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    };\n    RecognizerApi.prototype.or = function (idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    };\n    RecognizerApi.prototype.many = function (idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    };\n    RecognizerApi.prototype.atLeastOne = function (idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    };\n    RecognizerApi.prototype.CONSUME = function (tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    };\n    RecognizerApi.prototype.CONSUME1 = function (tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    };\n    RecognizerApi.prototype.CONSUME2 = function (tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    };\n    RecognizerApi.prototype.CONSUME3 = function (tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    };\n    RecognizerApi.prototype.CONSUME4 = function (tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    };\n    RecognizerApi.prototype.CONSUME5 = function (tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    };\n    RecognizerApi.prototype.CONSUME6 = function (tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    };\n    RecognizerApi.prototype.CONSUME7 = function (tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    };\n    RecognizerApi.prototype.CONSUME8 = function (tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    };\n    RecognizerApi.prototype.CONSUME9 = function (tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    };\n    RecognizerApi.prototype.SUBRULE = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    };\n    RecognizerApi.prototype.SUBRULE1 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    };\n    RecognizerApi.prototype.SUBRULE2 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    };\n    RecognizerApi.prototype.SUBRULE3 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    };\n    RecognizerApi.prototype.SUBRULE4 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    };\n    RecognizerApi.prototype.SUBRULE5 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    };\n    RecognizerApi.prototype.SUBRULE6 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    };\n    RecognizerApi.prototype.SUBRULE7 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    };\n    RecognizerApi.prototype.SUBRULE8 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    };\n    RecognizerApi.prototype.SUBRULE9 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    };\n    RecognizerApi.prototype.OPTION = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    };\n    RecognizerApi.prototype.OPTION1 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    };\n    RecognizerApi.prototype.OPTION2 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    };\n    RecognizerApi.prototype.OPTION3 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    };\n    RecognizerApi.prototype.OPTION4 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    };\n    RecognizerApi.prototype.OPTION5 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    };\n    RecognizerApi.prototype.OPTION6 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    };\n    RecognizerApi.prototype.OPTION7 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    };\n    RecognizerApi.prototype.OPTION8 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    };\n    RecognizerApi.prototype.OPTION9 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    };\n    RecognizerApi.prototype.OR = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    };\n    RecognizerApi.prototype.OR1 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    };\n    RecognizerApi.prototype.OR2 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    };\n    RecognizerApi.prototype.OR3 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    };\n    RecognizerApi.prototype.OR4 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    };\n    RecognizerApi.prototype.OR5 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    };\n    RecognizerApi.prototype.OR6 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    };\n    RecognizerApi.prototype.OR7 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    };\n    RecognizerApi.prototype.OR8 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    };\n    RecognizerApi.prototype.OR9 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    };\n    RecognizerApi.prototype.MANY = function (actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY1 = function (actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY2 = function (actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY3 = function (actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY4 = function (actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY5 = function (actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY6 = function (actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY7 = function (actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY8 = function (actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY9 = function (actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY_SEP = function (options) {\n        this.manySepFirstInternal(0, options);\n    };\n    RecognizerApi.prototype.MANY_SEP1 = function (options) {\n        this.manySepFirstInternal(1, options);\n    };\n    RecognizerApi.prototype.MANY_SEP2 = function (options) {\n        this.manySepFirstInternal(2, options);\n    };\n    RecognizerApi.prototype.MANY_SEP3 = function (options) {\n        this.manySepFirstInternal(3, options);\n    };\n    RecognizerApi.prototype.MANY_SEP4 = function (options) {\n        this.manySepFirstInternal(4, options);\n    };\n    RecognizerApi.prototype.MANY_SEP5 = function (options) {\n        this.manySepFirstInternal(5, options);\n    };\n    RecognizerApi.prototype.MANY_SEP6 = function (options) {\n        this.manySepFirstInternal(6, options);\n    };\n    RecognizerApi.prototype.MANY_SEP7 = function (options) {\n        this.manySepFirstInternal(7, options);\n    };\n    RecognizerApi.prototype.MANY_SEP8 = function (options) {\n        this.manySepFirstInternal(8, options);\n    };\n    RecognizerApi.prototype.MANY_SEP9 = function (options) {\n        this.manySepFirstInternal(9, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE = function (actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE1 = function (actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE2 = function (actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE3 = function (actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE4 = function (actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE5 = function (actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE6 = function (actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE7 = function (actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE8 = function (actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE9 = function (actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP = function (options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP1 = function (options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP2 = function (options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP3 = function (options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP4 = function (options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP5 = function (options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP6 = function (options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP7 = function (options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP8 = function (options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP9 = function (options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    };\n    RecognizerApi.prototype.RULE = function (name, implementation, config) {\n        if (config === void 0) { config = parser_1.DEFAULT_RULE_CONFIG; }\n        if (utils_1.contains(this.definedRulesNames, name)) {\n            var errMsg = errors_public_1.defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className\n            });\n            var error = {\n                message: errMsg,\n                type: parser_1.ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        var ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    };\n    RecognizerApi.prototype.OVERRIDE_RULE = function (name, impl, config) {\n        if (config === void 0) { config = parser_1.DEFAULT_RULE_CONFIG; }\n        var ruleErrors = [];\n        ruleErrors = ruleErrors.concat(checks_1.validateRuleIsOverridden(name, this.definedRulesNames, this.className));\n        this.definitionErrors.push.apply(this.definitionErrors, ruleErrors); // mutability for the win\n        var ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    };\n    RecognizerApi.prototype.BACKTRACK = function (grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            var orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (exceptions_public_1.isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    };\n    // GAST export APIs\n    RecognizerApi.prototype.getGAstProductions = function () {\n        return this.gastProductionsCache;\n    };\n    RecognizerApi.prototype.getSerializedGastProductions = function () {\n        return gast_public_1.serializeGrammar(utils_1.values(this.gastProductionsCache));\n    };\n    return RecognizerApi;\n}());\nexports.RecognizerApi = RecognizerApi;\n//# sourceMappingURL=recognizer_api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognizerEngine = void 0;\nvar utils_1 = require(\"../../../utils/utils\");\nvar keys_1 = require(\"../../grammar/keys\");\nvar exceptions_public_1 = require(\"../../exceptions_public\");\nvar lookahead_1 = require(\"../../grammar/lookahead\");\nvar interpreter_1 = require(\"../../grammar/interpreter\");\nvar parser_1 = require(\"../parser\");\nvar recoverable_1 = require(\"./recoverable\");\nvar tokens_public_1 = require(\"../../../scan/tokens_public\");\nvar tokens_1 = require(\"../../../scan/tokens\");\nvar lang_extensions_1 = require(\"../../../lang/lang_extensions\");\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nvar RecognizerEngine = /** @class */ (function () {\n    function RecognizerEngine() {\n    }\n    RecognizerEngine.prototype.initRecognizerEngine = function (tokenVocabulary, config) {\n        this.className = lang_extensions_1.classNameFromInstance(this);\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokens_1.tokenStructuredMatcherNoCategories;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (utils_1.has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://sap.github.io/chevrotain/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (utils_1.isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (utils_1.isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://sap.github.io/chevrotain/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (utils_1.isArray(tokenVocabulary)) {\n            this.tokensMap = utils_1.reduce(tokenVocabulary, function (acc, tokType) {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (utils_1.has(tokenVocabulary, \"modes\") &&\n            utils_1.every(utils_1.flatten(utils_1.values(tokenVocabulary.modes)), tokens_1.isTokenType)) {\n            var allTokenTypes = utils_1.flatten(utils_1.values(tokenVocabulary.modes));\n            var uniqueTokens = utils_1.uniq(allTokenTypes);\n            this.tokensMap = utils_1.reduce(uniqueTokens, function (acc, tokType) {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (utils_1.isObject(tokenVocabulary)) {\n            this.tokensMap = utils_1.cloneObj(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        /* tslint:disable */\n        this.tokensMap[\"EOF\"] = tokens_public_1.EOF;\n        // TODO: This check may not be accurate for multi mode lexers\n        var noTokenCategoriesUsed = utils_1.every(utils_1.values(tokenVocabulary), function (tokenConstructor) { return utils_1.isEmpty(tokenConstructor.categoryMatches); });\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokens_1.tokenStructuredMatcherNoCategories\n            : tokens_1.tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        tokens_1.augmentTokenTypes(utils_1.values(this.tokensMap));\n    };\n    RecognizerEngine.prototype.defineRule = function (ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(\"Grammar rule <\" + ruleName + \"> may not be defined after the 'performSelfAnalysis' method has been called'\\n\" +\n                \"Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.\");\n        }\n        var resyncEnabled = utils_1.has(config, \"resyncEnabled\")\n            ? config.resyncEnabled\n            : parser_1.DEFAULT_RULE_CONFIG.resyncEnabled;\n        var recoveryValueFunc = utils_1.has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc\n            : parser_1.DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        /* tslint:disable */\n        var shortName = this.ruleShortNameIdx << (keys_1.BITS_FOR_METHOD_TYPE + keys_1.BITS_FOR_OCCURRENCE_IDX);\n        /* tslint:enable */\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        function invokeRuleWithTry(args) {\n            try {\n                if (this.outputCst === true) {\n                    impl.apply(this, args);\n                    var cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                else {\n                    return impl.apply(this, args);\n                }\n            }\n            catch (e) {\n                return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n            }\n            finally {\n                this.ruleFinallyStateUpdate();\n            }\n        }\n        var wrappedGrammarRule;\n        wrappedGrammarRule = function (idxInCallingRule, args) {\n            if (idxInCallingRule === void 0) { idxInCallingRule = 0; }\n            this.ruleInvocationStateUpdate(shortName, ruleName, idxInCallingRule);\n            return invokeRuleWithTry.call(this, args);\n        };\n        var ruleNamePropName = \"ruleName\";\n        wrappedGrammarRule[ruleNamePropName] = ruleName;\n        wrappedGrammarRule[\"originalGrammarAction\"] = impl;\n        return wrappedGrammarRule;\n    };\n    RecognizerEngine.prototype.invokeRuleCatch = function (e, resyncEnabledConfig, recoveryValueFunc) {\n        var isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        var reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (exceptions_public_1.isRecognitionException(e)) {\n            var recogError = e;\n            if (reSyncEnabled) {\n                var reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc();\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc();\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    };\n    // Implementation of parsing DSL\n    RecognizerEngine.prototype.optionInternal = function (actionORMethodDef, occurrence) {\n        var key = this.getKeyForAutomaticLookahead(keys_1.OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    };\n    RecognizerEngine.prototype.optionInternalLogic = function (actionORMethodDef, occurrence, key) {\n        var _this = this;\n        var lookAheadFunc = this.getLaFuncFromCache(key);\n        var action;\n        var predicate;\n        if (actionORMethodDef.DEF !== undefined) {\n            action = actionORMethodDef.DEF;\n            predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                var orgLookaheadFunction_1 = lookAheadFunc;\n                lookAheadFunc = function () {\n                    return predicate.call(_this) && orgLookaheadFunction_1.call(_this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    };\n    RecognizerEngine.prototype.atLeastOneInternal = function (prodOccurrence, actionORMethodDef) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    };\n    RecognizerEngine.prototype.atLeastOneInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n        var _this = this;\n        var lookAheadFunc = this.getLaFuncFromCache(key);\n        var action;\n        var predicate;\n        if (actionORMethodDef.DEF !== undefined) {\n            action = actionORMethodDef.DEF;\n            predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                var orgLookaheadFunction_2 = lookAheadFunc;\n                lookAheadFunc = function () {\n                    return predicate.call(_this) && orgLookaheadFunction_2.call(_this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            var notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, lookahead_1.PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, keys_1.AT_LEAST_ONE_IDX, prodOccurrence, interpreter_1.NextTerminalAfterAtLeastOneWalker);\n    };\n    RecognizerEngine.prototype.atLeastOneSepFirstInternal = function (prodOccurrence, options) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    };\n    RecognizerEngine.prototype.atLeastOneSepFirstInternalLogic = function (prodOccurrence, options, key) {\n        var _this = this;\n        var action = options.DEF;\n        var separator = options.SEP;\n        var firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            ;\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            var separatorLookAheadFunc = function () {\n                return _this.tokenMatcher(_this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                interpreter_1.NextTerminalAfterAtLeastOneSepWalker\n            ], separatorLookAheadFunc, keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence, interpreter_1.NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, lookahead_1.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    };\n    RecognizerEngine.prototype.manyInternal = function (prodOccurrence, actionORMethodDef) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    };\n    RecognizerEngine.prototype.manyInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n        var _this = this;\n        var lookaheadFunction = this.getLaFuncFromCache(key);\n        var action;\n        var predicate;\n        if (actionORMethodDef.DEF !== undefined) {\n            action = actionORMethodDef.DEF;\n            predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                var orgLookaheadFunction_3 = lookaheadFunction;\n                lookaheadFunction = function () {\n                    return predicate.call(_this) && orgLookaheadFunction_3.call(_this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        var notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, keys_1.MANY_IDX, prodOccurrence, interpreter_1.NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    };\n    RecognizerEngine.prototype.manySepFirstInternal = function (prodOccurrence, options) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    };\n    RecognizerEngine.prototype.manySepFirstInternalLogic = function (prodOccurrence, options, key) {\n        var _this = this;\n        var action = options.DEF;\n        var separator = options.SEP;\n        var firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            var separatorLookAheadFunc = function () {\n                return _this.tokenMatcher(_this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                interpreter_1.NextTerminalAfterManySepWalker\n            ], separatorLookAheadFunc, keys_1.MANY_SEP_IDX, prodOccurrence, interpreter_1.NextTerminalAfterManySepWalker);\n        }\n    };\n    RecognizerEngine.prototype.repetitionSepSecondInternal = function (prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker\n        ], separatorLookAheadFunc, keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    };\n    RecognizerEngine.prototype.doSingleRepetition = function (action) {\n        var beforeIteration = this.getLexerPosition();\n        action.call(this);\n        var afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    };\n    RecognizerEngine.prototype.orInternal = function (altsOrOpts, occurrence) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.OR_IDX, occurrence);\n        var alts = utils_1.isArray(altsOrOpts)\n            ? altsOrOpts\n            : altsOrOpts.DEF;\n        var laFunc = this.getLaFuncFromCache(laKey);\n        var altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            var chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    };\n    RecognizerEngine.prototype.ruleFinallyStateUpdate = function () {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            var firstRedundantTok = this.LA(1);\n            var errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName()\n            });\n            this.SAVE_ERROR(new exceptions_public_1.NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    };\n    RecognizerEngine.prototype.subruleInternal = function (ruleToCall, idx, options) {\n        var ruleResult;\n        try {\n            var args = options !== undefined ? options.ARGS : undefined;\n            ruleResult = ruleToCall.call(this, idx, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    };\n    RecognizerEngine.prototype.subruleInternalError = function (e, options, ruleName) {\n        if (exceptions_public_1.isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    };\n    RecognizerEngine.prototype.consumeInternal = function (tokType, idx, options) {\n        var consumedToken;\n        try {\n            var nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    };\n    RecognizerEngine.prototype.consumeInternalError = function (tokType, nextToken, options) {\n        var msg;\n        var previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName()\n            });\n        }\n        throw this.SAVE_ERROR(new exceptions_public_1.MismatchedTokenException(msg, nextToken, previousToken));\n    };\n    RecognizerEngine.prototype.consumeInternalRecovery = function (tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            var follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === recoverable_1.IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    };\n    RecognizerEngine.prototype.saveRecogState = function () {\n        // errors is a getter which will clone the errors array\n        var savedErrors = this.errors;\n        var savedRuleStack = utils_1.cloneArr(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK\n        };\n    };\n    RecognizerEngine.prototype.reloadRecogState = function (newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    };\n    RecognizerEngine.prototype.ruleInvocationStateUpdate = function (shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName, shortName);\n    };\n    RecognizerEngine.prototype.isBackTracking = function () {\n        return this.isBackTrackingStack.length !== 0;\n    };\n    RecognizerEngine.prototype.getCurrRuleFullName = function () {\n        var shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    };\n    RecognizerEngine.prototype.shortRuleNameToFullName = function (shortName) {\n        return this.shortRuleNameToFull[shortName];\n    };\n    RecognizerEngine.prototype.isAtEndOfInput = function () {\n        return this.tokenMatcher(this.LA(1), tokens_public_1.EOF);\n    };\n    RecognizerEngine.prototype.reset = function () {\n        this.resetLexerState();\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    };\n    return RecognizerEngine;\n}());\nexports.RecognizerEngine = RecognizerEngine;\n//# sourceMappingURL=recognizer_engine.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.attemptInRepetitionRecovery = exports.Recoverable = exports.InRuleRecoveryException = exports.IN_RULE_RECOVERY_EXCEPTION = exports.EOF_FOLLOW_KEY = void 0;\nvar tokens_public_1 = require(\"../../../scan/tokens_public\");\nvar utils_1 = require(\"../../../utils/utils\");\nvar exceptions_public_1 = require(\"../../exceptions_public\");\nvar constants_1 = require(\"../../constants\");\nvar parser_1 = require(\"../parser\");\nexports.EOF_FOLLOW_KEY = {};\nexports.IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nfunction InRuleRecoveryException(message) {\n    this.name = exports.IN_RULE_RECOVERY_EXCEPTION;\n    this.message = message;\n}\nexports.InRuleRecoveryException = InRuleRecoveryException;\nInRuleRecoveryException.prototype = Error.prototype;\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nvar Recoverable = /** @class */ (function () {\n    function Recoverable() {\n    }\n    Recoverable.prototype.initRecoverable = function (config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = utils_1.has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled\n            : parser_1.DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    };\n    Recoverable.prototype.getTokenToInsert = function (tokType) {\n        var tokToInsert = tokens_public_1.createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    };\n    Recoverable.prototype.canTokenTypeBeInsertedInRecovery = function (tokType) {\n        return true;\n    };\n    Recoverable.prototype.tryInRepetitionRecovery = function (grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        var _this = this;\n        // TODO: can the resyncTokenType be cached?\n        var reSyncTokType = this.findReSyncTokenType();\n        var savedLexerState = this.exportLexerState();\n        var resyncedTokens = [];\n        var passedResyncPoint = false;\n        var nextTokenWithoutResync = this.LA(1);\n        var currToken = this.LA(1);\n        var generateErrorMessage = function () {\n            var previousToken = _this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            var msg = _this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: _this.getCurrRuleFullName()\n            });\n            var error = new exceptions_public_1.MismatchedTokenException(msg, nextTokenWithoutResync, _this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = utils_1.dropRight(resyncedTokens);\n            _this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    };\n    Recoverable.prototype.shouldInRepetitionRecoveryBeTried = function (expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // arguments to try and perform resync into the next iteration of the many are missing\n        if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    };\n    // Error Recovery functionality\n    Recoverable.prototype.getFollowsForInRuleRecovery = function (tokType, tokIdxInRule) {\n        var grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        var follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    };\n    Recoverable.prototype.tryInRuleRecovery = function (expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            var tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            var nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    };\n    Recoverable.prototype.canPerformInRuleRecovery = function (expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    };\n    Recoverable.prototype.canRecoverWithSingleTokenInsertion = function (expectedTokType, follows) {\n        var _this = this;\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (utils_1.isEmpty(follows)) {\n            return false;\n        }\n        var mismatchedTok = this.LA(1);\n        var isMisMatchedTokInFollows = utils_1.find(follows, function (possibleFollowsTokType) {\n            return _this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    };\n    Recoverable.prototype.canRecoverWithSingleTokenDeletion = function (expectedTokType) {\n        var isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    };\n    Recoverable.prototype.isInCurrentRuleReSyncSet = function (tokenTypeIdx) {\n        var followKey = this.getCurrFollowKey();\n        var currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return utils_1.contains(currentRuleReSyncSet, tokenTypeIdx);\n    };\n    Recoverable.prototype.findReSyncTokenType = function () {\n        var allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        var nextToken = this.LA(1);\n        var k = 2;\n        while (true) {\n            var nextTokenType = nextToken.tokenType;\n            if (utils_1.contains(allPossibleReSyncTokTypes, nextTokenType)) {\n                return nextTokenType;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    };\n    Recoverable.prototype.getCurrFollowKey = function () {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return exports.EOF_FOLLOW_KEY;\n        }\n        var currRuleShortName = this.getLastExplicitRuleShortName();\n        var currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        var prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName)\n        };\n    };\n    Recoverable.prototype.buildFullFollowKeyStack = function () {\n        var _this = this;\n        var explicitRuleStack = this.RULE_STACK;\n        var explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return utils_1.map(explicitRuleStack, function (ruleName, idx) {\n            if (idx === 0) {\n                return exports.EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: _this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: _this.shortRuleNameToFullName(explicitRuleStack[idx - 1])\n            };\n        });\n    };\n    Recoverable.prototype.flattenFollowSet = function () {\n        var _this = this;\n        var followStack = utils_1.map(this.buildFullFollowKeyStack(), function (currKey) {\n            return _this.getFollowSetFromFollowKey(currKey);\n        });\n        return utils_1.flatten(followStack);\n    };\n    Recoverable.prototype.getFollowSetFromFollowKey = function (followKey) {\n        if (followKey === exports.EOF_FOLLOW_KEY) {\n            return [tokens_public_1.EOF];\n        }\n        var followName = followKey.ruleName + followKey.idxInCallingRule + constants_1.IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    };\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    Recoverable.prototype.addToResyncTokens = function (token, resyncTokens) {\n        if (!this.tokenMatcher(token, tokens_public_1.EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    };\n    Recoverable.prototype.reSyncTo = function (tokType) {\n        var resyncedTokens = [];\n        var nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return utils_1.dropRight(resyncedTokens);\n    };\n    Recoverable.prototype.attemptInRepetitionRecovery = function (prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    };\n    Recoverable.prototype.getCurrentGrammarPath = function (tokType, tokIdxInRule) {\n        var pathRuleStack = this.getHumanReadableRuleStack();\n        var pathOccurrenceStack = utils_1.cloneArr(this.RULE_OCCURRENCE_STACK);\n        var grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule\n        };\n        return grammarPath;\n    };\n    Recoverable.prototype.getHumanReadableRuleStack = function () {\n        var _this = this;\n        return utils_1.map(this.RULE_STACK, function (currShortName) {\n            return _this.shortRuleNameToFullName(currShortName);\n        });\n    };\n    return Recoverable;\n}());\nexports.Recoverable = Recoverable;\nfunction attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    var key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    var firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        var currRuleName = this.getCurrRuleFullName();\n        var ruleGrammar = this.getGAstProductions()[currRuleName];\n        var walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    var expectTokAfterLastMatch = firstAfterRepInfo.token;\n    var nextTokIdx = firstAfterRepInfo.occurrence;\n    var isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = tokens_public_1.EOF;\n        nextTokIdx = 1;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\nexports.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n//# sourceMappingURL=recoverable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TreeBuilder = void 0;\nvar cst_1 = require(\"../../cst/cst\");\nvar utils_1 = require(\"../../../utils/utils\");\nvar cst_visitor_1 = require(\"../../cst/cst_visitor\");\nvar parser_1 = require(\"../parser\");\n/**\n * This trait is responsible for the CST building logic.\n */\nvar TreeBuilder = /** @class */ (function () {\n    function TreeBuilder() {\n    }\n    TreeBuilder.prototype.initTreeBuilder = function (config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = utils_1.has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking\n            : parser_1.DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = utils_1.NOOP;\n            this.cstFinallyStateUpdate = utils_1.NOOP;\n            this.cstPostTerminal = utils_1.NOOP;\n            this.cstPostNonTerminal = utils_1.NOOP;\n            this.cstPostRule = utils_1.NOOP;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = cst_1.setNodeLocationFull;\n                    this.setNodeLocationFromNode = cst_1.setNodeLocationFull;\n                    this.cstPostRule = utils_1.NOOP;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = utils_1.NOOP;\n                    this.setNodeLocationFromNode = utils_1.NOOP;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = cst_1.setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = cst_1.setNodeLocationOnlyOffset;\n                    this.cstPostRule = utils_1.NOOP;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = utils_1.NOOP;\n                    this.setNodeLocationFromNode = utils_1.NOOP;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = utils_1.NOOP;\n                this.setNodeLocationFromNode = utils_1.NOOP;\n                this.cstPostRule = utils_1.NOOP;\n                this.setInitialNodeLocation = utils_1.NOOP;\n            }\n            else {\n                throw Error(\"Invalid <nodeLocationTracking> config option: \\\"\" + config.nodeLocationTracking + \"\\\"\");\n            }\n        }\n    };\n    TreeBuilder.prototype.setInitialNodeLocationOnlyOffsetRecovery = function (cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN\n        };\n    };\n    TreeBuilder.prototype.setInitialNodeLocationOnlyOffsetRegular = function (cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN\n        };\n    };\n    TreeBuilder.prototype.setInitialNodeLocationFullRecovery = function (cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN\n        };\n    };\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    TreeBuilder.prototype.setInitialNodeLocationFullRegular = function (cstNode) {\n        var nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN\n        };\n    };\n    TreeBuilder.prototype.cstInvocationStateUpdate = function (fullRuleName, shortName) {\n        var cstNode = {\n            name: fullRuleName,\n            children: {}\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    };\n    TreeBuilder.prototype.cstFinallyStateUpdate = function () {\n        this.CST_STACK.pop();\n    };\n    TreeBuilder.prototype.cstPostRuleFull = function (ruleCstNode) {\n        var prevToken = this.LA(0);\n        var loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    };\n    TreeBuilder.prototype.cstPostRuleOnlyOffset = function (ruleCstNode) {\n        var prevToken = this.LA(0);\n        var loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    };\n    TreeBuilder.prototype.cstPostTerminal = function (key, consumedToken) {\n        var rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        cst_1.addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    };\n    TreeBuilder.prototype.cstPostNonTerminal = function (ruleCstResult, ruleName) {\n        var preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        cst_1.addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    };\n    TreeBuilder.prototype.getBaseCstVisitorConstructor = function () {\n        if (utils_1.isUndefined(this.baseCstVisitorConstructor)) {\n            var newBaseCstVisitorConstructor = cst_visitor_1.createBaseSemanticVisitorConstructor(this.className, utils_1.keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    };\n    TreeBuilder.prototype.getBaseCstVisitorConstructorWithDefaults = function () {\n        if (utils_1.isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            var newConstructor = cst_visitor_1.createBaseVisitorConstructorWithDefaults(this.className, utils_1.keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    };\n    TreeBuilder.prototype.getLastExplicitRuleShortName = function () {\n        var ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    };\n    TreeBuilder.prototype.getPreviousExplicitRuleShortName = function () {\n        var ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    };\n    TreeBuilder.prototype.getLastExplicitRuleOccurrenceIndex = function () {\n        var occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    };\n    return TreeBuilder;\n}());\nexports.TreeBuilder = TreeBuilder;\n//# sourceMappingURL=tree_builder.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.charCodeToOptimizedIndex = exports.minOptimizationVal = exports.buildLineBreakIssueMessage = exports.LineTerminatorOptimizedTester = exports.isShortPattern = exports.isCustomPattern = exports.cloneEmptyGroups = exports.performWarningRuntimeChecks = exports.performRuntimeChecks = exports.addStickyFlag = exports.addStartOfInput = exports.findUnreachablePatterns = exports.findModesThatDoNotExist = exports.findInvalidGroupType = exports.findDuplicatePatterns = exports.findUnsupportedFlags = exports.findStartOfInputAnchor = exports.findEmptyMatchRegExps = exports.findEndOfInputAnchor = exports.findInvalidPatterns = exports.findMissingPatterns = exports.validatePatterns = exports.analyzeTokenTypes = exports.enableSticky = exports.disableSticky = exports.SUPPORT_STICKY = exports.MODES = exports.DEFAULT_MODE = void 0;\nvar regexp_to_ast_1 = require(\"regexp-to-ast\");\nvar lexer_public_1 = require(\"./lexer_public\");\nvar utils_1 = require(\"../utils/utils\");\nvar reg_exp_1 = require(\"./reg_exp\");\nvar reg_exp_parser_1 = require(\"./reg_exp_parser\");\nvar PATTERN = \"PATTERN\";\nexports.DEFAULT_MODE = \"defaultMode\";\nexports.MODES = \"modes\";\nexports.SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nfunction disableSticky() {\n    exports.SUPPORT_STICKY = false;\n}\nexports.disableSticky = disableSticky;\nfunction enableSticky() {\n    exports.SUPPORT_STICKY = true;\n}\nexports.enableSticky = enableSticky;\nfunction analyzeTokenTypes(tokenTypes, options) {\n    options = utils_1.defaults(options, {\n        useSticky: exports.SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: function (msg, action) { return action(); }\n    });\n    var tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", function () {\n        initCharCodeToOptimizedIndexMap();\n    });\n    var onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", function () {\n        onlyRelevantTypes = utils_1.reject(tokenTypes, function (currType) {\n            return currType[PATTERN] === lexer_public_1.Lexer.NA;\n        });\n    });\n    var hasCustom = false;\n    var allTransformedPatterns;\n    tracer(\"Transform Patterns\", function () {\n        hasCustom = false;\n        allTransformedPatterns = utils_1.map(onlyRelevantTypes, function (currType) {\n            var currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (utils_1.isRegExp(currPattern)) {\n                var regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !utils_1.contains([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\"\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (utils_1.isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (utils_1.has(currPattern, \"exec\")) {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    var escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    var wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    var patternIdxToType;\n    var patternIdxToGroup;\n    var patternIdxToLongerAltIdx;\n    var patternIdxToPushMode;\n    var patternIdxToPopMode;\n    tracer(\"misc mapping\", function () {\n        patternIdxToType = utils_1.map(onlyRelevantTypes, function (currType) { return currType.tokenTypeIdx; });\n        patternIdxToGroup = utils_1.map(onlyRelevantTypes, function (clazz) {\n            var groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === lexer_public_1.Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (utils_1.isString(groupName)) {\n                return groupName;\n            }\n            else if (utils_1.isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdx = utils_1.map(onlyRelevantTypes, function (clazz) {\n            var longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                var longerAltIdx = utils_1.indexOf(onlyRelevantTypes, longerAltType);\n                return longerAltIdx;\n            }\n        });\n        patternIdxToPushMode = utils_1.map(onlyRelevantTypes, function (clazz) { return clazz.PUSH_MODE; });\n        patternIdxToPopMode = utils_1.map(onlyRelevantTypes, function (clazz) {\n            return utils_1.has(clazz, \"POP_MODE\");\n        });\n    });\n    var patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", function () {\n        var lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = utils_1.map(onlyRelevantTypes, function (tokType) { return false; });\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = utils_1.map(onlyRelevantTypes, function (tokType) {\n                if (utils_1.has(tokType, \"LINE_BREAKS\")) {\n                    return tokType.LINE_BREAKS;\n                }\n                else {\n                    if (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false) {\n                        return reg_exp_1.canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n                    }\n                }\n            });\n        }\n    });\n    var patternIdxToIsCustom;\n    var patternIdxToShort;\n    var emptyGroups;\n    var patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", function () {\n        patternIdxToIsCustom = utils_1.map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = utils_1.map(allTransformedPatterns, isShortPattern);\n        emptyGroups = utils_1.reduce(onlyRelevantTypes, function (acc, clazz) {\n            var groupName = clazz.GROUP;\n            if (utils_1.isString(groupName) && !(groupName === lexer_public_1.Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = utils_1.map(allTransformedPatterns, function (x, idx) {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdx[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx]\n            };\n        });\n    });\n    var canBeOptimized = true;\n    var charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", function () {\n            charCodeToPatternIdxToConfig = utils_1.reduce(onlyRelevantTypes, function (result, currTokType, idx) {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    var charCode = currTokType.PATTERN.charCodeAt(0);\n                    var optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (utils_1.isArray(currTokType.START_CHARS_HINT)) {\n                    var lastOptimizedIdx_1;\n                    utils_1.forEach(currTokType.START_CHARS_HINT, function (charOrInt) {\n                        var charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        var currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx_1 !== currOptimizedIdx) {\n                            lastOptimizedIdx_1 = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (utils_1.isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            utils_1.PRINT_ERROR(\"\" + reg_exp_1.failedOptimizationPrefixMsg +\n                                (\"\\tUnable to analyze < \" + currTokType.PATTERN.toString() + \" > pattern.\\n\") +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        var optimizedCodes = reg_exp_1.getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (utils_1.isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        utils_1.forEach(optimizedCodes, function (code) {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        utils_1.PRINT_ERROR(\"\" + reg_exp_1.failedOptimizationPrefixMsg +\n                            (\"\\tTokenType: <\" + currTokType.name + \"> is using a custom token pattern without providing <start_chars_hint> parameter.\\n\") +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    tracer(\"ArrayPacking\", function () {\n        charCodeToPatternIdxToConfig = utils_1.packArray(charCodeToPatternIdxToConfig);\n    });\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized\n    };\n}\nexports.analyzeTokenTypes = analyzeTokenTypes;\nfunction validatePatterns(tokenTypes, validModesNames) {\n    var errors = [];\n    var missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    var invalidResult = findInvalidPatterns(missingResult.valid);\n    var validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nexports.validatePatterns = validatePatterns;\nfunction validateRegExpPattern(tokenTypes) {\n    var errors = [];\n    var withRegExpPatterns = utils_1.filter(tokenTypes, function (currTokType) {\n        return utils_1.isRegExp(currTokType[PATTERN]);\n    });\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nfunction findMissingPatterns(tokenTypes) {\n    var tokenTypesWithMissingPattern = utils_1.filter(tokenTypes, function (currType) {\n        return !utils_1.has(currType, PATTERN);\n    });\n    var errors = utils_1.map(tokenTypesWithMissingPattern, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: lexer_public_1.LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType]\n        };\n    });\n    var valid = utils_1.difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors: errors, valid: valid };\n}\nexports.findMissingPatterns = findMissingPatterns;\nfunction findInvalidPatterns(tokenTypes) {\n    var tokenTypesWithInvalidPattern = utils_1.filter(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        return (!utils_1.isRegExp(pattern) &&\n            !utils_1.isFunction(pattern) &&\n            !utils_1.has(pattern, \"exec\") &&\n            !utils_1.isString(pattern));\n    });\n    var errors = utils_1.map(tokenTypesWithInvalidPattern, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: lexer_public_1.LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType]\n        };\n    });\n    var valid = utils_1.difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors: errors, valid: valid };\n}\nexports.findInvalidPatterns = findInvalidPatterns;\nvar end_of_input = /[^\\\\][\\$]/;\nfunction findEndOfInputAnchor(tokenTypes) {\n    var EndAnchorFinder = /** @class */ (function (_super) {\n        __extends(EndAnchorFinder, _super);\n        function EndAnchorFinder() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.found = false;\n            return _this;\n        }\n        EndAnchorFinder.prototype.visitEndAnchor = function (node) {\n            this.found = true;\n        };\n        return EndAnchorFinder;\n    }(regexp_to_ast_1.BaseRegExpVisitor));\n    var invalidRegex = utils_1.filter(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        try {\n            var regexpAst = reg_exp_parser_1.getRegExpAst(pattern);\n            var endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    var errors = utils_1.map(invalidRegex, function (currType) {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: lexer_public_1.LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nexports.findEndOfInputAnchor = findEndOfInputAnchor;\nfunction findEmptyMatchRegExps(tokenTypes) {\n    var matchesEmptyString = utils_1.filter(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        return pattern.test(\"\");\n    });\n    var errors = utils_1.map(matchesEmptyString, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: lexer_public_1.LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nexports.findEmptyMatchRegExps = findEmptyMatchRegExps;\nvar start_of_input = /[^\\\\[][\\^]|^\\^/;\nfunction findStartOfInputAnchor(tokenTypes) {\n    var StartAnchorFinder = /** @class */ (function (_super) {\n        __extends(StartAnchorFinder, _super);\n        function StartAnchorFinder() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.found = false;\n            return _this;\n        }\n        StartAnchorFinder.prototype.visitStartAnchor = function (node) {\n            this.found = true;\n        };\n        return StartAnchorFinder;\n    }(regexp_to_ast_1.BaseRegExpVisitor));\n    var invalidRegex = utils_1.filter(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        try {\n            var regexpAst = reg_exp_parser_1.getRegExpAst(pattern);\n            var startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    var errors = utils_1.map(invalidRegex, function (currType) {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: lexer_public_1.LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nexports.findStartOfInputAnchor = findStartOfInputAnchor;\nfunction findUnsupportedFlags(tokenTypes) {\n    var invalidFlags = utils_1.filter(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    var errors = utils_1.map(invalidFlags, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: lexer_public_1.LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nexports.findUnsupportedFlags = findUnsupportedFlags;\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nfunction findDuplicatePatterns(tokenTypes) {\n    var found = [];\n    var identicalPatterns = utils_1.map(tokenTypes, function (outerType) {\n        return utils_1.reduce(tokenTypes, function (result, innerType) {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !utils_1.contains(found, innerType) &&\n                innerType.PATTERN !== lexer_public_1.Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = utils_1.compact(identicalPatterns);\n    var duplicatePatterns = utils_1.filter(identicalPatterns, function (currIdenticalSet) {\n        return currIdenticalSet.length > 1;\n    });\n    var errors = utils_1.map(duplicatePatterns, function (setOfIdentical) {\n        var tokenTypeNames = utils_1.map(setOfIdentical, function (currType) {\n            return currType.name;\n        });\n        var dupPatternSrc = utils_1.first(setOfIdentical).PATTERN;\n        return {\n            message: \"The same RegExp pattern ->\" + dupPatternSrc + \"<-\" +\n                (\"has been used in all of the following Token Types: \" + tokenTypeNames.join(\", \") + \" <-\"),\n            type: lexer_public_1.LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical\n        };\n    });\n    return errors;\n}\nexports.findDuplicatePatterns = findDuplicatePatterns;\nfunction findInvalidGroupType(tokenTypes) {\n    var invalidTypes = utils_1.filter(tokenTypes, function (clazz) {\n        if (!utils_1.has(clazz, \"GROUP\")) {\n            return false;\n        }\n        var group = clazz.GROUP;\n        return group !== lexer_public_1.Lexer.SKIPPED && group !== lexer_public_1.Lexer.NA && !utils_1.isString(group);\n    });\n    var errors = utils_1.map(invalidTypes, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: lexer_public_1.LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nexports.findInvalidGroupType = findInvalidGroupType;\nfunction findModesThatDoNotExist(tokenTypes, validModes) {\n    var invalidModes = utils_1.filter(tokenTypes, function (clazz) {\n        return (clazz.PUSH_MODE !== undefined && !utils_1.contains(validModes, clazz.PUSH_MODE));\n    });\n    var errors = utils_1.map(invalidModes, function (tokType) {\n        var msg = \"Token Type: ->\" + tokType.name + \"<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->\" + tokType.PUSH_MODE + \"<-\" +\n            \"which does not exist\";\n        return {\n            message: msg,\n            type: lexer_public_1.LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType]\n        };\n    });\n    return errors;\n}\nexports.findModesThatDoNotExist = findModesThatDoNotExist;\nfunction findUnreachablePatterns(tokenTypes) {\n    var errors = [];\n    var canBeTested = utils_1.reduce(tokenTypes, function (result, tokType, idx) {\n        var pattern = tokType.PATTERN;\n        if (pattern === lexer_public_1.Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (utils_1.isString(pattern)) {\n            result.push({ str: pattern, idx: idx, tokenType: tokType });\n        }\n        else if (utils_1.isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx: idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    utils_1.forEach(tokenTypes, function (tokType, testIdx) {\n        utils_1.forEach(canBeTested, function (_a) {\n            var str = _a.str, idx = _a.idx, tokenType = _a.tokenType;\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                var msg = \"Token: ->\" + tokenType.name + \"<- can never be matched.\\n\" +\n                    (\"Because it appears AFTER the Token Type ->\" + tokType.name + \"<-\") +\n                    \"in the lexer's definition.\\n\" +\n                    \"See https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#UNREACHABLE\";\n                errors.push({\n                    message: msg,\n                    type: lexer_public_1.LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType]\n                });\n            }\n        });\n    });\n    return errors;\n}\nexports.findUnreachablePatterns = findUnreachablePatterns;\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (utils_1.isRegExp(pattern)) {\n        var regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (utils_1.isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (utils_1.has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    var metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\"\n    ];\n    return (utils_1.find(metaChars, function (char) { return regExp.source.indexOf(char) !== -1; }) === undefined);\n}\nfunction addStartOfInput(pattern) {\n    var flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(\"^(?:\" + pattern.source + \")\", flags);\n}\nexports.addStartOfInput = addStartOfInput;\nfunction addStickyFlag(pattern) {\n    var flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(\"\" + pattern.source, flags);\n}\nexports.addStickyFlag = addStickyFlag;\nfunction performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    var errors = [];\n    // some run time checks to help the end users.\n    if (!utils_1.has(lexerDefinition, exports.DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                exports.DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: lexer_public_1.LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\n        });\n    }\n    if (!utils_1.has(lexerDefinition, exports.MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                exports.MODES +\n                \"> property in its definition\\n\",\n            type: lexer_public_1.LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\n        });\n    }\n    if (utils_1.has(lexerDefinition, exports.MODES) &&\n        utils_1.has(lexerDefinition, exports.DEFAULT_MODE) &&\n        !utils_1.has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized with a \" + exports.DEFAULT_MODE + \": <\" + lexerDefinition.defaultMode + \">\" +\n                \"which does not exist\\n\",\n            type: lexer_public_1.LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\n        });\n    }\n    if (utils_1.has(lexerDefinition, exports.MODES)) {\n        utils_1.forEach(lexerDefinition.modes, function (currModeValue, currModeName) {\n            utils_1.forEach(currModeValue, function (currTokType, currIdx) {\n                if (utils_1.isUndefined(currTokType)) {\n                    errors.push({\n                        message: \"A Lexer cannot be initialized using an undefined Token Type. Mode:\" +\n                            (\"<\" + currModeName + \"> at index: <\" + currIdx + \">\\n\"),\n                        type: lexer_public_1.LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexports.performRuntimeChecks = performRuntimeChecks;\nfunction performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    var warnings = [];\n    var hasAnyLineBreak = false;\n    var allTokenTypes = utils_1.compact(utils_1.flatten(utils_1.mapValues(lexerDefinition.modes, function (tokTypes) { return tokTypes; })));\n    var concreteTokenTypes = utils_1.reject(allTokenTypes, function (currType) { return currType[PATTERN] === lexer_public_1.Lexer.NA; });\n    var terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        utils_1.forEach(concreteTokenTypes, function (tokType) {\n            var currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                var message = buildLineBreakIssueMessage(tokType, currIssue);\n                var warningDescriptor = {\n                    message: message,\n                    type: currIssue.issue,\n                    tokenType: tokType\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (utils_1.has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (reg_exp_1.canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: lexer_public_1.LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS\n        });\n    }\n    return warnings;\n}\nexports.performWarningRuntimeChecks = performWarningRuntimeChecks;\nfunction cloneEmptyGroups(emptyGroups) {\n    var clonedResult = {};\n    var groupKeys = utils_1.keys(emptyGroups);\n    utils_1.forEach(groupKeys, function (currKey) {\n        var currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (utils_1.isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\nexports.cloneEmptyGroups = cloneEmptyGroups;\n// TODO: refactor to avoid duplication\nfunction isCustomPattern(tokenType) {\n    var pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (utils_1.isRegExp(pattern)) {\n        return false;\n    }\n    else if (utils_1.isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (utils_1.has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (utils_1.isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.isCustomPattern = isCustomPattern;\nfunction isShortPattern(pattern) {\n    if (utils_1.isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\nexports.isShortPattern = isShortPattern;\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexports.LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        var len = text.length;\n        for (var i = this.lastIndex; i < len; i++) {\n            var c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (utils_1.has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (utils_1.isRegExp(tokType.PATTERN)) {\n            try {\n                reg_exp_1.canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: lexer_public_1.LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message\n                };\n            }\n            return false;\n        }\n        else if (utils_1.isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: lexer_public_1.LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nfunction buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === lexer_public_1.LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            (\"\\tThe problem is in the <\" + tokType.name + \"> Token Type\\n\") +\n            (\"\\t Root cause: \" + details.errMsg + \".\\n\") +\n            \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === lexer_public_1.LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            (\"\\tThe problem is in the <\" + tokType.name + \"> Token Type\\n\") +\n            \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.buildLineBreakIssueMessage = buildLineBreakIssueMessage;\nfunction getCharCodes(charsOrCodes) {\n    var charCodes = utils_1.map(charsOrCodes, function (numOrString) {\n        if (utils_1.isString(numOrString) && numOrString.length > 0) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexports.minOptimizationVal = 256;\n/**\n * We ae mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nfunction charCodeToOptimizedIndex(charCode) {\n    return charCode < exports.minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\nexports.charCodeToOptimizedIndex = charCodeToOptimizedIndex;\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nvar charCodeToOptimizedIdxMap = [];\nfunction initCharCodeToOptimizedIndexMap() {\n    if (utils_1.isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (var i = 0; i < 65536; i++) {\n            /* tslint:disable */\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n            /* tslint:enable */\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultLexerErrorProvider = void 0;\nexports.defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage: function (token) {\n        return \"Unable to pop Lexer Mode after encountering Token ->\" + token.image + \"<- The Mode Stack is empty\";\n    },\n    buildUnexpectedCharactersMessage: function (fullText, startOffset, length, line, column) {\n        return (\"unexpected character: ->\" + fullText.charAt(startOffset) + \"<- at offset: \" + startOffset + \",\" + (\" skipped \" + length + \" characters.\"));\n    }\n};\n//# sourceMappingURL=lexer_errors_public.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Lexer = exports.LexerDefinitionErrorType = void 0;\nvar lexer_1 = require(\"./lexer\");\nvar utils_1 = require(\"../utils/utils\");\nvar tokens_1 = require(\"./tokens\");\nvar lexer_errors_public_1 = require(\"../scan/lexer_errors_public\");\nvar reg_exp_parser_1 = require(\"./reg_exp_parser\");\nvar LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n})(LexerDefinitionErrorType = exports.LexerDefinitionErrorType || (exports.LexerDefinitionErrorType = {}));\nvar DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: lexer_errors_public_1.defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nvar Lexer = /** @class */ (function () {\n    function Lexer(lexerDefinition, config) {\n        var _this = this;\n        if (config === void 0) { config = DEFAULT_LEXER_CONFIG; }\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.config = undefined;\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = utils_1.merge(DEFAULT_LEXER_CONFIG, config);\n        var traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", function () {\n            var actualDefinition;\n            var hasOnlySingleMode = true;\n            _this.TRACE_INIT(\"Lexer Config handling\", function () {\n                if (_this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    _this.config.lineTerminatorsPattern = lexer_1.LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (_this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                _this.trackStartLines = /full|onlyStart/i.test(_this.config.positionTracking);\n                _this.trackEndLines = /full/i.test(_this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (utils_1.isArray(lexerDefinition)) {\n                    actualDefinition = { modes: {} };\n                    actualDefinition.modes[lexer_1.DEFAULT_MODE] = utils_1.cloneArr(lexerDefinition);\n                    actualDefinition[lexer_1.DEFAULT_MODE] = lexer_1.DEFAULT_MODE;\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = utils_1.cloneObj(lexerDefinition);\n                }\n            });\n            if (_this.config.skipValidations === false) {\n                _this.TRACE_INIT(\"performRuntimeChecks\", function () {\n                    _this.lexerDefinitionErrors = _this.lexerDefinitionErrors.concat(lexer_1.performRuntimeChecks(actualDefinition, _this.trackStartLines, _this.config.lineTerminatorCharacters));\n                });\n                _this.TRACE_INIT(\"performWarningRuntimeChecks\", function () {\n                    _this.lexerDefinitionWarning = _this.lexerDefinitionWarning.concat(lexer_1.performWarningRuntimeChecks(actualDefinition, _this.trackStartLines, _this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            utils_1.forEach(actualDefinition.modes, function (currModeValue, currModeName) {\n                actualDefinition.modes[currModeName] = utils_1.reject(currModeValue, function (currTokType) { return utils_1.isUndefined(currTokType); });\n            });\n            var allModeNames = utils_1.keys(actualDefinition.modes);\n            utils_1.forEach(actualDefinition.modes, function (currModDef, currModName) {\n                _this.TRACE_INIT(\"Mode: <\" + currModName + \"> processing\", function () {\n                    _this.modes.push(currModName);\n                    if (_this.config.skipValidations === false) {\n                        _this.TRACE_INIT(\"validatePatterns\", function () {\n                            _this.lexerDefinitionErrors = _this.lexerDefinitionErrors.concat(lexer_1.validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (utils_1.isEmpty(_this.lexerDefinitionErrors)) {\n                        tokens_1.augmentTokenTypes(currModDef);\n                        var currAnalyzeResult_1;\n                        _this.TRACE_INIT(\"analyzeTokenTypes\", function () {\n                            currAnalyzeResult_1 = lexer_1.analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: _this.config\n                                    .lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: _this.TRACE_INIT.bind(_this)\n                            });\n                        });\n                        _this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult_1.patternIdxToConfig;\n                        _this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult_1.charCodeToPatternIdxToConfig;\n                        _this.emptyGroups = utils_1.merge(_this.emptyGroups, currAnalyzeResult_1.emptyGroups);\n                        _this.hasCustom = currAnalyzeResult_1.hasCustom || _this.hasCustom;\n                        _this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult_1.canBeOptimized;\n                    }\n                });\n            });\n            _this.defaultMode = actualDefinition.defaultMode;\n            if (!utils_1.isEmpty(_this.lexerDefinitionErrors) &&\n                !_this.config.deferDefinitionErrorsHandling) {\n                var allErrMessages = utils_1.map(_this.lexerDefinitionErrors, function (error) {\n                    return error.message;\n                });\n                var allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            utils_1.forEach(_this.lexerDefinitionWarning, function (warningDescriptor) {\n                utils_1.PRINT_WARNING(warningDescriptor.message);\n            });\n            _this.TRACE_INIT(\"Choosing sub-methods implementations\", function () {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (lexer_1.SUPPORT_STICKY) {\n                    _this.chopInput = utils_1.IDENTITY;\n                    _this.match = _this.matchWithTest;\n                }\n                else {\n                    _this.updateLastIndex = utils_1.NOOP;\n                    _this.match = _this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    _this.handleModes = utils_1.NOOP;\n                }\n                if (_this.trackStartLines === false) {\n                    _this.computeNewColumn = utils_1.IDENTITY;\n                }\n                if (_this.trackEndLines === false) {\n                    _this.updateTokenEndLineColumnLocation = utils_1.NOOP;\n                }\n                if (/full/i.test(_this.config.positionTracking)) {\n                    _this.createTokenInstance = _this.createFullToken;\n                }\n                else if (/onlyStart/i.test(_this.config.positionTracking)) {\n                    _this.createTokenInstance = _this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(_this.config.positionTracking)) {\n                    _this.createTokenInstance = _this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(\"Invalid <positionTracking> config option: \\\"\" + _this.config.positionTracking + \"\\\"\");\n                }\n                if (_this.hasCustom) {\n                    _this.addToken = _this.addTokenUsingPush;\n                    _this.handlePayload = _this.handlePayloadWithCustom;\n                }\n                else {\n                    _this.addToken = _this.addTokenUsingMemberAccess;\n                    _this.handlePayload = _this.handlePayloadNoCustom;\n                }\n            });\n            _this.TRACE_INIT(\"Failed Optimization Warnings\", function () {\n                var unOptimizedModes = utils_1.reduce(_this.canModeBeOptimized, function (cannotBeOptimized, canBeOptimized, modeName) {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !utils_1.isEmpty(unOptimizedModes)) {\n                    throw Error(\"Lexer Modes: < \" + unOptimizedModes.join(\", \") + \" > cannot be optimized.\\n\" +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            _this.TRACE_INIT(\"clearRegExpParserCache\", function () {\n                reg_exp_parser_1.clearRegExpParserCache();\n            });\n            _this.TRACE_INIT(\"toFastProperties\", function () {\n                utils_1.toFastProperties(_this);\n            });\n        });\n    }\n    Lexer.prototype.tokenize = function (text, initialMode) {\n        if (initialMode === void 0) { initialMode = this.defaultMode; }\n        if (!utils_1.isEmpty(this.lexerDefinitionErrors)) {\n            var allErrMessages = utils_1.map(this.lexerDefinitionErrors, function (error) {\n                return error.message;\n            });\n            var allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        var lexResult = this.tokenizeInternal(text, initialMode);\n        return lexResult;\n    };\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    Lexer.prototype.tokenizeInternal = function (text, initialMode) {\n        var _this = this;\n        var i, j, matchAltImage, longerAltIdx, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        var orgText = text;\n        var orgLength = orgText.length;\n        var offset = 0;\n        var matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        var guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        var matchedTokens = new Array(guessedNumberOfTokens);\n        var errors = [];\n        var line = this.trackStartLines ? 1 : undefined;\n        var column = this.trackStartLines ? 1 : undefined;\n        var groups = lexer_1.cloneEmptyGroups(this.emptyGroups);\n        var trackLines = this.trackStartLines;\n        var lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        var currModePatternsLength = 0;\n        var patternIdxToConfig = [];\n        var currCharCodeToPatternIdxToConfig = [];\n        var modeStack = [];\n        var emptyArray = [];\n        Object.freeze(emptyArray);\n        var getPossiblePatterns = undefined;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            var optimizedCharIdx = lexer_1.charCodeToOptimizedIndex(charCode);\n            var possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        var pop_mode = function (popToken) {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                var msg_1 = _this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine !== undefined ? popToken.startLine : undefined,\n                    column: popToken.startColumn !== undefined\n                        ? popToken.startColumn\n                        : undefined,\n                    length: popToken.image.length,\n                    message: msg_1\n                });\n            }\n            else {\n                modeStack.pop();\n                var newMode = utils_1.last(modeStack);\n                patternIdxToConfig = _this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig = _this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                var modeCanBeOptimized = _this.canModeBeOptimized[newMode] && _this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig = this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            var modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        var currConfig;\n        while (offset < orgLength) {\n            matchedImage = null;\n            var nextCharCode = orgText.charCodeAt(offset);\n            var chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            var chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                var currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                var singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAltIdx = currConfig.longerAlt;\n                    if (longerAltIdx !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        var longerAltConfig = patternIdxToConfig[longerAltIdx];\n                        var longerAltPattern = longerAltConfig.pattern;\n                        altPayload = null;\n                        // single Char can never be a longer alt so no need to test it.\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        if (longerAltConfig.isCustom === true) {\n                            match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                            if (match !== null) {\n                                matchAltImage = match[0];\n                                if (match.payload !== undefined) {\n                                    altPayload = match.payload;\n                                }\n                            }\n                            else {\n                                matchAltImage = null;\n                            }\n                        }\n                        else {\n                            this.updateLastIndex(longerAltPattern, offset);\n                            matchAltImage = this.match(longerAltPattern, text, offset);\n                        }\n                        if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                            matchedImage = matchAltImage;\n                            payload = altPayload;\n                            currConfig = longerAltConfig;\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    var numOfLTsInMatch = 0;\n                    var foundTerminator = void 0;\n                    var lastLTEndOffset = void 0;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                var errorStartOffset = offset;\n                var errorLine = line;\n                var errorColumn = column;\n                var foundResyncPoint = false;\n                while (!foundResyncPoint && offset < orgLength) {\n                    // drop chars until we succeed in matching something\n                    droppedChar = orgText.charCodeAt(offset);\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        var currConfig_1 = patternIdxToConfig[j];\n                        var currPattern = currConfig_1.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        var singleCharCode = currConfig_1.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig_1.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !==\n                                    null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg\n                });\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors\n        };\n    };\n    Lexer.prototype.handleModes = function (config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            var pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    };\n    Lexer.prototype.chopInput = function (text, length) {\n        return text.substring(length);\n    };\n    Lexer.prototype.updateLastIndex = function (regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    };\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    Lexer.prototype.updateTokenEndLineColumnLocation = function (newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        var lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    };\n    Lexer.prototype.computeNewColumn = function (oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    };\n    // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n    /* istanbul ignore next - place holder */\n    Lexer.prototype.createTokenInstance = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return null;\n    };\n    Lexer.prototype.createOffsetOnlyToken = function (image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image: image,\n            startOffset: startOffset,\n            tokenTypeIdx: tokenTypeIdx,\n            tokenType: tokenType\n        };\n    };\n    Lexer.prototype.createStartOnlyToken = function (image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image: image,\n            startOffset: startOffset,\n            startLine: startLine,\n            startColumn: startColumn,\n            tokenTypeIdx: tokenTypeIdx,\n            tokenType: tokenType\n        };\n    };\n    Lexer.prototype.createFullToken = function (image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image: image,\n            startOffset: startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine: startLine,\n            endLine: startLine,\n            startColumn: startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx: tokenTypeIdx,\n            tokenType: tokenType\n        };\n    };\n    // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n    /* istanbul ignore next - place holder */\n    Lexer.prototype.addToken = function (tokenVector, index, tokenToAdd) {\n        return 666;\n    };\n    Lexer.prototype.addTokenUsingPush = function (tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    };\n    Lexer.prototype.addTokenUsingMemberAccess = function (tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    };\n    // Place holder, will be replaced by the correct variant according to the hasCustom flag option at runtime.\n    /* istanbul ignore next - place holder */\n    Lexer.prototype.handlePayload = function (token, payload) { };\n    Lexer.prototype.handlePayloadNoCustom = function (token, payload) { };\n    Lexer.prototype.handlePayloadWithCustom = function (token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    };\n    /* istanbul ignore next - place holder to be replaced with chosen alternative at runtime */\n    Lexer.prototype.match = function (pattern, text, offset) {\n        return null;\n    };\n    Lexer.prototype.matchWithTest = function (pattern, text, offset) {\n        var found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    };\n    Lexer.prototype.matchWithExec = function (pattern, text) {\n        var regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : regExpArray;\n    };\n    // Duplicated from the parser's perf trace trait to allow future extraction\n    // of the lexer to a separate package.\n    Lexer.prototype.TRACE_INIT = function (phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            var indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(indent + \"--> <\" + phaseDesc + \">\");\n            }\n            var _a = utils_1.timer(phaseImpl), time = _a.time, value = _a.value;\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            var traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(indent + \"<-- <\" + phaseDesc + \"> time: \" + time + \"ms\");\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    };\n    Lexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n        \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\n    Lexer.NA = /NOT_APPLICABLE/;\n    return Lexer;\n}());\nexports.Lexer = Lexer;\n//# sourceMappingURL=lexer_public.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.canMatchCharCode = exports.firstCharOptimizedIndices = exports.getOptimizedStartCodesIndices = exports.failedOptimizationPrefixMsg = void 0;\nvar regexp_to_ast_1 = require(\"regexp-to-ast\");\nvar utils_1 = require(\"../utils/utils\");\nvar reg_exp_parser_1 = require(\"./reg_exp_parser\");\nvar lexer_1 = require(\"./lexer\");\nvar complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexports.failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nfunction getOptimizedStartCodesIndices(regExp, ensureOptimizations) {\n    if (ensureOptimizations === void 0) { ensureOptimizations = false; }\n    try {\n        var ast = reg_exp_parser_1.getRegExpAst(regExp);\n        var firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                utils_1.PRINT_WARNING(\"\" + exports.failedOptimizationPrefixMsg +\n                    (\"\\tUnable to optimize: < \" + regExp.toString() + \" >\\n\") +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            var msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            utils_1.PRINT_ERROR(exports.failedOptimizationPrefixMsg + \"\\n\" +\n                (\"\\tFailed parsing: < \" + regExp.toString() + \" >\\n\") +\n                (\"\\tUsing the regexp-to-ast library version: \" + regexp_to_ast_1.VERSION + \"\\n\") +\n                \"\\tPlease open an issue at: https://github.com/bd82/regexp-to-ast/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexports.getOptimizedStartCodesIndices = getOptimizedStartCodesIndices;\nfunction firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (var i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            var terms = ast.value;\n            for (var i = 0; i < terms.length; i++) {\n                var term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                var atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        utils_1.forEach(atom.value, function (code) {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                var range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (var rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (var rangeCode = range.from; rangeCode <= range.to && rangeCode < lexer_1.minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= lexer_1.minOptimizationVal) {\n                                        var minUnOptVal = range.from >= lexer_1.minOptimizationVal\n                                            ? range.from\n                                            : lexer_1.minOptimizationVal;\n                                        var maxUnOptVal = range.to;\n                                        var minOptIdx = lexer_1.charCodeToOptimizedIndex(minUnOptVal);\n                                        var maxOptIdx = lexer_1.charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (var currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                var isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return utils_1.values(result);\n}\nexports.firstCharOptimizedIndices = firstCharOptimizedIndices;\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    var optimizedCharIdx = lexer_1.charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    var char = String.fromCharCode(code);\n    var upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        var optimizedCharIdx = lexer_1.charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        var lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            var optimizedCharIdx = lexer_1.charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return utils_1.find(setNode.value, function (codeOrRange) {\n        if (typeof codeOrRange === \"number\") {\n            return utils_1.contains(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            var range_1 = codeOrRange;\n            return (utils_1.find(targetCharCodes, function (targetCode) { return range_1.from <= targetCode && targetCode <= range_1.to; }) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    if (ast.quantifier && ast.quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return utils_1.isArray(ast.value)\n        ? utils_1.every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nvar CharCodeFinder = /** @class */ (function (_super) {\n    __extends(CharCodeFinder, _super);\n    function CharCodeFinder(targetCharCodes) {\n        var _this = _super.call(this) || this;\n        _this.targetCharCodes = targetCharCodes;\n        _this.found = false;\n        return _this;\n    }\n    CharCodeFinder.prototype.visitChildren = function (node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        _super.prototype.visitChildren.call(this, node);\n    };\n    CharCodeFinder.prototype.visitCharacter = function (node) {\n        if (utils_1.contains(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    };\n    CharCodeFinder.prototype.visitSet = function (node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    };\n    return CharCodeFinder;\n}(regexp_to_ast_1.BaseRegExpVisitor));\nfunction canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        var ast = reg_exp_parser_1.getRegExpAst(pattern);\n        var charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (utils_1.find(pattern, function (char) {\n            return utils_1.contains(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\nexports.canMatchCharCode = canMatchCharCode;\n//# sourceMappingURL=reg_exp.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clearRegExpParserCache = exports.getRegExpAst = void 0;\nvar regexp_to_ast_1 = require(\"regexp-to-ast\");\nvar regExpAstCache = {};\nvar regExpParser = new regexp_to_ast_1.RegExpParser();\nfunction getRegExpAst(regExp) {\n    var regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        var regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexports.getRegExpAst = getRegExpAst;\nfunction clearRegExpParserCache() {\n    regExpAstCache = {};\n}\nexports.clearRegExpParserCache = clearRegExpParserCache;\n//# sourceMappingURL=reg_exp_parser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTokenType = exports.hasExtendingTokensTypesMapProperty = exports.hasExtendingTokensTypesProperty = exports.hasCategoriesProperty = exports.hasShortKeyProperty = exports.singleAssignCategoriesToksMap = exports.assignCategoriesMapProp = exports.assignCategoriesTokensProp = exports.assignTokenDefaultProps = exports.expandCategories = exports.augmentTokenTypes = exports.tokenIdxToClass = exports.tokenShortNameIdx = exports.tokenStructuredMatcherNoCategories = exports.tokenStructuredMatcher = void 0;\nvar utils_1 = require(\"../utils/utils\");\nfunction tokenStructuredMatcher(tokInstance, tokConstructor) {\n    var instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\nexports.tokenStructuredMatcher = tokenStructuredMatcher;\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nfunction tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexports.tokenStructuredMatcherNoCategories = tokenStructuredMatcherNoCategories;\nexports.tokenShortNameIdx = 1;\nexports.tokenIdxToClass = {};\nfunction augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    var tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    utils_1.forEach(tokenTypesAndParents, function (tokType) {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexports.augmentTokenTypes = augmentTokenTypes;\nfunction expandCategories(tokenTypes) {\n    var result = utils_1.cloneArr(tokenTypes);\n    var categories = tokenTypes;\n    var searching = true;\n    while (searching) {\n        categories = utils_1.compact(utils_1.flatten(utils_1.map(categories, function (currTokType) { return currTokType.CATEGORIES; })));\n        var newCategories = utils_1.difference(categories, result);\n        result = result.concat(newCategories);\n        if (utils_1.isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexports.expandCategories = expandCategories;\nfunction assignTokenDefaultProps(tokenTypes) {\n    utils_1.forEach(tokenTypes, function (currTokType) {\n        if (!hasShortKeyProperty(currTokType)) {\n            exports.tokenIdxToClass[exports.tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = exports.tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !utils_1.isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexports.assignTokenDefaultProps = assignTokenDefaultProps;\nfunction assignCategoriesTokensProp(tokenTypes) {\n    utils_1.forEach(tokenTypes, function (currTokType) {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        utils_1.forEach(currTokType.categoryMatchesMap, function (val, key) {\n            currTokType.categoryMatches.push(exports.tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexports.assignCategoriesTokensProp = assignCategoriesTokensProp;\nfunction assignCategoriesMapProp(tokenTypes) {\n    utils_1.forEach(tokenTypes, function (currTokType) {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexports.assignCategoriesMapProp = assignCategoriesMapProp;\nfunction singleAssignCategoriesToksMap(path, nextNode) {\n    utils_1.forEach(path, function (pathNode) {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    utils_1.forEach(nextNode.CATEGORIES, function (nextCategory) {\n        var newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!utils_1.contains(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexports.singleAssignCategoriesToksMap = singleAssignCategoriesToksMap;\nfunction hasShortKeyProperty(tokType) {\n    return utils_1.has(tokType, \"tokenTypeIdx\");\n}\nexports.hasShortKeyProperty = hasShortKeyProperty;\nfunction hasCategoriesProperty(tokType) {\n    return utils_1.has(tokType, \"CATEGORIES\");\n}\nexports.hasCategoriesProperty = hasCategoriesProperty;\nfunction hasExtendingTokensTypesProperty(tokType) {\n    return utils_1.has(tokType, \"categoryMatches\");\n}\nexports.hasExtendingTokensTypesProperty = hasExtendingTokensTypesProperty;\nfunction hasExtendingTokensTypesMapProperty(tokType) {\n    return utils_1.has(tokType, \"categoryMatchesMap\");\n}\nexports.hasExtendingTokensTypesMapProperty = hasExtendingTokensTypesMapProperty;\nfunction isTokenType(tokType) {\n    return utils_1.has(tokType, \"tokenTypeIdx\");\n}\nexports.isTokenType = isTokenType;\n//# sourceMappingURL=tokens.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tokenMatcher = exports.createTokenInstance = exports.EOF = exports.createToken = exports.hasTokenLabel = exports.tokenName = exports.tokenLabel = void 0;\nvar utils_1 = require(\"../utils/utils\");\nvar lexer_public_1 = require(\"./lexer_public\");\nvar tokens_1 = require(\"./tokens\");\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexports.tokenLabel = tokenLabel;\nfunction tokenName(tokType) {\n    return tokType.name;\n}\nexports.tokenName = tokenName;\nfunction hasTokenLabel(obj) {\n    return utils_1.isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexports.hasTokenLabel = hasTokenLabel;\nvar PARENT = \"parent\";\nvar CATEGORIES = \"categories\";\nvar LABEL = \"label\";\nvar GROUP = \"group\";\nvar PUSH_MODE = \"push_mode\";\nvar POP_MODE = \"pop_mode\";\nvar LONGER_ALT = \"longer_alt\";\nvar LINE_BREAKS = \"line_breaks\";\nvar START_CHARS_HINT = \"start_chars_hint\";\nfunction createToken(config) {\n    return createTokenInternal(config);\n}\nexports.createToken = createToken;\nfunction createTokenInternal(config) {\n    var pattern = config.pattern;\n    var tokenType = {};\n    tokenType.name = config.name;\n    if (!utils_1.isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (utils_1.has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/SAP/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (utils_1.has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    tokens_1.augmentTokenTypes([tokenType]);\n    if (utils_1.has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (utils_1.has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (utils_1.has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (utils_1.has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (utils_1.has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (utils_1.has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (utils_1.has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexports.EOF = createToken({ name: \"EOF\", pattern: lexer_public_1.Lexer.NA });\ntokens_1.augmentTokenTypes([exports.EOF]);\nfunction createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image: image,\n        startOffset: startOffset,\n        endOffset: endOffset,\n        startLine: startLine,\n        endLine: endLine,\n        startColumn: startColumn,\n        endColumn: endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType\n    };\n}\nexports.createTokenInstance = createTokenInstance;\nfunction tokenMatcher(token, tokType) {\n    return tokens_1.tokenStructuredMatcher(token, tokType);\n}\nexports.tokenMatcher = tokenMatcher;\n//# sourceMappingURL=tokens_public.js.map","\"use strict\";\n/*\n Utils using lodash style API. (not necessarily 100% compliant) for functional and other utils.\n These utils should replace usage of lodash in the production code base. not because they are any better...\n but for the purpose of being a dependency free library.\n\n The hotspots in the code are already written in imperative style for performance reasons.\n so writing several dozen utils which may be slower than the original lodash, does not matter as much\n considering they will not be invoked in hotspots...\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.peek = exports.toFastProperties = exports.applyMixins = exports.isES2015MapSupported = exports.PRINT_WARNING = exports.PRINT_ERROR = exports.packArray = exports.IDENTITY = exports.NOOP = exports.merge = exports.groupBy = exports.defaults = exports.assignNoOverwrite = exports.assign = exports.zipObject = exports.sortBy = exports.indexOf = exports.some = exports.difference = exports.every = exports.isObject = exports.isRegExp = exports.isArray = exports.partial = exports.uniq = exports.compact = exports.reduce = exports.findAll = exports.find = exports.cloneObj = exports.cloneArr = exports.contains = exports.has = exports.pick = exports.reject = exports.filter = exports.dropRight = exports.drop = exports.isFunction = exports.isUndefined = exports.isString = exports.forEach = exports.last = exports.first = exports.flatten = exports.map = exports.mapValues = exports.values = exports.keys = exports.isEmpty = void 0;\nexports.timer = void 0;\nfunction isEmpty(arr) {\n    return arr && arr.length === 0;\n}\nexports.isEmpty = isEmpty;\nfunction keys(obj) {\n    if (obj === undefined || obj === null) {\n        return [];\n    }\n    return Object.keys(obj);\n}\nexports.keys = keys;\nfunction values(obj) {\n    var vals = [];\n    var keys = Object.keys(obj);\n    for (var i = 0; i < keys.length; i++) {\n        vals.push(obj[keys[i]]);\n    }\n    return vals;\n}\nexports.values = values;\nfunction mapValues(obj, callback) {\n    var result = [];\n    var objKeys = keys(obj);\n    for (var idx = 0; idx < objKeys.length; idx++) {\n        var currKey = objKeys[idx];\n        result.push(callback.call(null, obj[currKey], currKey));\n    }\n    return result;\n}\nexports.mapValues = mapValues;\nfunction map(arr, callback) {\n    var result = [];\n    for (var idx = 0; idx < arr.length; idx++) {\n        result.push(callback.call(null, arr[idx], idx));\n    }\n    return result;\n}\nexports.map = map;\nfunction flatten(arr) {\n    var result = [];\n    for (var idx = 0; idx < arr.length; idx++) {\n        var currItem = arr[idx];\n        if (Array.isArray(currItem)) {\n            result = result.concat(flatten(currItem));\n        }\n        else {\n            result.push(currItem);\n        }\n    }\n    return result;\n}\nexports.flatten = flatten;\nfunction first(arr) {\n    return isEmpty(arr) ? undefined : arr[0];\n}\nexports.first = first;\nfunction last(arr) {\n    var len = arr && arr.length;\n    return len ? arr[len - 1] : undefined;\n}\nexports.last = last;\nfunction forEach(collection, iteratorCallback) {\n    /* istanbul ignore else */\n    if (Array.isArray(collection)) {\n        for (var i = 0; i < collection.length; i++) {\n            iteratorCallback.call(null, collection[i], i);\n        }\n    }\n    else if (isObject(collection)) {\n        var colKeys = keys(collection);\n        for (var i = 0; i < colKeys.length; i++) {\n            var key = colKeys[i];\n            var value = collection[key];\n            iteratorCallback.call(null, value, key);\n        }\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.forEach = forEach;\nfunction isString(item) {\n    return typeof item === \"string\";\n}\nexports.isString = isString;\nfunction isUndefined(item) {\n    return item === undefined;\n}\nexports.isUndefined = isUndefined;\nfunction isFunction(item) {\n    return item instanceof Function;\n}\nexports.isFunction = isFunction;\nfunction drop(arr, howMuch) {\n    if (howMuch === void 0) { howMuch = 1; }\n    return arr.slice(howMuch, arr.length);\n}\nexports.drop = drop;\nfunction dropRight(arr, howMuch) {\n    if (howMuch === void 0) { howMuch = 1; }\n    return arr.slice(0, arr.length - howMuch);\n}\nexports.dropRight = dropRight;\nfunction filter(arr, predicate) {\n    var result = [];\n    if (Array.isArray(arr)) {\n        for (var i = 0; i < arr.length; i++) {\n            var item = arr[i];\n            if (predicate.call(null, item)) {\n                result.push(item);\n            }\n        }\n    }\n    return result;\n}\nexports.filter = filter;\nfunction reject(arr, predicate) {\n    return filter(arr, function (item) { return !predicate(item); });\n}\nexports.reject = reject;\nfunction pick(obj, predicate) {\n    var keys = Object.keys(obj);\n    var result = {};\n    for (var i = 0; i < keys.length; i++) {\n        var currKey = keys[i];\n        var currItem = obj[currKey];\n        if (predicate(currItem)) {\n            result[currKey] = currItem;\n        }\n    }\n    return result;\n}\nexports.pick = pick;\nfunction has(obj, prop) {\n    if (isObject(obj)) {\n        return obj.hasOwnProperty(prop);\n    }\n    return false;\n}\nexports.has = has;\nfunction contains(arr, item) {\n    return find(arr, function (currItem) { return currItem === item; }) !== undefined ? true : false;\n}\nexports.contains = contains;\n/**\n * shallow clone\n */\nfunction cloneArr(arr) {\n    var newArr = [];\n    for (var i = 0; i < arr.length; i++) {\n        newArr.push(arr[i]);\n    }\n    return newArr;\n}\nexports.cloneArr = cloneArr;\n/**\n * shallow clone\n */\nfunction cloneObj(obj) {\n    var clonedObj = {};\n    for (var key in obj) {\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            clonedObj[key] = obj[key];\n        }\n    }\n    return clonedObj;\n}\nexports.cloneObj = cloneObj;\nfunction find(arr, predicate) {\n    for (var i = 0; i < arr.length; i++) {\n        var item = arr[i];\n        if (predicate.call(null, item)) {\n            return item;\n        }\n    }\n    return undefined;\n}\nexports.find = find;\nfunction findAll(arr, predicate) {\n    var found = [];\n    for (var i = 0; i < arr.length; i++) {\n        var item = arr[i];\n        if (predicate.call(null, item)) {\n            found.push(item);\n        }\n    }\n    return found;\n}\nexports.findAll = findAll;\nfunction reduce(arrOrObj, iterator, initial) {\n    var isArr = Array.isArray(arrOrObj);\n    var vals = isArr ? arrOrObj : values(arrOrObj);\n    var objKeys = isArr ? [] : keys(arrOrObj);\n    var accumulator = initial;\n    for (var i = 0; i < vals.length; i++) {\n        accumulator = iterator.call(null, accumulator, vals[i], isArr ? i : objKeys[i]);\n    }\n    return accumulator;\n}\nexports.reduce = reduce;\nfunction compact(arr) {\n    return reject(arr, function (item) { return item === null || item === undefined; });\n}\nexports.compact = compact;\nfunction uniq(arr, identity) {\n    if (identity === void 0) { identity = function (item) { return item; }; }\n    var identities = [];\n    return reduce(arr, function (result, currItem) {\n        var currIdentity = identity(currItem);\n        if (contains(identities, currIdentity)) {\n            return result;\n        }\n        else {\n            identities.push(currIdentity);\n            return result.concat(currItem);\n        }\n    }, []);\n}\nexports.uniq = uniq;\nfunction partial(func) {\n    var restArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        restArgs[_i - 1] = arguments[_i];\n    }\n    var firstArg = [null];\n    var allArgs = firstArg.concat(restArgs);\n    return Function.bind.apply(func, allArgs);\n}\nexports.partial = partial;\nfunction isArray(obj) {\n    return Array.isArray(obj);\n}\nexports.isArray = isArray;\nfunction isRegExp(obj) {\n    return obj instanceof RegExp;\n}\nexports.isRegExp = isRegExp;\nfunction isObject(obj) {\n    return obj instanceof Object;\n}\nexports.isObject = isObject;\nfunction every(arr, predicate) {\n    for (var i = 0; i < arr.length; i++) {\n        if (!predicate(arr[i], i)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.every = every;\nfunction difference(arr, values) {\n    return reject(arr, function (item) { return contains(values, item); });\n}\nexports.difference = difference;\nfunction some(arr, predicate) {\n    for (var i = 0; i < arr.length; i++) {\n        if (predicate(arr[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.some = some;\nfunction indexOf(arr, value) {\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i] === value) {\n            return i;\n        }\n    }\n    return -1;\n}\nexports.indexOf = indexOf;\nfunction sortBy(arr, orderFunc) {\n    var result = cloneArr(arr);\n    result.sort(function (a, b) { return orderFunc(a) - orderFunc(b); });\n    return result;\n}\nexports.sortBy = sortBy;\nfunction zipObject(keys, values) {\n    if (keys.length !== values.length) {\n        throw Error(\"can't zipObject with different number of keys and values!\");\n    }\n    var result = {};\n    for (var i = 0; i < keys.length; i++) {\n        result[keys[i]] = values[i];\n    }\n    return result;\n}\nexports.zipObject = zipObject;\n/**\n * mutates! (and returns) target\n */\nfunction assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < sources.length; i++) {\n        var curSource = sources[i];\n        var currSourceKeys = keys(curSource);\n        for (var j = 0; j < currSourceKeys.length; j++) {\n            var currKey = currSourceKeys[j];\n            target[currKey] = curSource[currKey];\n        }\n    }\n    return target;\n}\nexports.assign = assign;\n/**\n * mutates! (and returns) target\n */\nfunction assignNoOverwrite(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < sources.length; i++) {\n        var curSource = sources[i];\n        var currSourceKeys = keys(curSource);\n        for (var j = 0; j < currSourceKeys.length; j++) {\n            var currKey = currSourceKeys[j];\n            if (!has(target, currKey)) {\n                target[currKey] = curSource[currKey];\n            }\n        }\n    }\n    return target;\n}\nexports.assignNoOverwrite = assignNoOverwrite;\nfunction defaults() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return assignNoOverwrite.apply(null, [{}].concat(sources));\n}\nexports.defaults = defaults;\nfunction groupBy(arr, groupKeyFunc) {\n    var result = {};\n    forEach(arr, function (item) {\n        var currGroupKey = groupKeyFunc(item);\n        var currGroupArr = result[currGroupKey];\n        if (currGroupArr) {\n            currGroupArr.push(item);\n        }\n        else {\n            result[currGroupKey] = [item];\n        }\n    });\n    return result;\n}\nexports.groupBy = groupBy;\n/**\n * Merge obj2 into obj1.\n * Will overwrite existing properties with the same name\n */\nfunction merge(obj1, obj2) {\n    var result = cloneObj(obj1);\n    var keys2 = keys(obj2);\n    for (var i = 0; i < keys2.length; i++) {\n        var key = keys2[i];\n        var value = obj2[key];\n        result[key] = value;\n    }\n    return result;\n}\nexports.merge = merge;\nfunction NOOP() { }\nexports.NOOP = NOOP;\nfunction IDENTITY(item) {\n    return item;\n}\nexports.IDENTITY = IDENTITY;\n/**\n * Will return a new packed array with same values.\n */\nfunction packArray(holeyArr) {\n    var result = [];\n    for (var i = 0; i < holeyArr.length; i++) {\n        var orgValue = holeyArr[i];\n        result.push(orgValue !== undefined ? orgValue : undefined);\n    }\n    return result;\n}\nexports.packArray = packArray;\nfunction PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(\"Error: \" + msg);\n    }\n}\nexports.PRINT_ERROR = PRINT_ERROR;\nfunction PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(\"Warning: \" + msg);\n    }\n}\nexports.PRINT_WARNING = PRINT_WARNING;\nfunction isES2015MapSupported() {\n    return typeof Map === \"function\";\n}\nexports.isES2015MapSupported = isES2015MapSupported;\nfunction applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach(function (baseCtor) {\n        var baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach(function (propName) {\n            if (propName === \"constructor\") {\n                return;\n            }\n            var basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\nexports.applyMixins = applyMixins;\n// base on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nfunction toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    var fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    eval(toBecomeFast);\n}\nexports.toFastProperties = toFastProperties;\nfunction peek(arr) {\n    return arr[arr.length - 1];\n}\nexports.peek = peek;\n/* istanbul ignore next - for performance tracing*/\nfunction timer(func) {\n    var start = new Date().getTime();\n    var val = func();\n    var end = new Date().getTime();\n    var total = end - start;\n    return { time: total, value: val };\n}\nexports.timer = timer;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\n// needs a separate module as this is required inside chevrotain productive code\n// and also in the entry point for webpack(api.ts).\n// A separate file avoids cyclic dependencies and webpack errors.\nexports.VERSION = \"7.1.0\";\n//# sourceMappingURL=version.js.map","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass Deprecation extends Error {\n  constructor(message) {\n    super(message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = 'Deprecation';\n  }\n\n}\n\nexports.Deprecation = Deprecation;\n","var t=require(\"chevrotain\"),o=require(\"yaml-ast-parser\"),e=require(\"js-yaml\");function r(t){if(t&&t.__esModule)return t;var o=Object.create(null);return t&&Object.keys(t).forEach(function(e){if(\"default\"!==e){var r=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(o,e,r.get?r:{enumerable:!0,get:function(){return t[e]}})}}),o.default=t,o}var s=r(t);const i=/\\$\\{\\{(.*?)\\}\\}/gm;function l(t){return(null==t?void 0:t.match)&&null!==t.match(i)}function a(t,o){for(const e of Array.from(t.matchAll(i)))o(e[0],e.index,e.length)}const u={toJSON:\"Returns a pretty-print JSON representation of `value`. You can use this function to debug the information provided in contexts.\"},c={},p=s.createToken({name:\"True\",pattern:/true/}),h=s.createToken({name:\"False\",pattern:/false/}),d=s.createToken({name:\"Null\",pattern:/null/}),n=s.createToken({name:\"LParens\",pattern:/\\(/}),m=s.createToken({name:\"RParens\",pattern:/\\)/}),g=s.createToken({name:\"LSquare\",pattern:/\\[/}),b=s.createToken({name:\"RSquare\",pattern:/]/}),_=s.createToken({name:\"Comma\",pattern:/,/}),C=s.createToken({name:\"Dot\",pattern:/\\./}),v=s.createToken({name:\"ContextMemberOrKeyword\",pattern:s.Lexer.NA}),f=s.createToken({name:\"ContextMember\",pattern:/[a-zA-Z_][a-zA-Z0-9-_]*/,categories:v}),W=s.createToken({name:\"Context\",pattern:s.Lexer.NA,longer_alt:f}),H=[\"github\",\"env\",\"job\",\"steps\",\"runner\",\"secrets\",\"strategy\",\"matrix\",\"needs\"].map(t=>s.createToken({name:`Context${t}`,pattern:new RegExp(`${t}`),categories:[W,v],longer_alt:f})),w=s.createToken({name:\"Operator\",pattern:s.Lexer.NA,longer_alt:f}),y=s.createToken({name:\"And\",pattern:/&&/,categories:w}),k=s.createToken({name:\"Or\",pattern:/\\|\\|/,categories:w}),M=s.createToken({name:\"Eq\",pattern:/==/,categories:w}),D=s.createToken({name:\"NotEq\",pattern:/!=/,categories:w}),O=s.createToken({name:\"LT\",pattern:/</,categories:w}),z=s.createToken({name:\"LTE\",pattern:/<=/,categories:w}),x=s.createToken({name:\"GT\",pattern:/>/,categories:w}),T=s.createToken({name:\"GTE\",pattern:/>=/,categories:w}),j=s.createToken({name:\"Not\",pattern:/!/,categories:w}),N=s.createToken({name:\"Function\",pattern:s.Lexer.NA,longer_alt:f}),E=s.createToken({name:\"contains\",pattern:/contains/,categories:[N,v],longer_alt:f}),U=s.createToken({name:\"startsWith\",pattern:/startsWith/,categories:[N,v],longer_alt:f}),Z=s.createToken({name:\"endsWith\",pattern:/endsWith/,categories:[N,v],longer_alt:f}),I=s.createToken({name:\"join\",pattern:/join/,categories:[N,v],longer_alt:f}),A=s.createToken({name:\"toJSON\",pattern:/toJSON/,categories:[N,v],longer_alt:f}),R=s.createToken({name:\"fromJSON\",pattern:/fromJSON/,categories:[N,v],longer_alt:f}),P=s.createToken({name:\"hashFiles\",pattern:/hashFiles/,categories:[N,v],longer_alt:f}),X=s.createToken({name:\"success\",pattern:/success/,categories:[N,v],longer_alt:f}),V=s.createToken({name:\"always\",pattern:/always/,categories:[N,v],longer_alt:f}),Y=s.createToken({name:\"failure\",pattern:/failure/,categories:[N,v],longer_alt:f}),S=s.createToken({name:\"format\",pattern:/format/,categories:[N,v],longer_alt:f}),Q=s.createToken({name:\"cancelled\",pattern:/cancelled/,categories:[N,v],longer_alt:f}),G=[E,U,Z,I,A,R,P,X,V,Y,S,Q],q=s.createToken({name:\"StringLiteral\",pattern:/'((?:''|[^'])*)'/}),L=s.createToken({name:\"NumberLiteral\",pattern:/-?(0|[1-9]\\d*)(\\.\\d+)?([eE][+-]?\\d+)?/}),F=[s.createToken({name:\"WhiteSpace\",pattern:/[ \\t\\n\\r]+/,group:s.Lexer.SKIPPED}),L,N,E,U,S,Z,I,A,R,P,X,V,Q,Y,q,n,m,g,b,_,w,y,k,M,D,z,O,T,x,j,p,h,d,W,...H,C,v,f],J=new s.Lexer(F);class B extends s.CstParser{constructor(){super(F),this.expression=this.RULE(\"expression\",()=>{this.SUBRULE1(this.subExpression,{LABEL:\"lhs\"}),this.MANY(()=>{this.CONSUME(w),this.SUBRULE2(this.subExpression,{LABEL:\"rhs\"})})}),this.subExpression=this.RULE(\"subExpression\",()=>{this.OPTION(()=>this.CONSUME(j)),this.OR([{ALT:()=>this.SUBRULE(this.logicalGrouping)},{ALT:()=>this.SUBRULE(this.functionCall)},{ALT:()=>this.SUBRULE(this.contextAccess)},{ALT:()=>this.SUBRULE(this.value)},{ALT:()=>this.SUBRULE(this.array)}])}),this.contextAccess=this.RULE(\"contextAccess\",()=>{this.OR(H.map(t=>({ALT:()=>this.CONSUME(t)}))),this.MANY(()=>{this.SUBRULE(this.contextMember)})}),this.contextMember=this.RULE(\"contextMember\",()=>{this.OR([{ALT:()=>this.SUBRULE(this.contextDotMember)},{ALT:()=>this.SUBRULE(this.contextBoxMember)}])}),this.contextDotMember=this.RULE(\"contextDotMember\",()=>{this.CONSUME(C),this.CONSUME(v)}),this.contextBoxMember=this.RULE(\"contextBoxMember\",()=>{this.CONSUME(g),this.SUBRULE(this.expression),this.CONSUME(b)}),this.array=this.RULE(\"array\",()=>{this.CONSUME(g),this.MANY_SEP({SEP:_,DEF:()=>{this.SUBRULE(this.subExpression)}}),this.CONSUME(b)}),this.logicalGrouping=this.RULE(\"logicalGrouping\",()=>{this.CONSUME(n),this.SUBRULE(this.expression),this.CONSUME(m)}),this.functionCall=this.RULE(\"functionCall\",()=>{this.OR1([{ALT:()=>{this.CONSUME(R),this.SUBRULE1(this.functionParameters),this.OPTION(()=>this.SUBRULE(this.contextMember))}},{ALT:()=>{this.OR2(G.filter(t=>t!==R).map(t=>({ALT:()=>this.CONSUME(t)}))),this.SUBRULE2(this.functionParameters)}}])}),this.functionParameters=this.RULE(\"functionParameters\",()=>{this.CONSUME(n),this.MANY_SEP({SEP:_,DEF:()=>{this.SUBRULE(this.expression)}}),this.CONSUME(m)}),this.value=this.RULE(\"value\",()=>{this.OR([{ALT:()=>this.CONSUME(q)},{ALT:()=>this.CONSUME(L)},{ALT:()=>this.SUBRULE(this.booleanValue)},{ALT:()=>this.CONSUME(d)}])}),this.booleanValue=this.RULE(\"booleanValue\",()=>{this.OR([{ALT:()=>this.CONSUME(p)},{ALT:()=>this.CONSUME(h)}])}),this.performSelfAnalysis()}}const $=new B,K=$.getBaseCstVisitorConstructor();function tt(t,o,e){for(const r of t)if(\"$\"!=r){if(!o)break;e&&e(o),o=\"string\"==typeof r||\"number\"==typeof r?o[r]:o[r[0]][r[1]]}return o}class ot extends K{constructor(){super(),this.validateVisitor()}expression(o,e){let r=this.visit(o.lhs,e);return o.rhs&&o.rhs.forEach((s,i)=>{let l=this.visit(s,e);const a=o.Operator[i];switch(typeof r!=typeof l&&(r=this._coerceValue(r),l=this._coerceValue(l)),!0){case t.tokenMatcher(a,M):r=r==l;break;case t.tokenMatcher(a,D):r=r!=l;break;case t.tokenMatcher(a,y):r=r&&l;break;case t.tokenMatcher(a,k):r=r||l;break;case t.tokenMatcher(a,O):r=r<l;break;case t.tokenMatcher(a,z):r=r<=l;break;case t.tokenMatcher(a,x):r=r>l;break;case t.tokenMatcher(a,T):r=r>=l}}),r}subExpression(t,o){let e;switch(!0){case!!t.value:e=this.visit(t.value,o);break;case!!t.logicalGrouping:e=this.visit(t.logicalGrouping,o);break;case!!t.array:e=this.visit(t.array,o);break;case!!t.functionCall:e=this.visit(t.functionCall,o);break;case!!t.contextAccess:e=this.visit(t.contextAccess,o)}return t.Not&&(e=!e),e}contextAccess(t,o){const e=H.map(t=>t.PATTERN.source).find(o=>!!t[`Context${o}`]);if(!e)throw new Error(\"Unknown context: \"+e);const r=[];if(t.contextMember)for(const e of t.contextMember)this.visit(e,{path:r,context:o});return this.getContextValue(e,r,o)}getContextValue(t,o,e){return tt(o,e.contextProvider.get(t))||\"\"}contextMember(t,{path:o,context:e}){switch(!0){case!!t.contextDotMember:return this.visit(t.contextDotMember,o);case!!t.contextBoxMember:return this.visit(t.contextBoxMember,{path:o,context:e})}}contextDotMember(t,o){o.push(t.ContextMemberOrKeyword[0].image)}contextBoxMember(t,{path:o,context:e}){const r=this.visit(t.expression,e);o.push(this._coerceValue(r,!0))}logicalGrouping(t){return this.visit(t.expression)}array(t){const o=[];return t.subExpression&&o.push(...t.subExpression.map(t=>this.visit(t))),o}functionCall(t,o){const e=this.visit(t.functionParameters,o);switch(!0){case!!t.contains:return r=e[0],s=e[1],Array.isArray(r)?-1!==r.indexOf(s):-1!==(\"\"+r).toLocaleLowerCase().indexOf((\"\"+s).toLocaleLowerCase());case!!t.startsWith:return function(t,o){return t.startsWith(o)}(e[0],e[1]);case!!t.endsWith:return function(t,o){return t.endsWith(o)}(e[0],e[1]);case!!t.join:return e[0].join(e[1]);case!!t.toJSON:return JSON.stringify(e[0]);case!!t.fromJSON:{const r=function(t){if(\"string\"==typeof t)return JSON.parse(t);if(t===c)return c;throw new Error(\"Unknown input for `fromJSON`\")}(e[0]);if(t.contextMember){const e=[];for(const r of t.contextMember)this.visit(r,{path:e,context:o});return tt(e,r)}return r}case!!t.hashFiles:return`sha-256-hash-for-${e.join()}`;case!!t.format:return function(t){let o=0;return(t=t.replace(/(\\{\\d+\\})/gm,()=>[].slice.call(arguments,1)[o++])).replace(\"{{\",\"{\").replace(\"}}\",\"}\")}(e[0],...e.slice(1));case!!t.always:return!0;case!!t.failure:case!!t.success:case!!t.cancelled:return c}var r,s}functionParameters(t,o){return(t.expression||[]).map(t=>this.visit(t,o))}value(t){switch(!0){case!!t.NumberLiteral:return parseFloat(t.NumberLiteral[0].image);case!!t.booleanValue:return this.visit(t.booleanValue);case!!t.Null:return null;case!!t.StringLiteral:return this._removeQuotes(t.StringLiteral[0].image)}}booleanValue(t){switch(!0){case!!t.True:return!0;default:case!!t.False:return!1}}_coerceValue(t,o=!1){return\"number\"==typeof t?t:\"string\"==typeof t?o?t:\"\"===t?0:+t:null===t?0:!0===t?1:!1===t?0:NaN}_removeQuotes(t){return\"\"+t.substring(1,t.length-1).replace(/''/g,\"'\")}}const et=new ot;class rt extends Error{constructor(t,o){super(`${t.map(t=>t.message).join()} ${o.map(t=>t.message).join()}`),this.lexErrors=void 0,this.parseErrors=void 0,this.lexErrors=t,this.parseErrors=o}}function st(t,o){t=t.replace(i,(t,o)=>o);const e=J.tokenize(t);$.input=e.tokens;const r=$.expression(),s=et.visit(r,{contextProvider:o});if(e.errors.length>0||$.errors.length>0)throw new rt(e.errors,$.errors);return s}function it(t,o){return t.replace(i,(t,e)=>st(e,o))}var lt,at;function ut(t,o){return t[0]<=o&&o<=t[1]}function ct(t,o){if(!ut([t.startPosition,t.endPosition],o))return null;const e=t;switch(e.kind){case lt.MAP:for(const t of e.mappings)if(ut([t.startPosition,t.endPosition],o))return ct(t,o);break;case lt.MAPPING:{const r=t.value&&ct(e.value,o);if(r)return r;if(t.key&&(ut([e.key.startPosition,e.key.endPosition],o)||\"dummy\"===t.key.value))return t.parent;break}case lt.SEQ:for(const t of e.items){if(\"object\"!=typeof t)return e;if(null===t)return e;if(ut([t.startPosition,t.endPosition],o))return ct(t,o)}break;case lt.SCALAR:return e.value&&\"dummy\"===e.value?e.parent:e;default:throw new Error(\"unknown\")}return t}function pt(t){const o=[];let e=t;for(;e;)o.unshift(e),e=e.parent;const r=[\"$\"];for(;o.length;){const t=o.shift();switch(null==t?void 0:t.kind){case lt.MAPPING:t.key&&r.push(t.key.value),t.value&&o.unshift(t.value);break;case lt.SEQ:if(o.length&&t.items){const e=t.items.indexOf(o[0]);-1!==e&&(r[r.length-1]=[r[r.length-1],e])}}}return r}function ht(t){if(-1!==t.indexOf(\"@\")){const[o,e]=t.split(\"@\"),[r,s,i,l]=o.match(/([^\\/]*)\\/([^\\/]*)\\/?(.*)?/);return{type:\"remote\",ref:e,owner:s,repository:i,subdirectory:l}}return-1!==t.indexOf(\"docker://\")?{type:\"docker\"}:{type:\"local\"}}function dt(t){var o,e;(null===(o=t.strategy)||void 0===o?void 0:o.matrix)&&(t.strategy.matrix=function(t){if(\"string\"==typeof t)return t;const o=Object.keys(t).filter(t=>\"include\"!==t&&\"exclude\"!==t),e={};for(const r of o)e[r]=t[r];let r=function(t){let o=[];for(const e of Object.keys(t))if(0===o.length)o.push(...t[e].map(t=>({[e]:t})));else{let r=[];for(const s of t[e])for(const t of o)r.push({...t,[e]:s});o=r}return o}(e);if(t.exclude)for(const o of t.exclude)r=r.filter(t=>!nt(t,o));if(t.include)for(const o of t.include){const t=r.findIndex(t=>{return e=t,r=o,Object.keys(e).every(t=>e[t]===r[t]);var e,r});-1!==t?r.splice(t,1,o):r.push(o)}return r}(t.strategy.matrix)),Array.isArray(t.steps)||(t.steps=[]),t.steps=t.steps.filter(t=>\"object\"==typeof t);for(const o of t.steps)o&&\"uses\"in o&&\"string\"==typeof o.uses&&(o.uses=ht(o.uses));t.needs=t.needs&&(e=t.needs,Array.isArray(e)?e:[e]),t[\"timeout-minutes\"]=t[\"timeout-minutes\"]||360}function nt(t,o){const e=Object.keys(t);return Object.keys(o).length===e.length&&e.every(e=>t[e]===o[e])}!function(t){t[t.SCALAR=0]=\"SCALAR\",t[t.MAPPING=1]=\"MAPPING\",t[t.MAP=2]=\"MAP\",t[t.SEQ=3]=\"SEQ\",t[t.ANCHOR_REF=4]=\"ANCHOR_REF\",t[t.INCLUDE_REF=5]=\"INCLUDE_REF\"}(lt||(lt={})),function(t){t[t.Error=0]=\"Error\",t[t.Warning=1]=\"Warning\",t[t.Information=2]=\"Information\"}(at||(at={}));const mt={};class gt extends ot{constructor(t,o,e){super(),this.contextProvider=void 0,this.errors=void 0,this.pos=void 0,this.contextProvider=t,this.errors=o,this.pos=e}getContextValue(t,o){const e=this.contextProvider.get(t),r=e&&function(t,o){let e=!1;const r=tt(t,o,t=>{t===mt&&(e=!0)});return e?c:r}(o,e);return(!e||r!==c&&void 0===r)&&this.errors.push({message:`Unknown context access: '${t}.${o.join(\".\")}'`,pos:this.pos}),r}}var bt;function _t(t,o){try{var e=t()}catch(t){return o(t)}return e&&e.then?e.then(void 0,o):e}!function(t){t[t.None=0]=\"None\",t[t.Required=1]=\"Required\"}(bt||(bt={}));const Ct=\"undefined\"!=typeof Symbol?Symbol.iterator||(Symbol.iterator=Symbol(\"Symbol.iterator\")):\"@@iterator\";function vt(t,o,e){if(!t.s){if(e instanceof ft){if(!e.s)return void(e.o=vt.bind(null,t,o));1&o&&(o=e.s),e=e.v}if(e&&e.then)return void e.then(vt.bind(null,t,o),vt.bind(null,t,2));t.s=o,t.v=e;const r=t.o;r&&r(t)}}const ft=function(){function t(){}return t.prototype.then=function(o,e){const r=new t,s=this.s;if(s){const t=1&s?o:e;if(t){try{vt(r,1,t(this.v))}catch(t){vt(r,2,t)}return r}return this}return this.o=function(t){try{const s=t.v;1&t.s?vt(r,1,o?o(s):s):e?vt(r,1,e(s)):vt(r,2,s)}catch(t){vt(r,2,t)}},r},t}();function Wt(t){return t instanceof ft&&1&t.s}function Ht(t,o,e){if(\"function\"==typeof t[Ct]){var r,s,i,l=t[Ct]();if(function t(a){try{for(;!((r=l.next()).done||e&&e());)if((a=o(r.value))&&a.then){if(!Wt(a))return void a.then(t,i||(i=vt.bind(null,s=new ft,2)));a=a.v}s?vt(s,1,a):s=a}catch(t){vt(s||(s=new ft),2,t)}}(),l.return){var a=function(t){try{r.done||l.return()}catch(t){}return t};if(s&&s.then)return s.then(a,function(t){throw a(t)});a()}return s}if(!(\"length\"in t))throw new TypeError(\"Object is not iterable\");for(var u=[],c=0;c<t.length;c++)u.push(t[c]);return function(t,o,e){var r,s,i=-1;return function l(a){try{for(;++i<t.length&&(!e||!e());)if((a=o(i))&&a.then){if(!Wt(a))return void a.then(l,s||(s=vt.bind(null,r=new ft,2)));a=a.v}r?vt(r,1,a):r=a}catch(t){vt(r||(r=new ft),2,t)}}(),r}(u,function(t){return o(u[t])},e)}function wt(t,o){var e,r=-1;t:{for(var s=0;s<o.length;s++){var i=o[s][0];if(i){var l=i();if(l&&l.then)break t;if(l===t){r=s;break}}else r=s}if(-1!==r){do{for(var a=o[r][1];!a;)r++,a=o[r][1];var u=a();if(u&&u.then){e=!0;break t}var c=o[r][2];r++}while(c&&!c());return u}}const p=new ft,h=vt.bind(null,p,2);return(e?u.then(d):l.then(function e(l){for(;;){if(l===t){r=s;break}if(++s===o.length){if(-1!==r)break;return void vt(p,1,u)}if(i=o[s][0]){if((l=i())&&l.then)return void l.then(e).then(void 0,h)}else r=s}do{for(var a=o[r][1];!a;)r++,a=o[r][1];var u=a();if(u&&u.then)return void u.then(d).then(void 0,h);var c=o[r][2];r++}while(c&&!c());vt(p,1,u)})).then(void 0,h),p;function d(t){for(;;){var e=o[r][2];if(!e||e())break;r++;for(var s=o[r][1];!s;)r++,s=o[r][1];if((t=s())&&t.then)return void t.then(d).then(void 0,h)}vt(p,1,t)}}function yt(t){switch(t){case o.Kind.SCALAR:return\"value\";case o.Kind.MAPPING:return\"mapping\";case o.Kind.MAP:return\"map\";case o.Kind.SEQ:return\"sequence\";default:throw new Error(\"Unexpected node kind\")}}const kt=function(t,e,r,s,u,c){try{let h,d;function p(){d=1}if(!t)return Promise.resolve(!0);const n=t,m=(t,o)=>{c.push({pos:[n.startPosition,n.endPosition],message:`Expected ${t}, found ${yt(o)}`})},g=wt(e.type,[[function(){return\"value\"},function(){{function p(){function t(){d=1}const o=function(){if(e.allowedValues&&!e.allowedValues.find(t=>t.value===g))c.push({pos:[h.startPosition,h.endPosition],message:`'${g}' is not in the list of allowed values`});else{const t=function(){if(e.customValueProvider){function t(){var t;o&&!(null===(t=o)||void 0===t?void 0:t.find(t=>t.value===g))&&c.push({pos:[h.startPosition,h.endPosition],message:`'${g}' is not in the list of allowed values`})}let o;const r=_t(function(){return Promise.resolve(e.customValueProvider(e,s,pt(n))).then(function(t){o=t})},function(t){c.push({kind:at.Warning,pos:[h.startPosition,h.endPosition],message:`Could not retrieve values: ${null==t?void 0:t.message}`})});return r&&r.then?r.then(t):t()}}();if(t&&t.then)return t.then(function(){})}}();return o&&o.then?o.then(t):t()}n.kind!==o.Kind.SCALAR&&m(\"value\",n.kind);const h=t;r.set(h,e);let g=h.value;const b=function(){if(e.isExpression||l(g)){const t=pt(n);return Promise.resolve(u.get(s,t)).then(function(t){!function(t,o,e,r){a(t,(t,s)=>{!function(t,o,e,r){const s=[o,o+t.length];t=function(t){return t.replace(i,(t,o)=>o)}(t);const l=J.tokenize(t);if($.input=l.tokens,l.errors.length>0)return void e.push({message:\"Invalid expression\",pos:s});const a=$.expression();if($.errors.length>0)e.push({message:\"Invalid expression\",pos:s});else try{new gt(r,e,s).visit(a,{})}catch(t){console.error(t),e.push({message:\"Error evaluating expression\",pos:s})}}(t,o+s,e,r)})}(h.rawValue,n.startPosition,c,t),e.supportsExpression&&(g=it(h.rawValue,t))})}}();return b&&b.then?b.then(p):p()}}],[function(){return\"map\"},function(){{function i(){function t(){if(e.required||a){const t=[...e.required||[],...(a||[]).filter(t=>t.validation===bt.Required).map(t=>t.value)];for(const e of t.filter(t=>!o.has(t))){let t=[l.startPosition,l.endPosition];l.parent&&l.parent.key&&(t=[l.parent.key.startPosition,l.parent.key.endPosition]),c.push({pos:t,message:`Missing required key '${e}'`})}}if(!e.allowUnknownKeys&&(e.keys||a)){const t=new Set([...e.keys&&Object.keys(e.keys)||[],...(a||[]).map(t=>t.value)]),r=Array.from(o).filter(([o])=>!t.has(o));for(const[t,o]of r)c.push({pos:[o.key.startPosition,o.key.endPosition],message:`Key '${t}' is not allowed`})}d=1}const o=new Map,i=Ht(l.mappings,function(t){const i=t.key.value;o.set(i,t);const l=e.keys&&e.keys[i],a=function(){if(l)return r.set(t,l),Promise.resolve(kt(t.value,l,r,s,u,c)).then(function(){});{const o=function(){if(e.itemDesc)return Promise.resolve(kt(t.value,e.itemDesc,r,s,u,c)).then(function(){})}();if(o&&o.then)return o.then(function(){})}}();if(a&&a.then)return a.then(function(){})});return i&&i.then?i.then(t):t()}if(n.kind!==o.Kind.MAP){if(n.kind===o.Kind.SCALAR)return c.push({pos:[n.startPosition,n.endPosition],message:`Unknown key '${n.value}'`}),h=1,!1;m(\"map\",n.kind)}const l=t;let a;r.set(t,e);const p=function(){if(e.customValueProvider){const t=_t(function(){return Promise.resolve(e.customValueProvider(e,s,pt(n))).then(function(t){a=t})},function(t){c.push({kind:at.Warning,pos:[l.startPosition,l.endPosition],message:`Could not retrieve values: ${null==t?void 0:t.message}`})});if(t&&t.then)return t.then(function(){})}}();return p&&p.then?p.then(i):i()}}],[function(){return\"sequence\"},function(){{function i(){d=1}const l=function(){if(n.kind!==o.Kind.SEQ)m(\"sequence\",n.kind);else{r.set(t,e);const o=function(){if(e.itemDesc){const t=Ht(n.items,function(t){return r.set(t,e.itemDesc),Promise.resolve(kt(t,e.itemDesc,r,s,u,c)).then(function(){})});if(t&&t.then)return t.then(function(){})}}();if(o&&o.then)return o.then(function(){})}}();return l&&l.then?l.then(i):i()}}],[function(){return\"oneOf\"},function(){{function i(){l||c.push({pos:[t.startPosition,t.endPosition],message:`Did not expect '${yt(n.kind)}'`})}let l=!1;const a=Ht(e.oneOf,function(e){const i=wt(e.type,[[function(){return\"value\"},function(){const i=function(){if(t.kind===o.Kind.SCALAR)return Promise.resolve(kt(t,e,r,s,u,c)).then(function(){l=!0})}();return i&&i.then?i.then(p):p()}],[function(){return\"map\"},function(){function i(){d=1}const a=function(){if(t.kind===o.Kind.MAP)return Promise.resolve(kt(t,e,r,s,u,c)).then(function(){l=!0})}();return a&&a.then?a.then(i):i()}],[function(){return\"sequence\"},function(){function i(){d=1}const a=function(){if(t.kind===o.Kind.SEQ)return Promise.resolve(kt(t,e,r,s,u,c)).then(function(){l=!0})}();return a&&a.then?a.then(i):i()}]]);if(i&&i.then)return i.then(function(){})});return a&&a.then?a.then(i):i()}},function(){return d||d}]]);return Promise.resolve(g&&g.then?g.then(function(t){return!h||t}):!h||g)}catch(t){return Promise.reject(t)}},Mt=function(t,r,s,i){try{const l=[];let a;try{a=e.load(r)}catch{}\"object\"==typeof a?function(t,o){o.name=o.name||t,\"string\"==typeof o.on?o.on={[o.on]:{}}:Array.isArray(o.on)&&(o.on=o.on.reduce((t,o)=>(t[o]={},t),{})),o.jobs||(o.jobs={});for(const t of Object.keys(o.jobs).filter(t=>\"dummy\"!==t))dt(o.jobs[t])}(t,a):a=void 0;const u=o.safeLoad(r);return u?u.errors.length>0&&l.push(...u.errors.map(t=>({kind:t.isWarning?at.Warning:at.Error,message:t.reason,pos:[t.mark.position,t.mark.position+1]}))):l.push({message:\"Could not parse input\",pos:[0,(null==r?void 0:r.length)||0],kind:at.Error}),Promise.resolve(function(t,o,e,r){try{const s=[],i=new Map;return Promise.resolve(kt(t,o,i,e,r,s)).then(function(){return{errors:s.map(t=>({...t,kind:t.kind||at.Error})),nodeToDesc:i}})}catch(t){return Promise.reject(t)}}(u,s,a,i)).then(function(t){return l.push(...t.errors),{workflow:a,workflowST:u,nodeToDesc:t.nodeToDesc,diagnostics:l}})}catch(t){return Promise.reject(t)}};function Dt(t,o){try{var e=t()}catch(t){return o(t)}return e&&e.then?e.then(void 0,o):e}const Ot=\"undefined\"!=typeof Symbol?Symbol.iterator||(Symbol.iterator=Symbol(\"Symbol.iterator\")):\"@@iterator\";function zt(t,o,e){if(!t.s){if(e instanceof xt){if(!e.s)return void(e.o=zt.bind(null,t,o));1&o&&(o=e.s),e=e.v}if(e&&e.then)return void e.then(zt.bind(null,t,o),zt.bind(null,t,2));t.s=o,t.v=e;const r=t.o;r&&r(t)}}const xt=function(){function t(){}return t.prototype.then=function(o,e){const r=new t,s=this.s;if(s){const t=1&s?o:e;if(t){try{zt(r,1,t(this.v))}catch(t){zt(r,2,t)}return r}return this}return this.o=function(t){try{const s=t.v;1&t.s?zt(r,1,o?o(s):s):e?zt(r,1,e(s)):zt(r,2,s)}catch(t){zt(r,2,t)}},r},t}();function Tt(t){return t instanceof xt&&1&t.s}function jt(t,o,e){return(o=o.filter(t=>!e||!e.has(t.value)).filter(o=>!t||o.value.startsWith(t))).sort((t,o)=>t.value.localeCompare(o.value)),o}const Nt=function(o,e,r,s,l,c=!1){try{const p=`${o.value}`,h=e-o.startPosition;let d=p,n=h;if(!c){let t=!1;if(a(p,(o,e,r)=>{e<=h&&h<=e+r&&(t=!0,d=o,n=h-e)}),!t){const t=p.indexOf(\"${{\");if(-1===t)return Promise.resolve([]);d=p.substr(t+3),n=h-t-3}}return d=d.replace(i,\"$1\"),Promise.resolve(l.get(s,r)).then(function(o){return function(o,e,r){try{o=o.substring(0,e+1);const s=J.tokenize(o);if(s.errors.length>0)return Promise.resolve([]);let i=s.tokens;if(!i||0===i.length)return Promise.resolve([]);const l=i[i.length-1];if(t.tokenMatcher(l,f)||t.tokenMatcher(l,C)&&(t.tokenMatcher(i[i.length-2],W)||t.tokenMatcher(i[i.length-2],f))){const o=t.tokenMatcher(l,C)?\"\":l.image;let e,s=[];for(let o=i.length-1;o>=0;--o)if(t.tokenMatcher(i[o],C));else if(t.tokenMatcher(i[o],f))s.push(i[o].image);else{if(!t.tokenMatcher(i[o],W))break;e=i[o].image}if(s=s.reverse(),e){const t=r.get(e),i=tt(s[s.length-1]===o?s.slice(0,s.length-1):s,t),l=Object.keys(i).map(t=>({value:t}));return l.sort((t,o)=>t.value.localeCompare(o.value)),Promise.resolve(l.filter(t=>!o||t.value.startsWith(o)&&t.value!==o))}}if(void 0!==l){i=i.slice(0,-1);const t=$.computeContentAssist(\"expression\",i),o=l.image;return Promise.resolve(t.filter(t=>{var o,e;return(null===(o=N.categoryMatchesMap)||void 0===o?void 0:o[t.nextTokenType.tokenTypeIdx])||(null===(e=W.categoryMatchesMap)||void 0===e?void 0:e[t.nextTokenType.tokenTypeIdx])}).map(t=>t.nextTokenType.PATTERN.source).filter(t=>!o||t.startsWith(o)).map(t=>{return{value:t,description:(o=t,u[o])};var o}))}return Promise.resolve([])}catch(t){return Promise.reject(t)}}(d,n,o)})}catch(t){return Promise.reject(t)}},Et=function(t,o,e,r,s,i,l){try{let u,c;function a(t){if(u)return t;throw new Error(`Unknown node desc ${o.type}`)}if(!t)throw console.error(o),new Error(\"no node\");const p=function(t,o){var e,r=-1;t:{for(var s=0;s<o.length;s++){var i=o[s][0];if(i){var l=i();if(l&&l.then)break t;if(l===t){r=s;break}}else r=s}if(-1!==r){do{for(var a=o[r][1];!a;)r++,a=o[r][1];var u=a();if(u&&u.then){e=!0;break t}var c=o[r][2];r++}while(c&&!c());return u}}const p=new xt,h=zt.bind(null,p,2);return(e?u.then(d):l.then(function e(l){for(;;){if(l===t){r=s;break}if(++s===o.length){if(-1!==r)break;return void zt(p,1,u)}if(i=o[s][0]){if((l=i())&&l.then)return void l.then(e).then(void 0,h)}else r=s}do{for(var a=o[r][1];!a;)r++,a=o[r][1];var u=a();if(u&&u.then)return void u.then(d).then(void 0,h);var c=o[r][2];r++}while(c&&!c());zt(p,1,u)})).then(void 0,h),p;function d(t){for(;;){var e=o[r][2];if(!e||e())break;r++;for(var s=o[r][1];!s;)r++,s=o[r][1];if((t=s())&&t.then)return void t.then(d).then(void 0,h)}zt(p,1,t)}}(o.type,[[function(){return\"value\"},function(){{function e(t){if(u)return t;c=1}let r=t.value||\"\";r=\"dummy\"!==r?r:\"\";const a=t.parent;let p=[];a.kind===lt.SEQ?p=a.items:t.kind===lt.SEQ&&(p=t.items);const h=new Set(p.filter(t=>!!t&&t.kind===lt.SCALAR).map(t=>t.value)),d=function(){if(o.customValueProvider){function e(){return u=1,jt(r,s||[],new Set(h))}let s;const l=Dt(function(){return Promise.resolve(o.customValueProvider(o,i.workflow,pt(t))).then(function(t){s=t})},function(t){console.error(t)});return l&&l.then?l.then(e):e()}return o.allowedValues?(u=1,jt(r,o.allowedValues,h)):o.isExpression||function(t,o){return-1!==t.substring(0,o).indexOf(\"${{\")}(t.value,s-t.startPosition)?(u=1,Nt(t,s,pt(t),i.workflow,l,o.isExpression)):void 0}();return d&&d.then?d.then(e):e(d)}}],[function(){return\"sequence\"},function(){return o.itemDesc?(u=1,Et(t,o.itemDesc,e,r,s,i,l)):void(c=1)}],[function(){return\"map\"},function(){if(t.kind===lt.MAP){const t=ct(i.workflowST,s);if(t.kind===lt.MAPPING){const o=i.nodeToDesc.get(t.parent);if(\"map\"!==o.type)throw new Error(\"Could not find map node\");return u=1,Et(t,o.keys[t.key.value],e,r,s,i,l)}}return u=1,Ut(i,t,o,e,r)}],[function(){return\"oneOf\"},function(){{function a(){return u=1,p}const c=function(t,o,e){const r=new Set;switch(t.kind){case lt.SCALAR:r.add(\"value\");break;case lt.MAPPING:{const[t]=function(t,o,e=!0){let r=t;for(;r>0&&\"\\n\"!==o[r];)if(--r,\"\\n\"===o[r]){++r;break}const s=o.substring(r,t+1);return[e?s.trim():s,t-r]}(o,e);t.indexOf(\":\")>=0&&r.add(\"value\");break}case lt.SEQ:r.add(\"sequence\")}return r}(t,s,e),p=[],h=function(t,o,e){if(\"function\"==typeof t[Ot]){var r,s,i,l=t[Ot]();if(function t(e){try{for(;!(r=l.next()).done;)if((e=o(r.value))&&e.then){if(!Tt(e))return void e.then(t,i||(i=zt.bind(null,s=new xt,2)));e=e.v}s?zt(s,1,e):s=e}catch(t){zt(s||(s=new xt),2,t)}}(),l.return){var a=function(t){try{r.done||l.return()}catch(t){}return t};if(s&&s.then)return s.then(a,function(t){throw a(t)});a()}return s}if(!(\"length\"in t))throw new TypeError(\"Object is not iterable\");for(var u=[],c=0;c<t.length;c++)u.push(t[c]);return function(t,o,e){var r,s,i=-1;return function e(l){try{for(;++i<t.length;)if((l=o(i))&&l.then){if(!Tt(l))return void l.then(e,s||(s=zt.bind(null,r=new xt,2)));l=l.v}r?zt(r,1,l):r=l}catch(t){zt(r||(r=new xt),2,t)}}(),r}(u,function(t){return o(u[t])})}(o.oneOf.filter(t=>c.has(t.type)),function(o){return Promise.resolve(Et(t,o,e,r,s,i,l)).then(function(t){p.push(...t)})});return h&&h.then?h.then(a):a()}}]]);return Promise.resolve(p&&p.then?p.then(a):a(p))}catch(t){return Promise.reject(t)}},Ut=function(t,o,e,r,s){try{var i;function l(){return e.keys&&a.push(...Object.keys(e.keys).map(t=>({value:t,description:e.keys[t].description}))),jt(s,a,r)}const r=new Set((null==o||null===(i=o.mappings)||void 0===i?void 0:i.filter(t=>!!t.key).map(t=>t.key.value))||[]);let a=[];const u=function(){if(e.customValueProvider){const r=Dt(function(){return Promise.resolve(e.customValueProvider(e,t.workflow,pt(o))).then(function(t){t&&a.push(...t)})},function(t){console.error(t)});if(r&&r.then)return r.then(function(){})}}();return Promise.resolve(u&&u.then?u.then(l):l())}catch(t){return Promise.reject(t)}},Zt=function(t,o,e,r,s){try{let a,u;function i(t){return a?t:o.description?{description:o.description}:void 0}const c=function(t,o){var e,r=-1;t:{for(var s=0;s<o.length;s++){var i=o[s][0];if(i){var l=i();if(l&&l.then)break t;if(l===t){r=s;break}}else r=s}if(-1!==r){do{for(var a=o[r][1];!a;)r++,a=o[r][1];var u=a();if(u&&u.then){e=!0;break t}var c=o[r][2];r++}while(c&&!c());return u}}const p=new At,h=It.bind(null,p,2);return(e?u.then(d):l.then(function e(l){for(;;){if(l===t){r=s;break}if(++s===o.length){if(-1!==r)break;return void It(p,1,u)}if(i=o[s][0]){if((l=i())&&l.then)return void l.then(e).then(void 0,h)}else r=s}do{for(var a=o[r][1];!a;)r++,a=o[r][1];var u=a();if(u&&u.then)return void u.then(d).then(void 0,h);var c=o[r][2];r++}while(c&&!c());It(p,1,u)})).then(void 0,h),p;function d(t){for(;;){var e=o[r][2];if(!e||e())break;r++;for(var s=o[r][1];!s;)r++,s=o[r][1];if((t=s())&&t.then)return void t.then(d).then(void 0,h)}It(p,1,t)}}(o.type,[[function(){return\"value\"},function(){{function e(e){if(a)return e;if(o.allowedValues){const e=o.allowedValues.find(o=>t.value);if(e&&e.description)return a=1,{description:e.description}}u=1}const i=function(){if(t.kind===lt.SCALAR&&l(t.value)){const o=t.value;return Promise.resolve(s.get(r,pt(t))).then(function(t){const e=it(o,t);if(void 0!==e)return a=1,{description:`Evaluates to: \\`${e}\\``}})}}();return i&&i.then?i.then(e):e(i)}}],[function(){return\"sequence\"},function(){return t.kind!==lt.SEQ&&o.itemDesc?(a=1,Zt(t,o.itemDesc,e,r,s)):void(u=1)}],[function(){return\"map\"},function(){{function s(t){if(a)return t;u=1}const i=function(){if(t.kind===lt.MAP){var s;const i=null===(s=t.mappings)||void 0===s?void 0:s.find(t=>ut([t.startPosition,t.endPosition],e));return function(){if(i){var e;const s=null===(e=i.key)||void 0===e?void 0:e.value;return function(){var e,i;if(s)return(null===(e=o.keys)||void 0===e||null===(i=e[s])||void 0===i?void 0:i.description)?(a=1,{description:o.keys[s].description||\"\"}):function(){if(o.customValueProvider)return function(e,i){try{var l=Promise.resolve(o.customValueProvider(o,r,pt(t))).then(function(t){const o=null==t?void 0:t.find(t=>t.value===s);if(null==o?void 0:o.description)return a=1,{description:o.description}})}catch(t){return i(t)}return l&&l.then?l.then(void 0,i):l}(0,function(t){console.error(t)})}()}()}}()}}();return i&&i.then?i.then(s):s(i)}}]]);return Promise.resolve(c&&c.then?c.then(i):i(c))}catch(t){return Promise.reject(t)}};function It(t,o,e){if(!t.s){if(e instanceof At){if(!e.s)return void(e.o=It.bind(null,t,o));1&o&&(o=e.s),e=e.v}if(e&&e.then)return void e.then(It.bind(null,t,o),It.bind(null,t,2));t.s=o,t.v=e;const r=t.o;r&&r(t)}}const At=function(){function t(){}return t.prototype.then=function(o,e){const r=new t,s=this.s;if(s){const t=1&s?o:e;if(t){try{It(r,1,t(this.v))}catch(t){It(r,2,t)}return r}return this}return this.o=function(t){try{const s=t.v;1&t.s?It(r,1,o?o(s):s):e?It(r,1,e(s)):It(r,2,s)}catch(t){It(r,2,t)}},r},t}();function Rt(t){return t&&\"object\"==typeof t&&!Array.isArray(t)}function Pt(t){var o=[].slice.call(arguments,1);if(!o.length)return t;const e=o.shift();if(Rt(t)&&Rt(e))for(const o in e)Rt(e[o])?(t[o]||Object.assign(t,{[o]:{}}),Pt(t[o],e[o])):Object.assign(t,{[o]:e[o]});return Pt(t,...o)}var Xt={action:\"opened\",number:2,pull_request:{url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\",id:279147437,node_id:\"MDExOlB1bGxSZXF1ZXN0Mjc5MTQ3NDM3\",html_url:\"https://github.com/Codertocat/Hello-World/pull/2\",diff_url:\"https://github.com/Codertocat/Hello-World/pull/2.diff\",patch_url:\"https://github.com/Codertocat/Hello-World/pull/2.patch\",issue_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/2\",number:2,state:\"open\",locked:!1,title:\"Update the README with new information.\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},body:\"This is a pretty simple change that we need to pull into master.\",created_at:\"2019-05-15T15:20:33Z\",updated_at:\"2019-05-15T15:20:33Z\",closed_at:null,merged_at:null,merge_commit_sha:null,assignee:null,assignees:[],requested_reviewers:[],requested_teams:[],labels:[],milestone:null,commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2/commits\",review_comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2/comments\",review_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/comments{/number}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/2/comments\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/ec26c3e57ca3a959ca5aad62de7213c562f8c821\",head:{label:\"Codertocat:changes\",ref:\"changes\",sha:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},repo:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:19:27Z\",pushed_at:\"2019-05-15T15:20:32Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\",allow_squash_merge:!0,allow_merge_commit:!0,allow_rebase_merge:!0,delete_branch_on_merge:!1}},base:{label:\"Codertocat:master\",ref:\"master\",sha:\"f95f852bd8fca8fcc58a9a2d6c842781e32a215e\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},repo:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:19:27Z\",pushed_at:\"2019-05-15T15:20:32Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\",allow_squash_merge:!0,allow_merge_commit:!0,allow_rebase_merge:!0,delete_branch_on_merge:!1}},_links:{self:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\"},html:{href:\"https://github.com/Codertocat/Hello-World/pull/2\"},issue:{href:\"https://api.github.com/repos/Codertocat/Hello-World/issues/2\"},comments:{href:\"https://api.github.com/repos/Codertocat/Hello-World/issues/2/comments\"},review_comments:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2/comments\"},review_comment:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/comments{/number}\"},commits:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2/commits\"},statuses:{href:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/ec26c3e57ca3a959ca5aad62de7213c562f8c821\"}},author_association:\"OWNER\",draft:!1,merged:!1,mergeable:null,rebaseable:null,mergeable_state:\"unknown\",merged_by:null,comments:0,review_comments:0,maintainer_can_modify:!1,commits:1,additions:1,deletions:1,changed_files:1},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:19:27Z\",pushed_at:\"2019-05-15T15:20:32Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}};const Vt={check_run:{action:\"created\",check_run:{id:128620228,node_id:\"MDg6Q2hlY2tSdW4xMjg2MjAyMjg=\",head_sha:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",external_id:\"\",url:\"https://api.github.com/repos/Codertocat/Hello-World/check-runs/128620228\",html_url:\"https://github.com/Codertocat/Hello-World/runs/128620228\",details_url:\"https://octocoders.io\",status:\"queued\",conclusion:null,started_at:\"2019-05-15T15:21:12Z\",completed_at:null,output:{title:null,summary:null,text:null,annotations_count:0,annotations_url:\"https://api.github.com/repos/Codertocat/Hello-World/check-runs/128620228/annotations\"},name:\"Octocoders-linter\",check_suite:{id:118578147,node_id:\"MDEwOkNoZWNrU3VpdGUxMTg1NzgxNDc=\",head_branch:\"changes\",head_sha:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",status:\"queued\",conclusion:null,url:\"https://api.github.com/repos/Codertocat/Hello-World/check-suites/118578147\",before:\"6113728f27ae82c7b1a177c8d03f9e96e0adf246\",after:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",pull_requests:[{url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\",id:279147437,number:2,head:{ref:\"changes\",sha:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",repo:{id:186853002,url:\"https://api.github.com/repos/Codertocat/Hello-World\",name:\"Hello-World\"}},base:{ref:\"master\",sha:\"f95f852bd8fca8fcc58a9a2d6c842781e32a215e\",repo:{id:186853002,url:\"https://api.github.com/repos/Codertocat/Hello-World\",name:\"Hello-World\"}}}],app:{id:29310,node_id:\"MDM6QXBwMjkzMTA=\",owner:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Octocoders\",html_url:\"https://github.com/Octocoders\",followers_url:\"https://api.github.com/users/Octocoders/followers\",following_url:\"https://api.github.com/users/Octocoders/following{/other_user}\",gists_url:\"https://api.github.com/users/Octocoders/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Octocoders/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Octocoders/subscriptions\",organizations_url:\"https://api.github.com/users/Octocoders/orgs\",repos_url:\"https://api.github.com/users/Octocoders/repos\",events_url:\"https://api.github.com/users/Octocoders/events{/privacy}\",received_events_url:\"https://api.github.com/users/Octocoders/received_events\",type:\"Organization\",site_admin:!1},name:\"octocoders-linter\",description:\"\",external_url:\"https://octocoders.io\",html_url:\"https://github.com/apps/octocoders-linter\",created_at:\"2019-04-19T19:36:24Z\",updated_at:\"2019-04-19T19:36:56Z\",permissions:{administration:\"write\",checks:\"write\",contents:\"write\",deployments:\"write\",issues:\"write\",members:\"write\",metadata:\"read\",organization_administration:\"write\",organization_hooks:\"write\",organization_plan:\"read\",organization_projects:\"write\",organization_user_blocking:\"write\",pages:\"write\",pull_requests:\"write\",repository_hooks:\"write\",repository_projects:\"write\",statuses:\"write\",team_discussions:\"write\",vulnerability_alerts:\"read\"},events:[]},created_at:\"2019-05-15T15:20:31Z\",updated_at:\"2019-05-15T15:20:31Z\"},app:{id:29310,node_id:\"MDM6QXBwMjkzMTA=\",owner:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Octocoders\",html_url:\"https://github.com/Octocoders\",followers_url:\"https://api.github.com/users/Octocoders/followers\",following_url:\"https://api.github.com/users/Octocoders/following{/other_user}\",gists_url:\"https://api.github.com/users/Octocoders/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Octocoders/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Octocoders/subscriptions\",organizations_url:\"https://api.github.com/users/Octocoders/orgs\",repos_url:\"https://api.github.com/users/Octocoders/repos\",events_url:\"https://api.github.com/users/Octocoders/events{/privacy}\",received_events_url:\"https://api.github.com/users/Octocoders/received_events\",type:\"Organization\",site_admin:!1},name:\"octocoders-linter\",description:\"\",external_url:\"https://octocoders.io\",html_url:\"https://github.com/apps/octocoders-linter\",created_at:\"2019-04-19T19:36:24Z\",updated_at:\"2019-04-19T19:36:56Z\",permissions:{administration:\"write\",checks:\"write\",contents:\"write\",deployments:\"write\",issues:\"write\",members:\"write\",metadata:\"read\",organization_administration:\"write\",organization_hooks:\"write\",organization_plan:\"read\",organization_projects:\"write\",organization_user_blocking:\"write\",pages:\"write\",pull_requests:\"write\",repository_hooks:\"write\",repository_projects:\"write\",statuses:\"write\",team_discussions:\"write\",vulnerability_alerts:\"read\"},events:[]},pull_requests:[{url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\",id:279147437,number:2,head:{ref:\"changes\",sha:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",repo:{id:186853002,url:\"https://api.github.com/repos/Codertocat/Hello-World\",name:\"Hello-World\"}},base:{ref:\"master\",sha:\"f95f852bd8fca8fcc58a9a2d6c842781e32a215e\",repo:{id:186853002,url:\"https://api.github.com/repos/Codertocat/Hello-World\",name:\"Hello-World\"}}}]},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:21:03Z\",pushed_at:\"2019-05-15T15:20:57Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},check_suite:{action:\"completed\",check_suite:{id:118578147,node_id:\"MDEwOkNoZWNrU3VpdGUxMTg1NzgxNDc=\",head_branch:\"changes\",head_sha:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",status:\"completed\",conclusion:\"success\",url:\"https://api.github.com/repos/Codertocat/Hello-World/check-suites/118578147\",before:\"6113728f27ae82c7b1a177c8d03f9e96e0adf246\",after:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",pull_requests:[{url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\",id:279147437,number:2,head:{ref:\"changes\",sha:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",repo:{id:186853002,url:\"https://api.github.com/repos/Codertocat/Hello-World\",name:\"Hello-World\"}},base:{ref:\"master\",sha:\"f95f852bd8fca8fcc58a9a2d6c842781e32a215e\",repo:{id:186853002,url:\"https://api.github.com/repos/Codertocat/Hello-World\",name:\"Hello-World\"}}}],app:{id:29310,node_id:\"MDM6QXBwMjkzMTA=\",owner:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Octocoders\",html_url:\"https://github.com/Octocoders\",followers_url:\"https://api.github.com/users/Octocoders/followers\",following_url:\"https://api.github.com/users/Octocoders/following{/other_user}\",gists_url:\"https://api.github.com/users/Octocoders/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Octocoders/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Octocoders/subscriptions\",organizations_url:\"https://api.github.com/users/Octocoders/orgs\",repos_url:\"https://api.github.com/users/Octocoders/repos\",events_url:\"https://api.github.com/users/Octocoders/events{/privacy}\",received_events_url:\"https://api.github.com/users/Octocoders/received_events\",type:\"Organization\",site_admin:!1},name:\"octocoders-linter\",description:\"\",external_url:\"https://octocoders.io\",html_url:\"https://github.com/apps/octocoders-linter\",created_at:\"2019-04-19T19:36:24Z\",updated_at:\"2019-04-19T19:36:56Z\",permissions:{administration:\"write\",checks:\"write\",contents:\"write\",deployments:\"write\",issues:\"write\",members:\"write\",metadata:\"read\",organization_administration:\"write\",organization_hooks:\"write\",organization_plan:\"read\",organization_projects:\"write\",organization_user_blocking:\"write\",pages:\"write\",pull_requests:\"write\",repository_hooks:\"write\",repository_projects:\"write\",statuses:\"write\",team_discussions:\"write\",vulnerability_alerts:\"read\"},events:[]},created_at:\"2019-05-15T15:20:31Z\",updated_at:\"2019-05-15T15:21:14Z\",latest_check_runs_count:1,check_runs_url:\"https://api.github.com/repos/Codertocat/Hello-World/check-suites/118578147/check-runs\",head_commit:{id:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",tree_id:\"31b122c26a97cf9af023e9ddab94a82c6e77b0ea\",message:\"Update README.md\",timestamp:\"2019-05-15T15:20:30Z\",author:{name:\"Codertocat\",email:\"21031067+Codertocat@users.noreply.github.com\"},committer:{name:\"Codertocat\",email:\"21031067+Codertocat@users.noreply.github.com\"}}},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:21:14Z\",pushed_at:\"2019-05-15T15:20:57Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},commit_comment:{action:\"created\",comment:{url:\"https://api.github.com/repos/Codertocat/Hello-World/comments/33548674\",html_url:\"https://github.com/Codertocat/Hello-World/commit/6113728f27ae82c7b1a177c8d03f9e96e0adf246#commitcomment-33548674\",id:33548674,node_id:\"MDEzOkNvbW1pdENvbW1lbnQzMzU0ODY3NA==\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},position:null,line:null,path:null,commit_id:\"6113728f27ae82c7b1a177c8d03f9e96e0adf246\",created_at:\"2019-05-15T15:20:39Z\",updated_at:\"2019-05-15T15:20:39Z\",author_association:\"OWNER\",body:\"This is a really good change! :+1:\"},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:34Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},content_reference:{action:\"created\",content_reference:{id:17,node_id:\"MDE2OkNvbnRlbnRSZWZlcmVuY2UxNjA5\",reference:\"https://errors.ai/\"},repository:{id:145551601,node_id:\"MDEwOlJlcG9zaXRvcnkxNDU1NTE2MDE=\",name:\"hello-world\",full_name:\"octocoders/hello-world\",private:!0,owner:{login:\"Codertocat\",id:7718702,node_id:\"MDQ6VXNlcjc3MTg3MDI=\",avatar_url:\"https://avatars1.githubusercontent.com/u/7718702?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!0},html_url:\"https://github.com/Codertocat/hello-world\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/hello-world\",forks_url:\"https://api.github.com/repos/Codertocat/hello-world/forks\",keys_url:\"https://api.github.com/repos/Codertocat/hello-world/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/hello-world/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/hello-world/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/hello-world/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/hello-world/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/hello-world/events\",assignees_url:\"https://api.github.com/repos/Codertocat/hello-world/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/hello-world/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/hello-world/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/hello-world/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/hello-world/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/hello-world/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/hello-world/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/hello-world/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/hello-world/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/hello-world/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/hello-world/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/hello-world/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/hello-world/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/hello-world/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/hello-world/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/hello-world/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/hello-world/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/hello-world/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/hello-world/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/hello-world/merges\",archive_url:\"https://api.github.com/repos/Codertocat/hello-world/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/hello-world/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/hello-world/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/hello-world/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/hello-world/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/hello-world/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/hello-world/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/hello-world/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/hello-world/deployments\",created_at:\"2018-08-21T10:58:58Z\",updated_at:\"2018-08-21T10:59:01Z\",pushed_at:\"2018-08-21T10:59:00Z\",git_url:\"git://github.com/Codertocat/hello-world.git\",ssh_url:\"git@github.com:Codertocat/hello-world.git\",clone_url:\"https://github.com/Codertocat/hello-world.git\",svn_url:\"https://github.com/Codertocat/hello-world\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!1,forks_count:0,mirror_url:null,archived:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:7718702,node_id:\"MDQ6VXNlcjc3MTg3MDI=\",avatar_url:\"https://avatars1.githubusercontent.com/u/7718702?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!0},installation:{id:371641,node_id:\"MDIzOkludGVncmF0aW9uSW5zdGFsbGF0aW9uMzcxNjQx\"}},create:{ref:\"simple-tag\",ref_type:\"tag\",master_branch:\"master\",description:null,pusher_type:\"user\",repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:41Z\",pushed_at:\"2019-05-15T15:20:56Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},delete:{ref:\"simple-tag\",ref_type:\"tag\",pusher_type:\"user\",repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:41Z\",pushed_at:\"2019-05-15T15:20:57Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},deploy_key:{action:\"created\",key:{id:100,key:\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQConScVc7ouWWgwcjneNnJ4PScDkkwEjuDL5leLIUU5aIg13dH55/f4aqKUSvfcLUOKJ0a8073tFqMbR9rfvLAhLGeStKxmYApJXpzVkphauu7kfNW8kQNi1fI4kmHyOpQ+dKtoonzjZAT4L9AV3FlVTOfRq3U8wJ2RPwU+4EtOpMKUF+wcoDJ5ONlKBOW6uAeBt/guBiu6r3awDClDGRo4Q2YCmMceiAyoiuXcr2mFNSyzTqU1f20fftFwucV/VqnxlJjZvZ/zhlfB+v+UgQN11pJJ5vChZ7bzyRtIRRsjxbTReyWxqVZ5hEle5sm1oAR97abW9zTWfwIABgClKo+z\",url:\"https://api.github.com/repos/Codertocat/Hello-World/keys/100\",title:\"hey-its-a-deploy-key\",verified:!0,created_at:\"2019-04-02T17:37:07Z\",read_only:!0},repository:{id:135493233,node_id:\"MDEwOlJlcG9zaXRvcnkxMzU0OTMyMzM=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},private:!1,html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2018-05-30T20:18:04Z\",updated_at:\"2018-05-30T20:18:50Z\",pushed_at:\"2018-05-30T20:18:48Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,open_issues_count:1,license:null,forks:0,open_issues:1,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},deployment:{action:\"created\",deployment:{url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments/145988746\",id:145988746,node_id:\"MDEwOkRlcGxveW1lbnQxNDU5ODg3NDY=\",sha:\"f95f852bd8fca8fcc58a9a2d6c842781e32a215e\",ref:\"master\",task:\"deploy\",payload:{},original_environment:\"production\",environment:\"production\",description:null,creator:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},created_at:\"2019-05-15T15:20:53Z\",updated_at:\"2019-05-15T15:20:53Z\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments/145988746/statuses\",repository_url:\"https://api.github.com/repos/Codertocat/Hello-World\"},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:41Z\",pushed_at:\"2019-05-15T15:20:52Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},deployment_status:{action:\"created\",deployment_status:{url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments/145988746/statuses/209916254\",id:209916254,node_id:\"MDE2OkRlcGxveW1lbnRTdGF0dXMyMDk5MTYyNTQ=\",state:\"success\",creator:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},description:\"\",environment:\"production\",target_url:\"\",created_at:\"2019-05-15T15:20:55Z\",updated_at:\"2019-05-15T15:20:55Z\",deployment_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments/145988746\",repository_url:\"https://api.github.com/repos/Codertocat/Hello-World\"},deployment:{url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments/145988746\",id:145988746,node_id:\"MDEwOkRlcGxveW1lbnQxNDU5ODg3NDY=\",sha:\"f95f852bd8fca8fcc58a9a2d6c842781e32a215e\",ref:\"master\",task:\"deploy\",payload:{},original_environment:\"production\",environment:\"production\",description:null,creator:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},created_at:\"2019-05-15T15:20:53Z\",updated_at:\"2019-05-15T15:20:55Z\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments/145988746/statuses\",repository_url:\"https://api.github.com/repos/Codertocat/Hello-World\"},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:41Z\",pushed_at:\"2019-05-15T15:20:52Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},fork:{forkee:{id:186853261,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMyNjE=\",name:\"Hello-World\",full_name:\"Octocoders/Hello-World\",private:!1,owner:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Octocoders\",html_url:\"https://github.com/Octocoders\",followers_url:\"https://api.github.com/users/Octocoders/followers\",following_url:\"https://api.github.com/users/Octocoders/following{/other_user}\",gists_url:\"https://api.github.com/users/Octocoders/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Octocoders/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Octocoders/subscriptions\",organizations_url:\"https://api.github.com/users/Octocoders/orgs\",repos_url:\"https://api.github.com/users/Octocoders/repos\",events_url:\"https://api.github.com/users/Octocoders/events{/privacy}\",received_events_url:\"https://api.github.com/users/Octocoders/received_events\",type:\"Organization\",site_admin:!1},html_url:\"https://github.com/Octocoders/Hello-World\",description:null,fork:!0,url:\"https://api.github.com/repos/Octocoders/Hello-World\",forks_url:\"https://api.github.com/repos/Octocoders/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Octocoders/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Octocoders/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Octocoders/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Octocoders/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Octocoders/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Octocoders/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Octocoders/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Octocoders/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Octocoders/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Octocoders/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Octocoders/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Octocoders/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Octocoders/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Octocoders/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Octocoders/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Octocoders/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Octocoders/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Octocoders/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Octocoders/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Octocoders/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Octocoders/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Octocoders/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Octocoders/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Octocoders/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Octocoders/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Octocoders/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Octocoders/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Octocoders/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Octocoders/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Octocoders/Hello-World/deployments\",created_at:\"2019-05-15T15:20:42Z\",updated_at:\"2019-05-15T15:20:41Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Octocoders/Hello-World.git\",ssh_url:\"git@github.com:Octocoders/Hello-World.git\",clone_url:\"https://github.com/Octocoders/Hello-World.git\",svn_url:\"https://github.com/Octocoders/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!1,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!1,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:0,license:null,forks:0,open_issues:0,watchers:0,default_branch:\"master\",public:!0},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:41Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Octocoders\",html_url:\"https://github.com/Octocoders\",followers_url:\"https://api.github.com/users/Octocoders/followers\",following_url:\"https://api.github.com/users/Octocoders/following{/other_user}\",gists_url:\"https://api.github.com/users/Octocoders/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Octocoders/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Octocoders/subscriptions\",organizations_url:\"https://api.github.com/users/Octocoders/orgs\",repos_url:\"https://api.github.com/users/Octocoders/repos\",events_url:\"https://api.github.com/users/Octocoders/events{/privacy}\",received_events_url:\"https://api.github.com/users/Octocoders/received_events\",type:\"Organization\",site_admin:!1}},github_app_authorization:{action:\"revoked\",sender:{login:\"octocat\",id:1,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://github.com/images/error/octocat_happy.gif\",gravatar_id:\"\",url:\"https://api.github.com/users/octocat\",html_url:\"https://github.com/octocat\",followers_url:\"https://api.github.com/users/octocat/followers\",following_url:\"https://api.github.com/users/octocat/following{/other_user}\",gists_url:\"https://api.github.com/users/octocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/octocat/subscriptions\",organizations_url:\"https://api.github.com/users/octocat/orgs\",repos_url:\"https://api.github.com/users/octocat/repos\",events_url:\"https://api.github.com/users/octocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/octocat/received_events\",type:\"User\",site_admin:!1}},gollum:{pages:[{page_name:\"Home\",title:\"Home\",summary:null,action:\"edited\",sha:\"6bf911d3801dd1ef957fc6ade5a8d96429e7fa39\",html_url:\"https://github.com/Codertocat/Hello-World/wiki/Home\"}],repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:19:27Z\",pushed_at:\"2019-05-15T15:19:26Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!1,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:0,license:null,forks:0,open_issues:0,watchers:0,default_branch:\"master\"},sender:{login:\"rachmari\",id:9831992,node_id:\"MDQ6VXNlcjk4MzE5OTI=\",avatar_url:\"https://avatars2.githubusercontent.com/u/9831992?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/rachmari\",html_url:\"https://github.com/rachmari\",followers_url:\"https://api.github.com/users/rachmari/followers\",following_url:\"https://api.github.com/users/rachmari/following{/other_user}\",gists_url:\"https://api.github.com/users/rachmari/gists{/gist_id}\",starred_url:\"https://api.github.com/users/rachmari/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/rachmari/subscriptions\",organizations_url:\"https://api.github.com/users/rachmari/orgs\",repos_url:\"https://api.github.com/users/rachmari/repos\",events_url:\"https://api.github.com/users/rachmari/events{/privacy}\",received_events_url:\"https://api.github.com/users/rachmari/received_events\",type:\"User\",site_admin:!0}},installation:{action:\"deleted\",installation:{id:2,account:{login:\"octocat\",id:1,node_id:\"MDQ6VXNlcjE=\",avatar_url:\"https://github.com/images/error/octocat_happy.gif\",gravatar_id:\"\",url:\"https://api.github.com/users/octocat\",html_url:\"https://github.com/octocat\",followers_url:\"https://api.github.com/users/octocat/followers\",following_url:\"https://api.github.com/users/octocat/following{/other_user}\",gists_url:\"https://api.github.com/users/octocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/octocat/subscriptions\",organizations_url:\"https://api.github.com/users/octocat/orgs\",repos_url:\"https://api.github.com/users/octocat/repos\",events_url:\"https://api.github.com/users/octocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/octocat/received_events\",type:\"User\",site_admin:!1},repository_selection:\"selected\",access_tokens_url:\"https://api.github.com/installations/2/access_tokens\",repositories_url:\"https://api.github.com/installation/repositories\",html_url:\"https://github.com/settings/installations/2\",app_id:5725,target_id:3880403,target_type:\"User\",permissions:{metadata:\"read\",contents:\"read\",issues:\"write\"},events:[\"push\",\"pull_request\"],created_at:1525109898,updated_at:1525109899,single_file_name:\"config.yml\"},repositories:[{id:1296269,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDc=\",name:\"Hello-World\",full_name:\"octocat/Hello-World\",private:!1}],sender:{login:\"octocat\",id:1,node_id:\"MDQ6VXNlcjE=\",avatar_url:\"https://github.com/images/error/octocat_happy.gif\",gravatar_id:\"\",url:\"https://api.github.com/users/octocat\",html_url:\"https://github.com/octocat\",followers_url:\"https://api.github.com/users/octocat/followers\",following_url:\"https://api.github.com/users/octocat/following{/other_user}\",gists_url:\"https://api.github.com/users/octocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/octocat/subscriptions\",organizations_url:\"https://api.github.com/users/octocat/orgs\",repos_url:\"https://api.github.com/users/octocat/repos\",events_url:\"https://api.github.com/users/octocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/octocat/received_events\",type:\"User\",site_admin:!1}},installation_repositories:{action:\"added\",installation:{id:957387,account:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},repository_selection:\"selected\",access_tokens_url:\"https://api.github.com/app/installations/957387/access_tokens\",repositories_url:\"https://api.github.com/installation/repositories\",html_url:\"https://github.com/settings/installations/957387\",app_id:29310,target_id:21031067,target_type:\"User\",permissions:{administration:\"write\",statuses:\"write\",repository_projects:\"write\",repository_hooks:\"write\",pull_requests:\"write\",pages:\"write\",issues:\"write\",deployments:\"write\",contents:\"write\",checks:\"write\",metadata:\"read\",vulnerability_alerts:\"read\"},events:[],created_at:1557933591,updated_at:1557933591,single_file_name:null},repository_selection:\"selected\",repositories_added:[{id:186853007,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDc=\",name:\"Space\",full_name:\"Codertocat/Space\",private:!1}],repositories_removed:[],sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},issue_comment:{action:\"created\",issue:{url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/1\",repository_url:\"https://api.github.com/repos/Codertocat/Hello-World\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/1/labels{/name}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/1/comments\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/1/events\",html_url:\"https://github.com/Codertocat/Hello-World/issues/1\",id:444500041,node_id:\"MDU6SXNzdWU0NDQ1MDAwNDE=\",number:1,title:\"Spelling error in the README file\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},labels:[{id:1362934389,node_id:\"MDU6TGFiZWwxMzYyOTM0Mzg5\",url:\"https://api.github.com/repos/Codertocat/Hello-World/labels/bug\",name:\"bug\",color:\"d73a4a\",default:!0}],state:\"open\",locked:!1,assignee:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},assignees:[{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}],milestone:{url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones/1\",html_url:\"https://github.com/Codertocat/Hello-World/milestone/1\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones/1/labels\",id:4317517,node_id:\"MDk6TWlsZXN0b25lNDMxNzUxNw==\",number:1,title:\"v1.0\",description:\"Add new space flight simulator\",creator:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},open_issues:1,closed_issues:0,state:\"closed\",created_at:\"2019-05-15T15:20:17Z\",updated_at:\"2019-05-15T15:20:18Z\",due_on:\"2019-05-23T07:00:00Z\",closed_at:\"2019-05-15T15:20:18Z\"},comments:0,created_at:\"2019-05-15T15:20:18Z\",updated_at:\"2019-05-15T15:20:21Z\",closed_at:null,author_association:\"OWNER\",body:\"It looks like you accidently spelled 'commit' with two 't's.\"},comment:{url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments/492700400\",html_url:\"https://github.com/Codertocat/Hello-World/issues/1#issuecomment-492700400\",issue_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/1\",id:492700400,node_id:\"MDEyOklzc3VlQ29tbWVudDQ5MjcwMDQwMA==\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},created_at:\"2019-05-15T15:20:21Z\",updated_at:\"2019-05-15T15:20:21Z\",author_association:\"OWNER\",body:\"You are totally right! I'll get this fixed right away.\"},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:19:27Z\",pushed_at:\"2019-05-15T15:20:13Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:1,license:null,forks:0,open_issues:1,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},issues:{action:\"edited\",issue:{url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/1\",repository_url:\"https://api.github.com/repos/Codertocat/Hello-World\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/1/labels{/name}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/1/comments\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/1/events\",html_url:\"https://github.com/Codertocat/Hello-World/issues/1\",id:444500041,node_id:\"MDU6SXNzdWU0NDQ1MDAwNDE=\",number:1,title:\"Spelling error in the README file\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},labels:[{id:1362934389,node_id:\"MDU6TGFiZWwxMzYyOTM0Mzg5\",url:\"https://api.github.com/repos/Codertocat/Hello-World/labels/bug\",name:\"bug\",color:\"d73a4a\",default:!0}],state:\"open\",locked:!1,assignee:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},assignees:[{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}],milestone:{url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones/1\",html_url:\"https://github.com/Codertocat/Hello-World/milestone/1\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones/1/labels\",id:4317517,node_id:\"MDk6TWlsZXN0b25lNDMxNzUxNw==\",number:1,title:\"v1.0\",description:\"Add new space flight simulator\",creator:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},open_issues:1,closed_issues:0,state:\"closed\",created_at:\"2019-05-15T15:20:17Z\",updated_at:\"2019-05-15T15:20:18Z\",due_on:\"2019-05-23T07:00:00Z\",closed_at:\"2019-05-15T15:20:18Z\"},comments:0,created_at:\"2019-05-15T15:20:18Z\",updated_at:\"2019-05-15T15:20:18Z\",closed_at:null,author_association:\"OWNER\",body:\"It looks like you accidently spelled 'commit' with two 't's.\"},changes:{},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:19:27Z\",pushed_at:\"2019-05-15T15:20:13Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:1,license:null,forks:0,open_issues:1,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},label:{action:\"deleted\",label:{id:1362937026,node_id:\"MDU6TGFiZWwxMzYyOTM3MDI2\",url:\"https://api.github.com/repos/Codertocat/Hello-World/labels/:bug:%20Bugfix\",name:\":bug: Bugfix\",color:\"cceeaa\",default:!1},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:21:03Z\",pushed_at:\"2019-05-15T15:20:57Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},marketplace_purchase:{action:\"purchased\",effective_date:\"2017-10-25T00:00:00+00:00\",sender:{login:\"username\",id:3877742,avatar_url:\"https://avatars2.githubusercontent.com/u/3877742?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/username\",html_url:\"https://github.com/username\",followers_url:\"https://api.github.com/users/username/followers\",following_url:\"https://api.github.com/users/username/following{/other_user}\",gists_url:\"https://api.github.com/users/username/gists{/gist_id}\",starred_url:\"https://api.github.com/users/username/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/username/subscriptions\",organizations_url:\"https://api.github.com/users/username/orgs\",repos_url:\"https://api.github.com/users/username/repos\",events_url:\"https://api.github.com/users/username/events{/privacy}\",received_events_url:\"https://api.github.com/users/username/received_events\",type:\"User\",site_admin:!0,email:\"username@email.com\"},marketplace_purchase:{account:{type:\"Organization\",id:18404719,login:\"username\",organization_billing_email:\"username@email.com\"},billing_cycle:\"monthly\",unit_count:1,on_free_trial:!1,free_trial_ends_on:null,next_billing_date:\"2017-11-05T00:00:00+00:00\",plan:{id:435,name:\"Basic Plan\",description:\"Basic Plan\",monthly_price_in_cents:1e3,yearly_price_in_cents:1e4,price_model:\"per-unit\",has_free_trial:!0,unit_name:\"seat\",bullets:[\"Is Basic\",\"Because Basic \"]}}},member:{action:\"added\",member:{login:\"hacktocat\",id:39652351,node_id:\"MDQ6VXNlcjM5NjUyMzUx\",avatar_url:\"https://avatars2.githubusercontent.com/u/39652351?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/hacktocat\",html_url:\"https://github.com/hacktocat\",followers_url:\"https://api.github.com/users/hacktocat/followers\",following_url:\"https://api.github.com/users/hacktocat/following{/other_user}\",gists_url:\"https://api.github.com/users/hacktocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/hacktocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/hacktocat/subscriptions\",organizations_url:\"https://api.github.com/users/hacktocat/orgs\",repos_url:\"https://api.github.com/users/hacktocat/repos\",events_url:\"https://api.github.com/users/hacktocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/hacktocat/received_events\",type:\"User\",site_admin:!1},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:41Z\",pushed_at:\"2019-05-15T15:20:57Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"hacktocat\",id:39652351,node_id:\"MDQ6VXNlcjM5NjUyMzUx\",avatar_url:\"https://avatars2.githubusercontent.com/u/39652351?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/hacktocat\",html_url:\"https://github.com/hacktocat\",followers_url:\"https://api.github.com/users/hacktocat/followers\",following_url:\"https://api.github.com/users/hacktocat/following{/other_user}\",gists_url:\"https://api.github.com/users/hacktocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/hacktocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/hacktocat/subscriptions\",organizations_url:\"https://api.github.com/users/hacktocat/orgs\",repos_url:\"https://api.github.com/users/hacktocat/repos\",events_url:\"https://api.github.com/users/hacktocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/hacktocat/received_events\",type:\"User\",site_admin:!1}},membership:{action:\"removed\",scope:\"team\",member:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},team:{name:\"github\",id:3253328,node_id:\"MDQ6VGVhbTMyNTMzMjg=\",slug:\"github\",description:\"Open-source team\",privacy:\"secret\",url:\"https://api.github.com/teams/3253328\",html_url:\"https://github.com/orgs/Octocoders/teams/github\",members_url:\"https://api.github.com/teams/3253328/members{/member}\",repositories_url:\"https://api.github.com/teams/3253328/repos\",permission:\"pull\"},organization:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",url:\"https://api.github.com/orgs/Octocoders\",repos_url:\"https://api.github.com/orgs/Octocoders/repos\",events_url:\"https://api.github.com/orgs/Octocoders/events\",hooks_url:\"https://api.github.com/orgs/Octocoders/hooks\",issues_url:\"https://api.github.com/orgs/Octocoders/issues\",members_url:\"https://api.github.com/orgs/Octocoders/members{/member}\",public_members_url:\"https://api.github.com/orgs/Octocoders/public_members{/member}\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",description:\"\"}},meta:{action:\"deleted\",hook_id:101047067,hook:{type:\"Repository\",id:101047067,name:\"web\",active:!0,events:[\"meta\"],config:{content_type:\"json\",insecure_ssl:\"0\",url:\"http://example.com/hook\"},updated_at:\"2019-04-10T03:57:12Z\",created_at:\"2019-04-10T03:57:12Z\"},repository:{id:135493233,node_id:\"MDEwOlJlcG9zaXRvcnkxMzU0OTMyMzM=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},private:!1,html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2018-05-30T20:18:04Z\",updated_at:\"2018-05-30T20:18:50Z\",pushed_at:\"2018-05-30T20:18:48Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,open_issues_count:1,license:null,forks:0,open_issues:1,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},milestone:{action:\"created\",milestone:{url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones/1\",html_url:\"https://github.com/Codertocat/Hello-World/milestone/1\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones/1/labels\",id:4317517,node_id:\"MDk6TWlsZXN0b25lNDMxNzUxNw==\",number:1,title:\"v1.0\",description:\"Add new space flight simulator\",creator:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},open_issues:0,closed_issues:0,state:\"open\",created_at:\"2019-05-15T15:20:17Z\",updated_at:\"2019-05-15T15:20:17Z\",due_on:\"2019-05-23T07:00:00Z\",closed_at:null},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:19:27Z\",pushed_at:\"2019-05-15T15:20:13Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:0,license:null,forks:0,open_issues:0,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},org_block:{action:\"blocked\",blocked_user:{login:\"hacktocat\",id:39652351,node_id:\"MDQ6VXNlcjM5NjUyMzUx\",avatar_url:\"https://avatars2.githubusercontent.com/u/39652351?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/hacktocat\",html_url:\"https://github.com/hacktocat\",followers_url:\"https://api.github.com/users/hacktocat/followers\",following_url:\"https://api.github.com/users/hacktocat/following{/other_user}\",gists_url:\"https://api.github.com/users/hacktocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/hacktocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/hacktocat/subscriptions\",organizations_url:\"https://api.github.com/users/hacktocat/orgs\",repos_url:\"https://api.github.com/users/hacktocat/repos\",events_url:\"https://api.github.com/users/hacktocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/hacktocat/received_events\",type:\"User\",site_admin:!1},organization:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",url:\"https://api.github.com/orgs/Octocoders\",repos_url:\"https://api.github.com/orgs/Octocoders/repos\",events_url:\"https://api.github.com/orgs/Octocoders/events\",hooks_url:\"https://api.github.com/orgs/Octocoders/hooks\",issues_url:\"https://api.github.com/orgs/Octocoders/issues\",members_url:\"https://api.github.com/orgs/Octocoders/members{/member}\",public_members_url:\"https://api.github.com/orgs/Octocoders/public_members{/member}\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",description:\"\"},sender:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Octocoders\",html_url:\"https://github.com/Octocoders\",followers_url:\"https://api.github.com/users/Octocoders/followers\",following_url:\"https://api.github.com/users/Octocoders/following{/other_user}\",gists_url:\"https://api.github.com/users/Octocoders/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Octocoders/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Octocoders/subscriptions\",organizations_url:\"https://api.github.com/users/Octocoders/orgs\",repos_url:\"https://api.github.com/users/Octocoders/repos\",events_url:\"https://api.github.com/users/Octocoders/events{/privacy}\",received_events_url:\"https://api.github.com/users/Octocoders/received_events\",type:\"Organization\",site_admin:!1}},organization:{action:\"member_added\",membership:{url:\"https://api.github.com/orgs/Octocoders/memberships/hacktocat\",state:\"pending\",role:\"member\",organization_url:\"https://api.github.com/orgs/Octocoders\",user:{login:\"hacktocat\",id:39652351,node_id:\"MDQ6VXNlcjM5NjUyMzUx\",avatar_url:\"https://avatars2.githubusercontent.com/u/39652351?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/hacktocat\",html_url:\"https://github.com/hacktocat\",followers_url:\"https://api.github.com/users/hacktocat/followers\",following_url:\"https://api.github.com/users/hacktocat/following{/other_user}\",gists_url:\"https://api.github.com/users/hacktocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/hacktocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/hacktocat/subscriptions\",organizations_url:\"https://api.github.com/users/hacktocat/orgs\",repos_url:\"https://api.github.com/users/hacktocat/repos\",events_url:\"https://api.github.com/users/hacktocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/hacktocat/received_events\",type:\"User\",site_admin:!1}},organization:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",url:\"https://api.github.com/orgs/Octocoders\",repos_url:\"https://api.github.com/orgs/Octocoders/repos\",events_url:\"https://api.github.com/orgs/Octocoders/events\",hooks_url:\"https://api.github.com/orgs/Octocoders/hooks\",issues_url:\"https://api.github.com/orgs/Octocoders/issues\",members_url:\"https://api.github.com/orgs/Octocoders/members{/member}\",public_members_url:\"https://api.github.com/orgs/Octocoders/public_members{/member}\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",description:\"\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},package:{action:\"published\",package:{id:10696,name:\"hello-world-npm\",package_type:\"npm\",html_url:\"https://github.com/Codertocat/hello-world-npm/packages/10696\",created_at:\"2019-05-09T23:28:29Z\",updated_at:\"2019-05-09T23:28:29Z\",owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},package_version:{id:24147,version:\"1.0.0\",summary:\"A simple npm package to demonstrate GitHub Packages\",body:\"# hello-world-npm\\n\\nThis is a simple npm package that demonstrates the [Github Packages](https://github.com/features/package).\\n\\n## Installation \\n\\n`$ npm install`\\n\\n## Usage\\n\\n```\\nconst myPackage = require('hello-world-node-package');\\nmyPackage.helloWorld();\\n```\\n\\n\",body_html:\"<h1>hello-world-npm</h1>\\n<p>This is a simple npm package that demonstrates the <a href=\\\"https://github.com/features/package\\\">Github Package Registry</a>.</p>\\n<h2>Installation</h2>\\n<p><code>$ npm install</code></p>\\n<h2>Usage</h2>\\n<pre><code>const myPackage = require('hello-world-node-package');\\nmyPackage.helloWorld();\\n</code></pre>\",release:{url:\"https://api.github.com/repos/Codertocat/hello-world-npm/releases/17264286\",html_url:\"https://github.com/Codertocat/hello-world-npm/releases/tag/1.0.0\",id:17264286,tag_name:\"1.0.0\",target_commitish:\"master\",name:\"1.0.0\",draft:!1,author:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},prerelease:!1,created_at:\"2019-05-09T23:24:40Z\",published_at:\"2019-05-09T23:26:59Z\"},manifest:'{\"_from\":\"\",\"_id\":\"@codertocat/hello-world-npm@1.0.0\",\"_nodeVersion\":\"10.0.0\",\"_npmUser\":{},\"_npmVersion\":\"5.6.0\",\"_shasum\":\"\",\"author\":{\"name\":\"Codertocat\"},\"bugs\":{\"url\":\"https://github.com/Codertocat/hello-world-npm/issues\"},\"description\":\"A simple npm package to demonstrate GitHub Package Registry\",\"dependencies\":null,\"devDependencies\":null,\"peerDependencies\":null,\"dist\":{\"integrity\":\"sha512-CcChRwjJk+pvGVERbgdjc0w5h6HrOs6jK6OJuHmFcmbnGuhiy9tPMtb4WcSSdvwrktAxf96LsJBNqeIHAEHl3A==\",\"shasum\":\"a413c56a12997ca1b56715ebe81d8c6e0ffe6abb\",\"tarball\":\"http://npm.pkg.github.com/@codertocat/hello-world-npm/-/@codertocat/hello-world-npm-1.0.0.tgz\"},\"gitHead\":\"6c62fb45fe66bfb1ea9a66abc38f6a0cc974292b\",\"homepage\":\"https://github.com/Codertocat/hello-world-npm#readme\",\"license\":\"ISC\",\"main\":\"index.js\",\"name\":\"@codertocat/hello-world-npm\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/Codertocat/hello-world-npm.git\"},\"scripts\":{\"test\":\"echo \\\\\"Error: no test specified\\\\\" \\\\u0026\\\\u0026 exit 1\"},\"version\":\"1.0.0\"}',html_url:\"https://github.com/Codertocat/hello-world-npm/packages/10696?version=1.0.0\",tag_name:\"1.0.0\",target_commitish:\"master\",target_oid:\"6c62fb45fe66bfb1ea9a66abc38f6a0cc974292b\",draft:!1,prerelease:!1,created_at:\"2019-05-09T23:28:29Z\",updated_at:\"2019-05-09T23:28:30Z\",metadata:[],package_files:[{download_url:\"https://github-production-package-file-4f11e5.s3.amazonaws.com/185882436/3e6d9b00-7288-11e9-9d72-c0df4c711800?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20190509%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20190509T232830Z&X-Amz-Expires=300&X-Amz-Signature=4b825c49cd93370123a77d0f97a4ebb0d44efb76da46faf1e382f0c668b35819&X-Amz-SignedHeaders=host&actor_id=0&response-content-disposition=filename%3Dhello-world-npm-1.0.0-npm.tgz&response-content-type=application%2Foctet-stream\",id:92167,name:\"hello-world-npm-1.0.0-npm.tgz\",sha256:\"ba703915435b6ca2ca666b5d8332db34bf9dc37a198ed70d3a5fa5d08b8415c8\",sha1:\"a413c56a12997ca1b56715ebe81d8c6e0ffe6abb\",md5:\"56ebbd5a5a03367f62d0c732bafd3c66\",content_type:\"application/octet-stream\",state:\"uploaded\",size:654,created_at:\"2019-05-09T23:28:30Z\",updated_at:\"2019-05-09T23:28:30Z\"}],author:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},installation_command:\"npm install @Codertocat/@1.0.0\"},registry:{about_url:\"https://help.github.com/about-github-packages\",name:\"GitHub npm registry\",type:\"npm\",url:\"https://npm.pkg.github.com/@Codertocat\",vendor:\"GitHub Inc\"}},repository:{id:185882436,node_id:\"MDEwOlJlcG9zaXRvcnkxODU4ODI0MzY=\",name:\"hello-world-npm\",full_name:\"Codertocat/hello-world-npm\",private:!0,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/hello-world-npm\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/hello-world-npm\",forks_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/forks\",keys_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/events\",assignees_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/merges\",archive_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/hello-world-npm/deployments\",created_at:\"2019-05-09T22:53:26Z\",updated_at:\"2019-05-09T23:24:42Z\",pushed_at:\"2019-05-09T23:27:00Z\",git_url:\"git://github.com/Codertocat/hello-world-npm.git\",ssh_url:\"git@github.com:Codertocat/hello-world-npm.git\",clone_url:\"https://github.com/Codertocat/hello-world-npm.git\",svn_url:\"https://github.com/Codertocat/hello-world-npm\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"JavaScript\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!1,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:0,license:null,forks:0,open_issues:0,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},page_build:{id:130514899,build:{url:\"https://api.github.com/repos/Codertocat/Hello-World/pages/builds/130514899\",status:\"built\",error:{message:null},pusher:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},commit:\"507fc9acd0d04ac4a9db87d12cb228c052cd813a\",duration:16984,created_at:\"2019-05-15T15:20:23Z\",updated_at:\"2019-05-15T15:20:40Z\"},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:34Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},ping:{zen:\"Anything added dilutes everything else.\",hook_id:109948940,hook:{type:\"Repository\",id:109948940,name:\"web\",active:!0,events:[\"*\"],config:{content_type:\"json\",url:\"https://smee.io/****************\",insecure_ssl:\"0\"},updated_at:\"2019-05-15T15:20:49Z\",created_at:\"2019-05-15T15:20:49Z\",url:\"https://api.github.com/repos/Octocoders/Hello-World/hooks/109948940\",test_url:\"https://api.github.com/repos/Octocoders/Hello-World/hooks/109948940/test\",ping_url:\"https://api.github.com/repos/Octocoders/Hello-World/hooks/109948940/pings\",last_response:{code:null,status:\"unused\",message:null}},repository:{id:186853261,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMyNjE=\",name:\"Hello-World\",full_name:\"Octocoders/Hello-World\",private:!1,owner:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Octocoders\",html_url:\"https://github.com/Octocoders\",followers_url:\"https://api.github.com/users/Octocoders/followers\",following_url:\"https://api.github.com/users/Octocoders/following{/other_user}\",gists_url:\"https://api.github.com/users/Octocoders/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Octocoders/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Octocoders/subscriptions\",organizations_url:\"https://api.github.com/users/Octocoders/orgs\",repos_url:\"https://api.github.com/users/Octocoders/repos\",events_url:\"https://api.github.com/users/Octocoders/events{/privacy}\",received_events_url:\"https://api.github.com/users/Octocoders/received_events\",type:\"Organization\",site_admin:!1},html_url:\"https://github.com/Octocoders/Hello-World\",description:null,fork:!0,url:\"https://api.github.com/repos/Octocoders/Hello-World\",forks_url:\"https://api.github.com/repos/Octocoders/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Octocoders/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Octocoders/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Octocoders/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Octocoders/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Octocoders/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Octocoders/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Octocoders/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Octocoders/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Octocoders/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Octocoders/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Octocoders/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Octocoders/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Octocoders/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Octocoders/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Octocoders/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Octocoders/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Octocoders/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Octocoders/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Octocoders/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Octocoders/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Octocoders/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Octocoders/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Octocoders/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Octocoders/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Octocoders/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Octocoders/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Octocoders/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Octocoders/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Octocoders/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Octocoders/Hello-World/deployments\",created_at:\"2019-05-15T15:20:42Z\",updated_at:\"2019-05-15T15:20:45Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Octocoders/Hello-World.git\",ssh_url:\"git@github.com:Octocoders/Hello-World.git\",clone_url:\"https://github.com/Octocoders/Hello-World.git\",svn_url:\"https://github.com/Octocoders/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!1,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!1,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:0,license:null,forks:0,open_issues:0,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},project:{action:\"created\",project:{owner_url:\"https://api.github.com/repos/Codertocat/Hello-World\",url:\"https://api.github.com/projects/2640902\",html_url:\"https://github.com/Codertocat/Hello-World/projects/1\",columns_url:\"https://api.github.com/projects/2640902/columns\",id:2640902,node_id:\"MDc6UHJvamVjdDI2NDA5MDI=\",name:\"Space 2.0\",body:\"Project tasks for a trip to Space\",number:1,state:\"open\",creator:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},created_at:\"2019-05-15T15:21:06Z\",updated_at:\"2019-05-15T15:21:06Z\"},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:21:03Z\",pushed_at:\"2019-05-15T15:20:57Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},project_card:{action:\"created\",project_card:{url:\"https://api.github.com/projects/columns/cards/21567453\",project_url:\"https://api.github.com/projects/2640902\",column_url:\"https://api.github.com/projects/columns/5368157\",column_id:5368157,id:21567453,node_id:\"MDExOlByb2plY3RDYXJkMjE1Njc0NTM=\",note:\"Work that can be completed in one hour or less.\",archived:!1,creator:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},created_at:\"2019-05-15T15:21:10Z\",updated_at:\"2019-05-15T15:21:10Z\"},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:21:03Z\",pushed_at:\"2019-05-15T15:20:57Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},project_column:{action:\"created\",project_column:{url:\"https://api.github.com/projects/columns/5368157\",project_url:\"https://api.github.com/projects/2640902\",cards_url:\"https://api.github.com/projects/columns/5368157/cards\",id:5368157,node_id:\"MDEzOlByb2plY3RDb2x1bW41MzY4MTU3\",name:\"Small bugfixes\",created_at:\"2019-05-15T15:21:09Z\",updated_at:\"2019-05-15T15:21:09Z\"},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:21:03Z\",pushed_at:\"2019-05-15T15:20:57Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},public:{repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:21:03Z\",pushed_at:\"2019-05-15T15:20:57Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},pull_request:Xt,pull_request_review:{action:\"submitted\",review:{id:237895671,node_id:\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjM3ODk1Njcx\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},body:null,commit_id:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",submitted_at:\"2019-05-15T15:20:38Z\",state:\"commented\",html_url:\"https://github.com/Codertocat/Hello-World/pull/2#pullrequestreview-237895671\",pull_request_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\",author_association:\"OWNER\",_links:{html:{href:\"https://github.com/Codertocat/Hello-World/pull/2#pullrequestreview-237895671\"},pull_request:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\"}}},pull_request:{url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\",id:279147437,node_id:\"MDExOlB1bGxSZXF1ZXN0Mjc5MTQ3NDM3\",html_url:\"https://github.com/Codertocat/Hello-World/pull/2\",diff_url:\"https://github.com/Codertocat/Hello-World/pull/2.diff\",patch_url:\"https://github.com/Codertocat/Hello-World/pull/2.patch\",issue_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/2\",number:2,state:\"open\",locked:!1,title:\"Update the README with new information.\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},body:\"This is a pretty simple change that we need to pull into master.\",created_at:\"2019-05-15T15:20:33Z\",updated_at:\"2019-05-15T15:20:38Z\",closed_at:null,merged_at:null,merge_commit_sha:\"c4295bd74fb0f4fda03689c3df3f2803b658fd85\",assignee:null,assignees:[],requested_reviewers:[],requested_teams:[],labels:[],milestone:null,commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2/commits\",review_comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2/comments\",review_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/comments{/number}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/2/comments\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/ec26c3e57ca3a959ca5aad62de7213c562f8c821\",head:{label:\"Codertocat:changes\",ref:\"changes\",sha:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},repo:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:34Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\",allow_squash_merge:!0,allow_merge_commit:!0,allow_rebase_merge:!0,delete_branch_on_merge:!1}},base:{label:\"Codertocat:master\",ref:\"master\",sha:\"f95f852bd8fca8fcc58a9a2d6c842781e32a215e\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},repo:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:34Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\",allow_squash_merge:!0,allow_merge_commit:!0,allow_rebase_merge:!0,delete_branch_on_merge:!1}},_links:{self:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\"},html:{href:\"https://github.com/Codertocat/Hello-World/pull/2\"},issue:{href:\"https://api.github.com/repos/Codertocat/Hello-World/issues/2\"},comments:{href:\"https://api.github.com/repos/Codertocat/Hello-World/issues/2/comments\"},review_comments:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2/comments\"},review_comment:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/comments{/number}\"},commits:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2/commits\"},statuses:{href:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/ec26c3e57ca3a959ca5aad62de7213c562f8c821\"}},author_association:\"OWNER\"},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:34Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},pull_request_review_comment:{action:\"created\",comment:{url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/comments/284312630\",pull_request_review_id:237895671,id:284312630,node_id:\"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDMxMjYzMA==\",diff_hunk:\"@@ -1 +1 @@\\n-# Hello-World\",path:\"README.md\",position:1,original_position:1,commit_id:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",original_commit_id:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},body:\"Maybe you should use more emojji on this line.\",created_at:\"2019-05-15T15:20:37Z\",updated_at:\"2019-05-15T15:20:38Z\",html_url:\"https://github.com/Codertocat/Hello-World/pull/2#discussion_r284312630\",pull_request_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\",author_association:\"OWNER\",_links:{self:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/comments/284312630\"},html:{href:\"https://github.com/Codertocat/Hello-World/pull/2#discussion_r284312630\"},pull_request:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\"}}},pull_request:{url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\",id:279147437,node_id:\"MDExOlB1bGxSZXF1ZXN0Mjc5MTQ3NDM3\",html_url:\"https://github.com/Codertocat/Hello-World/pull/2\",diff_url:\"https://github.com/Codertocat/Hello-World/pull/2.diff\",patch_url:\"https://github.com/Codertocat/Hello-World/pull/2.patch\",issue_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/2\",number:2,state:\"open\",locked:!1,title:\"Update the README with new information.\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},body:\"This is a pretty simple change that we need to pull into master.\",created_at:\"2019-05-15T15:20:33Z\",updated_at:\"2019-05-15T15:20:38Z\",closed_at:null,merged_at:null,merge_commit_sha:\"c4295bd74fb0f4fda03689c3df3f2803b658fd85\",assignee:null,assignees:[],requested_reviewers:[],requested_teams:[],labels:[],milestone:null,commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2/commits\",review_comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2/comments\",review_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/comments{/number}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/2/comments\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/ec26c3e57ca3a959ca5aad62de7213c562f8c821\",head:{label:\"Codertocat:changes\",ref:\"changes\",sha:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},repo:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:34Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\",allow_squash_merge:!0,allow_merge_commit:!0,allow_rebase_merge:!0,delete_branch_on_merge:!1}},base:{label:\"Codertocat:master\",ref:\"master\",sha:\"f95f852bd8fca8fcc58a9a2d6c842781e32a215e\",user:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},repo:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:34Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\",allow_squash_merge:!0,allow_merge_commit:!0,allow_rebase_merge:!0,delete_branch_on_merge:!1}},_links:{self:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2\"},html:{href:\"https://github.com/Codertocat/Hello-World/pull/2\"},issue:{href:\"https://api.github.com/repos/Codertocat/Hello-World/issues/2\"},comments:{href:\"https://api.github.com/repos/Codertocat/Hello-World/issues/2/comments\"},review_comments:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2/comments\"},review_comment:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/comments{/number}\"},commits:{href:\"https://api.github.com/repos/Codertocat/Hello-World/pulls/2/commits\"},statuses:{href:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/ec26c3e57ca3a959ca5aad62de7213c562f8c821\"}},author_association:\"OWNER\"},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:34Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},pull_request_target:Xt,push:{ref:\"refs/tags/simple-tag\",before:\"6113728f27ae82c7b1a177c8d03f9e96e0adf246\",after:\"0000000000000000000000000000000000000000\",created:!1,deleted:!0,forced:!1,base_ref:null,compare:\"https://github.com/Codertocat/Hello-World/compare/6113728f27ae...000000000000\",commits:[],head_commit:null,repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{name:\"Codertocat\",email:\"21031067+Codertocat@users.noreply.github.com\",login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://github.com/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:1557933565,updated_at:\"2019-05-15T15:20:41Z\",pushed_at:1557933657,git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\",stargazers:0,master_branch:\"master\"},pusher:{name:\"Codertocat\",email:\"21031067+Codertocat@users.noreply.github.com\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},release:{action:\"published\",release:{url:\"https://api.github.com/repos/Codertocat/Hello-World/releases/17372790\",assets_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases/17372790/assets\",upload_url:\"https://uploads.github.com/repos/Codertocat/Hello-World/releases/17372790/assets{?name,label}\",html_url:\"https://github.com/Codertocat/Hello-World/releases/tag/0.0.1\",id:17372790,node_id:\"MDc6UmVsZWFzZTE3MzcyNzkw\",tag_name:\"0.0.1\",target_commitish:\"master\",name:null,draft:!1,author:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},prerelease:!1,created_at:\"2019-05-15T15:19:25Z\",published_at:\"2019-05-15T15:20:53Z\",assets:[],tarball_url:\"https://api.github.com/repos/Codertocat/Hello-World/tarball/0.0.1\",zipball_url:\"https://api.github.com/repos/Codertocat/Hello-World/zipball/0.0.1\",body:null},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:41Z\",pushed_at:\"2019-05-15T15:20:52Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},repository:{action:\"publicized\",repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:21:03Z\",pushed_at:\"2019-05-15T15:20:57Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},repository_dispatch:{action:\"on-demand-test\",branch:\"master\",client_payload:{unit:!1,integration:!0},repository:{id:17273051,node_id:\"MDEwOlJlcG9zaXRvcnkxNzI3MzA1MQ==\",name:\"octo-repo\",full_name:\"octo-org/octo-repo\",private:!0,owner:{login:\"octo-org\",id:6811672,node_id:\"MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=\",avatar_url:\"https://avatars3.githubusercontent.com/u/6811672?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/octo-org\",html_url:\"https://github.com/octo-org\",followers_url:\"https://api.github.com/users/octo-org/followers\",following_url:\"https://api.github.com/users/octo-org/following{/other_user}\",gists_url:\"https://api.github.com/users/octo-org/gists{/gist_id}\",starred_url:\"https://api.github.com/users/octo-org/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/octo-org/subscriptions\",organizations_url:\"https://api.github.com/users/octo-org/orgs\",repos_url:\"https://api.github.com/users/octo-org/repos\",events_url:\"https://api.github.com/users/octo-org/events{/privacy}\",received_events_url:\"https://api.github.com/users/octo-org/received_events\",type:\"Organization\",site_admin:!1},html_url:\"https://github.com/octo-org/octo-repo\",description:\"My first repo on GitHub!\",fork:!1,url:\"https://api.github.com/repos/octo-org/octo-repo\",forks_url:\"https://api.github.com/repos/octo-org/octo-repo/forks\",keys_url:\"https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/octo-org/octo-repo/teams\",hooks_url:\"https://api.github.com/repos/octo-org/octo-repo/hooks\",issue_events_url:\"https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}\",events_url:\"https://api.github.com/repos/octo-org/octo-repo/events\",assignees_url:\"https://api.github.com/repos/octo-org/octo-repo/assignees{/user}\",branches_url:\"https://api.github.com/repos/octo-org/octo-repo/branches{/branch}\",tags_url:\"https://api.github.com/repos/octo-org/octo-repo/tags\",blobs_url:\"https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}\",languages_url:\"https://api.github.com/repos/octo-org/octo-repo/languages\",stargazers_url:\"https://api.github.com/repos/octo-org/octo-repo/stargazers\",contributors_url:\"https://api.github.com/repos/octo-org/octo-repo/contributors\",subscribers_url:\"https://api.github.com/repos/octo-org/octo-repo/subscribers\",subscription_url:\"https://api.github.com/repos/octo-org/octo-repo/subscription\",commits_url:\"https://api.github.com/repos/octo-org/octo-repo/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/octo-org/octo-repo/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/octo-org/octo-repo/contents/{+path}\",compare_url:\"https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/octo-org/octo-repo/merges\",archive_url:\"https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/octo-org/octo-repo/downloads\",issues_url:\"https://api.github.com/repos/octo-org/octo-repo/issues{/number}\",pulls_url:\"https://api.github.com/repos/octo-org/octo-repo/pulls{/number}\",milestones_url:\"https://api.github.com/repos/octo-org/octo-repo/milestones{/number}\",notifications_url:\"https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/octo-org/octo-repo/labels{/name}\",releases_url:\"https://api.github.com/repos/octo-org/octo-repo/releases{/id}\",deployments_url:\"https://api.github.com/repos/octo-org/octo-repo/deployments\",created_at:\"2014-02-28T02:42:51Z\",updated_at:\"2018-10-10T15:58:51Z\",pushed_at:\"2018-10-10T15:58:47Z\",git_url:\"git://github.com/octo-org/octo-repo.git\",ssh_url:\"git@github.com:octo-org/octo-repo.git\",clone_url:\"https://github.com/octo-org/octo-repo.git\",svn_url:\"https://github.com/octo-org/octo-repo\",homepage:\"\",size:59,stargazers_count:0,watchers_count:0,language:\"JavaScript\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!1,forks_count:1,mirror_url:null,archived:!1,open_issues_count:23,license:null,forks:1,open_issues:23,watchers:0,default_branch:\"master\"},organization:{login:\"octo-org\",id:6811672,node_id:\"MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=\",url:\"https://api.github.com/orgs/octo-org\",repos_url:\"https://api.github.com/orgs/octo-org/repos\",events_url:\"https://api.github.com/orgs/octo-org/events\",hooks_url:\"https://api.github.com/orgs/octo-org/hooks\",issues_url:\"https://api.github.com/orgs/octo-org/issues\",members_url:\"https://api.github.com/orgs/octo-org/members{/member}\",public_members_url:\"https://api.github.com/orgs/octo-org/public_members{/member}\",avatar_url:\"https://avatars3.githubusercontent.com/u/6811672?v=4\",description:\"Working better together!\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},installation:{id:375706,node_id:\"MDIzOkludGVncmF0aW9uSW5zdGFsbGF0aW9uMzc1NzA2\"}},repository_import:{status:\"success\",repository:{id:135493233,node_id:\"MDEwOlJlcG9zaXRvcnkxMzU0OTMyMzM=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},private:!1,html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2018-05-30T20:18:04Z\",updated_at:\"2018-05-30T20:18:49Z\",pushed_at:\"2018-05-30T20:18:48Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\"},organization:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",url:\"https://api.github.com/orgs/Octocoders\",repos_url:\"https://api.github.com/orgs/Octocoders/repos\",events_url:\"https://api.github.com/orgs/Octocoders/events\",hooks_url:\"https://api.github.com/orgs/Octocoders/hooks\",issues_url:\"https://api.github.com/orgs/Octocoders/issues\",members_url:\"https://api.github.com/orgs/Octocoders/members{/member}\",public_members_url:\"https://api.github.com/orgs/Octocoders/public_members{/member}\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",description:\"\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},repository_vulnerability_alert:{action:\"create\",alert:{id:91095730,affected_range:\">= 2.0.4, < 2.0.6\",affected_package_name:\"rack\",external_reference:\"https://nvd.nist.gov/vuln/detail/CVE-2018-16470\",external_identifier:\"CVE-2018-16470\",fixed_in:\"2.0.6\"},repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:19:27Z\",pushed_at:\"2019-05-15T15:20:32Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:null,has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"github\",id:9919,node_id:\"MDEyOk9yZ2FuaXphdGlvbjk5MTk=\",avatar_url:\"https://avatars1.githubusercontent.com/u/9919?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/github\",html_url:\"https://github.com/github\",followers_url:\"https://api.github.com/users/github/followers\",following_url:\"https://api.github.com/users/github/following{/other_user}\",gists_url:\"https://api.github.com/users/github/gists{/gist_id}\",starred_url:\"https://api.github.com/users/github/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/github/subscriptions\",organizations_url:\"https://api.github.com/users/github/orgs\",repos_url:\"https://api.github.com/users/github/repos\",events_url:\"https://api.github.com/users/github/events{/privacy}\",received_events_url:\"https://api.github.com/users/github/received_events\",type:\"Organization\",site_admin:!1}},security_advisory:{action:\"published\",security_advisory:{ghsa_id:\"GHSA-rf4j-j272-fj86\",summary:\"Moderate severity vulnerability that affects django\",description:\"django.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive.\",severity:\"moderate\",identifiers:[{value:\"GHSA-rf4j-j272-fj86\",type:\"GHSA\"},{value:\"CVE-2018-6188\",type:\"CVE\"}],references:[{url:\"https://nvd.nist.gov/vuln/detail/CVE-2018-6188\"}],published_at:\"2018-10-03T21:13:54Z\",updated_at:\"2018-10-03T21:13:54Z\",withdrawn_at:null,vulnerabilities:[{package:{ecosystem:\"pip\",name:\"django\"},severity:\"moderate\",vulnerable_version_range:\">= 2.0.0, < 2.0.2\",first_patched_version:{identifier:\"2.0.2\"}},{package:{ecosystem:\"pip\",name:\"django\"},severity:\"moderate\",vulnerable_version_range:\">= 1.11.8, < 1.11.10\",first_patched_version:{identifier:\"1.11.10\"}}]}},sponsorship:{action:\"created\",sponsorship:{node_id:\"MDExOlNwb25zb3JzaGlwMQ==\",created_at:\"2019-12-20T19:24:46+00:00\",sponsorable:{login:\"octocat\",id:5,node_id:\"MDQ6VXNlcjU=\",avatar_url:\"https://avatars2.githubusercontent.com/u/5?\",gravatar_id:\"\",url:\"https://api.github.com/users/octocat\",html_url:\"https://github.com/octocat\",followers_url:\"https://api.github.com/users/octocat/followers\",following_url:\"https://api.github.com/users/octocat/following{/other_user}\",gists_url:\"https://api.github.com/users/octocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/octocat/subscriptions\",organizations_url:\"https://api.github.com/users/octocat/orgs\",repos_url:\"https://api.github.com/users/octocat/repos\",events_url:\"https://api.github.com/users/octocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/octocat/received_events\",type:\"User\",site_admin:!1},sponsor:{login:\"monalisa\",id:2,node_id:\"MDQ6VXNlcjI=\",avatar_url:\"https://avatars2.githubusercontent.com/u/2?\",gravatar_id:\"\",url:\"https://api.github.com/users/monalisa\",html_url:\"https://github.com/monalisa\",followers_url:\"https://api.github.com/users/monalisa/followers\",following_url:\"https://api.github.com/users/monalisa/following{/other_user}\",gists_url:\"https://api.github.com/users/monalisa/gists{/gist_id}\",starred_url:\"https://api.github.com/users/monalisa/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/monalisa/subscriptions\",organizations_url:\"https://api.github.com/users/monalisa/orgs\",repos_url:\"https://api.github.com/users/monalisa/repos\",events_url:\"https://api.github.com/users/monalisa/events{/privacy}\",received_events_url:\"https://api.github.com/users/monalisa/received_events\",type:\"User\",site_admin:!0},privacy_level:\"public\",tier:{node_id:\"MDEyOlNwb25zb3JzVGllcjE=\",created_at:\"2019-12-20T19:17:05Z\",description:\"foo\",monthly_price_in_cents:500,monthly_price_in_dollars:5,name:\"$5 a month\"}},sender:{login:\"monalisa\",id:2,node_id:\"MDQ6VXNlcjI=\",avatar_url:\"https://avatars2.githubusercontent.com/u/2?\",gravatar_id:\"\",url:\"https://api.github.com/users/monalisa\",html_url:\"https://github.com/monalisa\",followers_url:\"https://api.github.com/users/monalisa/followers\",following_url:\"https://api.github.com/users/monalisa/following{/other_user}\",gists_url:\"https://api.github.com/users/monalisa/gists{/gist_id}\",starred_url:\"https://api.github.com/users/monalisa/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/monalisa/subscriptions\",organizations_url:\"https://api.github.com/users/monalisa/orgs\",repos_url:\"https://api.github.com/users/monalisa/repos\",events_url:\"https://api.github.com/users/monalisa/events{/privacy}\",received_events_url:\"https://api.github.com/users/monalisa/received_events\",type:\"User\",site_admin:!0}},star:{action:\"created\",starred_at:\"2019-05-15T15:20:40Z\",repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:40Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:1,watchers_count:1,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:1,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},status:{id:6805126730,sha:\"6113728f27ae82c7b1a177c8d03f9e96e0adf246\",name:\"Codertocat/Hello-World\",target_url:null,context:\"default\",description:null,state:\"success\",commit:{sha:\"6113728f27ae82c7b1a177c8d03f9e96e0adf246\",node_id:\"MDY6Q29tbWl0MTg2ODUzMDAyOjYxMTM3MjhmMjdhZTgyYzdiMWExNzdjOGQwM2Y5ZTk2ZTBhZGYyNDY=\",commit:{author:{name:\"Codertocat\",email:\"21031067+Codertocat@users.noreply.github.com\",date:\"2019-05-15T15:19:25Z\"},committer:{name:\"GitHub\",email:\"noreply@github.com\",date:\"2019-05-15T15:19:25Z\"},message:\"Initial commit\",tree:{sha:\"1b13fc88733f95cc8cb16170f6990ef30d78acf4\",url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees/1b13fc88733f95cc8cb16170f6990ef30d78acf4\"},url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits/6113728f27ae82c7b1a177c8d03f9e96e0adf246\",comment_count:1,verification:{verified:!0,reason:\"valid\",signature:\"-----BEGIN PGP SIGNATURE-----\\n\\nwsBcBAABCAAQBQJc3C39CRBK7hj4Ov3rIwAAdHIIABvaC0PQWgtUDQ5cz8ISR/Gf\\npQYSuDMeeRa90wXzafPYowzID+UNU2eaRD4ak1bhb7kYVsZnPhUt5jTLKzr4Zuq8\\nvt9ucrUvLDQWUZe2jX4wipM8ykWIlDho+9OAoocbVAn0kPBZEqJK74fH0Uj8vUfw\\nIX71oq7XYsd2iGi9iMrYczr3aTe4EyQoYj/R+aAuRlLwU5LVciuyl0AmxMQXJ+qn\\nowTpROWvXb1HijQZgx2x1lAEBzvahOiayOsJ+ZZ1DZX1lpXaSoeAjth1t2ckHlWW\\n907fehmtX2cfccfrTLJC55QdhWU305ZtUoNRTp7TrdUecXnQcWKFcMmE/Yx1vps=\\n=LQlK\\n-----END PGP SIGNATURE-----\\n\",payload:\"tree 1b13fc88733f95cc8cb16170f6990ef30d78acf4\\nauthor Codertocat <21031067+Codertocat@users.noreply.github.com> 1557933565 -0500\\ncommitter GitHub <noreply@github.com> 1557933565 -0500\\n\\nInitial commit\"}},url:\"https://api.github.com/repos/Codertocat/Hello-World/commits/6113728f27ae82c7b1a177c8d03f9e96e0adf246\",html_url:\"https://github.com/Codertocat/Hello-World/commit/6113728f27ae82c7b1a177c8d03f9e96e0adf246\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits/6113728f27ae82c7b1a177c8d03f9e96e0adf246/comments\",author:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},committer:{login:\"web-flow\",id:19864447,node_id:\"MDQ6VXNlcjE5ODY0NDQ3\",avatar_url:\"https://avatars3.githubusercontent.com/u/19864447?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/web-flow\",html_url:\"https://github.com/web-flow\",followers_url:\"https://api.github.com/users/web-flow/followers\",following_url:\"https://api.github.com/users/web-flow/following{/other_user}\",gists_url:\"https://api.github.com/users/web-flow/gists{/gist_id}\",starred_url:\"https://api.github.com/users/web-flow/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/web-flow/subscriptions\",organizations_url:\"https://api.github.com/users/web-flow/orgs\",repos_url:\"https://api.github.com/users/web-flow/repos\",events_url:\"https://api.github.com/users/web-flow/events{/privacy}\",received_events_url:\"https://api.github.com/users/web-flow/received_events\",type:\"User\",site_admin:!1},parents:[]},branches:[{name:\"master\",commit:{sha:\"f95f852bd8fca8fcc58a9a2d6c842781e32a215e\",url:\"https://api.github.com/repos/Codertocat/Hello-World/commits/f95f852bd8fca8fcc58a9a2d6c842781e32a215e\"},protected:!1},{name:\"changes\",commit:{sha:\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\",url:\"https://api.github.com/repos/Codertocat/Hello-World/commits/ec26c3e57ca3a959ca5aad62de7213c562f8c821\"},protected:!1},{name:\"gh-pages\",commit:{sha:\"507fc9acd0d04ac4a9db87d12cb228c052cd813a\",url:\"https://api.github.com/repos/Codertocat/Hello-World/commits/507fc9acd0d04ac4a9db87d12cb228c052cd813a\"},protected:!1}],created_at:\"2019-05-15T15:20:55+00:00\",updated_at:\"2019-05-15T15:20:55+00:00\",repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:41Z\",pushed_at:\"2019-05-15T15:20:52Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:1,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:1,open_issues:2,watchers:0,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},team:{action:\"added_to_repository\",team:{name:\"github\",id:3253328,node_id:\"MDQ6VGVhbTMyNTMzMjg=\",slug:\"github\",description:\"Open-source team\",privacy:\"secret\",url:\"https://api.github.com/teams/3253328\",html_url:\"https://github.com/orgs/Octocoders/teams/github\",members_url:\"https://api.github.com/teams/3253328/members{/member}\",repositories_url:\"https://api.github.com/teams/3253328/repos\",permission:\"pull\"},repository:{id:186853261,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMyNjE=\",name:\"Hello-World\",full_name:\"Octocoders/Hello-World\",private:!1,owner:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Octocoders\",html_url:\"https://github.com/Octocoders\",followers_url:\"https://api.github.com/users/Octocoders/followers\",following_url:\"https://api.github.com/users/Octocoders/following{/other_user}\",gists_url:\"https://api.github.com/users/Octocoders/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Octocoders/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Octocoders/subscriptions\",organizations_url:\"https://api.github.com/users/Octocoders/orgs\",repos_url:\"https://api.github.com/users/Octocoders/repos\",events_url:\"https://api.github.com/users/Octocoders/events{/privacy}\",received_events_url:\"https://api.github.com/users/Octocoders/received_events\",type:\"Organization\",site_admin:!1},html_url:\"https://github.com/Octocoders/Hello-World\",description:null,fork:!0,url:\"https://api.github.com/repos/Octocoders/Hello-World\",forks_url:\"https://api.github.com/repos/Octocoders/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Octocoders/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Octocoders/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Octocoders/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Octocoders/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Octocoders/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Octocoders/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Octocoders/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Octocoders/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Octocoders/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Octocoders/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Octocoders/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Octocoders/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Octocoders/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Octocoders/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Octocoders/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Octocoders/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Octocoders/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Octocoders/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Octocoders/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Octocoders/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Octocoders/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Octocoders/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Octocoders/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Octocoders/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Octocoders/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Octocoders/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Octocoders/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Octocoders/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Octocoders/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Octocoders/Hello-World/deployments\",created_at:\"2019-05-15T15:20:42Z\",updated_at:\"2019-05-15T15:20:45Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Octocoders/Hello-World.git\",ssh_url:\"git@github.com:Octocoders/Hello-World.git\",clone_url:\"https://github.com/Octocoders/Hello-World.git\",svn_url:\"https://github.com/Octocoders/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!1,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!1,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:0,license:null,forks:0,open_issues:0,watchers:0,default_branch:\"master\",permissions:{pull:!0,push:!1,admin:!1}},organization:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",url:\"https://api.github.com/orgs/Octocoders\",repos_url:\"https://api.github.com/orgs/Octocoders/repos\",events_url:\"https://api.github.com/orgs/Octocoders/events\",hooks_url:\"https://api.github.com/orgs/Octocoders/hooks\",issues_url:\"https://api.github.com/orgs/Octocoders/issues\",members_url:\"https://api.github.com/orgs/Octocoders/members{/member}\",public_members_url:\"https://api.github.com/orgs/Octocoders/public_members{/member}\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",description:\"\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},team_add:{team:{name:\"github\",id:3253328,node_id:\"MDQ6VGVhbTMyNTMzMjg=\",slug:\"github\",description:\"Open-source team\",privacy:\"secret\",url:\"https://api.github.com/teams/3253328\",html_url:\"https://github.com/orgs/Octocoders/teams/github\",members_url:\"https://api.github.com/teams/3253328/members{/member}\",repositories_url:\"https://api.github.com/teams/3253328/repos\",permission:\"pull\"},repository:{id:186853261,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMyNjE=\",name:\"Hello-World\",full_name:\"Octocoders/Hello-World\",private:!1,owner:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Octocoders\",html_url:\"https://github.com/Octocoders\",followers_url:\"https://api.github.com/users/Octocoders/followers\",following_url:\"https://api.github.com/users/Octocoders/following{/other_user}\",gists_url:\"https://api.github.com/users/Octocoders/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Octocoders/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Octocoders/subscriptions\",organizations_url:\"https://api.github.com/users/Octocoders/orgs\",repos_url:\"https://api.github.com/users/Octocoders/repos\",events_url:\"https://api.github.com/users/Octocoders/events{/privacy}\",received_events_url:\"https://api.github.com/users/Octocoders/received_events\",type:\"Organization\",site_admin:!1},html_url:\"https://github.com/Octocoders/Hello-World\",description:null,fork:!0,url:\"https://api.github.com/repos/Octocoders/Hello-World\",forks_url:\"https://api.github.com/repos/Octocoders/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Octocoders/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Octocoders/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Octocoders/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Octocoders/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Octocoders/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Octocoders/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Octocoders/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Octocoders/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Octocoders/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Octocoders/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Octocoders/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Octocoders/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Octocoders/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Octocoders/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Octocoders/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Octocoders/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Octocoders/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Octocoders/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Octocoders/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Octocoders/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Octocoders/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Octocoders/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Octocoders/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Octocoders/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Octocoders/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Octocoders/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Octocoders/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Octocoders/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Octocoders/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Octocoders/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Octocoders/Hello-World/deployments\",created_at:\"2019-05-15T15:20:42Z\",updated_at:\"2019-05-15T15:20:45Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Octocoders/Hello-World.git\",ssh_url:\"git@github.com:Octocoders/Hello-World.git\",clone_url:\"https://github.com/Octocoders/Hello-World.git\",svn_url:\"https://github.com/Octocoders/Hello-World\",homepage:null,size:0,stargazers_count:0,watchers_count:0,language:\"Ruby\",has_issues:!1,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!1,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:0,license:null,forks:0,open_issues:0,watchers:0,default_branch:\"master\"},organization:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",url:\"https://api.github.com/orgs/Octocoders\",repos_url:\"https://api.github.com/orgs/Octocoders/repos\",events_url:\"https://api.github.com/orgs/Octocoders/events\",hooks_url:\"https://api.github.com/orgs/Octocoders/hooks\",issues_url:\"https://api.github.com/orgs/Octocoders/issues\",members_url:\"https://api.github.com/orgs/Octocoders/members{/member}\",public_members_url:\"https://api.github.com/orgs/Octocoders/public_members{/member}\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",description:\"\"},sender:{login:\"Octocoders\",id:38302899,node_id:\"MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5\",avatar_url:\"https://avatars1.githubusercontent.com/u/38302899?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Octocoders\",html_url:\"https://github.com/Octocoders\",followers_url:\"https://api.github.com/users/Octocoders/followers\",following_url:\"https://api.github.com/users/Octocoders/following{/other_user}\",gists_url:\"https://api.github.com/users/Octocoders/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Octocoders/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Octocoders/subscriptions\",organizations_url:\"https://api.github.com/users/Octocoders/orgs\",repos_url:\"https://api.github.com/users/Octocoders/repos\",events_url:\"https://api.github.com/users/Octocoders/events{/privacy}\",received_events_url:\"https://api.github.com/users/Octocoders/received_events\",type:\"Organization\",site_admin:!1}},watch:{action:\"started\",repository:{id:186853002,node_id:\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=\",name:\"Hello-World\",full_name:\"Codertocat/Hello-World\",private:!1,owner:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},html_url:\"https://github.com/Codertocat/Hello-World\",description:null,fork:!1,url:\"https://api.github.com/repos/Codertocat/Hello-World\",forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",created_at:\"2019-05-15T15:19:25Z\",updated_at:\"2019-05-15T15:20:40Z\",pushed_at:\"2019-05-15T15:20:33Z\",git_url:\"git://github.com/Codertocat/Hello-World.git\",ssh_url:\"git@github.com:Codertocat/Hello-World.git\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",svn_url:\"https://github.com/Codertocat/Hello-World\",homepage:null,size:0,stargazers_count:1,watchers_count:1,language:\"Ruby\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!0,forks_count:0,mirror_url:null,archived:!1,disabled:!1,open_issues_count:2,license:null,forks:0,open_issues:2,watchers:1,default_branch:\"master\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1}},workflow_dispatch:{inputs:{name:\"Mona the Octocat\"},ref:\"refs/heads/master\",repository:{id:17273051,node_id:\"MDEwOlJlcG9zaXRvcnkxNzI3MzA1MQ==\",name:\"octo-repo\",full_name:\"octo-org/octo-repo\",private:!0,owner:{login:\"octo-org\",id:6811672,node_id:\"MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=\",avatar_url:\"https://avatars3.githubusercontent.com/u/6811672?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/octo-org\",html_url:\"https://github.com/octo-org\",followers_url:\"https://api.github.com/users/octo-org/followers\",following_url:\"https://api.github.com/users/octo-org/following{/other_user}\",gists_url:\"https://api.github.com/users/octo-org/gists{/gist_id}\",starred_url:\"https://api.github.com/users/octo-org/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/octo-org/subscriptions\",organizations_url:\"https://api.github.com/users/octo-org/orgs\",repos_url:\"https://api.github.com/users/octo-org/repos\",events_url:\"https://api.github.com/users/octo-org/events{/privacy}\",received_events_url:\"https://api.github.com/users/octo-org/received_events\",type:\"Organization\",site_admin:!1},html_url:\"https://github.com/octo-org/octo-repo\",description:\"My first repo on GitHub!\",fork:!1,url:\"https://api.github.com/repos/octo-org/octo-repo\",forks_url:\"https://api.github.com/repos/octo-org/octo-repo/forks\",keys_url:\"https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}\",collaborators_url:\"https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}\",teams_url:\"https://api.github.com/repos/octo-org/octo-repo/teams\",hooks_url:\"https://api.github.com/repos/octo-org/octo-repo/hooks\",issue_events_url:\"https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}\",events_url:\"https://api.github.com/repos/octo-org/octo-repo/events\",assignees_url:\"https://api.github.com/repos/octo-org/octo-repo/assignees{/user}\",branches_url:\"https://api.github.com/repos/octo-org/octo-repo/branches{/branch}\",tags_url:\"https://api.github.com/repos/octo-org/octo-repo/tags\",blobs_url:\"https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}\",git_tags_url:\"https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}\",git_refs_url:\"https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}\",trees_url:\"https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}\",statuses_url:\"https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}\",languages_url:\"https://api.github.com/repos/octo-org/octo-repo/languages\",stargazers_url:\"https://api.github.com/repos/octo-org/octo-repo/stargazers\",contributors_url:\"https://api.github.com/repos/octo-org/octo-repo/contributors\",subscribers_url:\"https://api.github.com/repos/octo-org/octo-repo/subscribers\",subscription_url:\"https://api.github.com/repos/octo-org/octo-repo/subscription\",commits_url:\"https://api.github.com/repos/octo-org/octo-repo/commits{/sha}\",git_commits_url:\"https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}\",comments_url:\"https://api.github.com/repos/octo-org/octo-repo/comments{/number}\",issue_comment_url:\"https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}\",contents_url:\"https://api.github.com/repos/octo-org/octo-repo/contents/{+path}\",compare_url:\"https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}\",merges_url:\"https://api.github.com/repos/octo-org/octo-repo/merges\",archive_url:\"https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}\",downloads_url:\"https://api.github.com/repos/octo-org/octo-repo/downloads\",issues_url:\"https://api.github.com/repos/octo-org/octo-repo/issues{/number}\",pulls_url:\"https://api.github.com/repos/octo-org/octo-repo/pulls{/number}\",milestones_url:\"https://api.github.com/repos/octo-org/octo-repo/milestones{/number}\",notifications_url:\"https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}\",labels_url:\"https://api.github.com/repos/octo-org/octo-repo/labels{/name}\",releases_url:\"https://api.github.com/repos/octo-org/octo-repo/releases{/id}\",deployments_url:\"https://api.github.com/repos/octo-org/octo-repo/deployments\",created_at:\"2014-02-28T02:42:51Z\",updated_at:\"2018-10-10T15:58:51Z\",pushed_at:\"2018-10-10T15:58:47Z\",git_url:\"git://github.com/octo-org/octo-repo.git\",ssh_url:\"git@github.com:octo-org/octo-repo.git\",clone_url:\"https://github.com/octo-org/octo-repo.git\",svn_url:\"https://github.com/octo-org/octo-repo\",homepage:\"\",size:59,stargazers_count:0,watchers_count:0,language:\"JavaScript\",has_issues:!0,has_projects:!0,has_downloads:!0,has_wiki:!0,has_pages:!1,forks_count:1,mirror_url:null,archived:!1,open_issues_count:23,license:null,forks:1,open_issues:23,watchers:0,default_branch:\"master\"},organization:{login:\"octo-org\",id:6811672,node_id:\"MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=\",url:\"https://api.github.com/orgs/octo-org\",repos_url:\"https://api.github.com/orgs/octo-org/repos\",events_url:\"https://api.github.com/orgs/octo-org/events\",hooks_url:\"https://api.github.com/orgs/octo-org/hooks\",issues_url:\"https://api.github.com/orgs/octo-org/issues\",members_url:\"https://api.github.com/orgs/octo-org/members{/member}\",public_members_url:\"https://api.github.com/orgs/octo-org/public_members{/member}\",avatar_url:\"https://avatars3.githubusercontent.com/u/6811672?v=4\",description:\"Working better together!\"},sender:{login:\"Codertocat\",id:21031067,node_id:\"MDQ6VXNlcjIxMDMxMDY3\",avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",gravatar_id:\"\",url:\"https://api.github.com/users/Codertocat\",html_url:\"https://github.com/Codertocat\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",repos_url:\"https://api.github.com/users/Codertocat/repos\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",type:\"User\",site_admin:!1},workflow:\".github/workflows/hello-world-workflow.yml\"},workflow_run:{action:\"completed\",organization:{avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",description:\"\",events_url:\"https://api.github.com/orgs/Octocoders/events\",hooks_url:\"https://api.github.com/orgs/Octocoders/hooks\",id:33435682,issues_url:\"https://api.github.com/orgs/Octocoders/issues\",login:\"Codertocat\",members_url:\"https://api.github.com/orgs/Octocoders/members{/member}\",node_id:\"MDQ6VXNlcjIxMDMxMDY3\",public_members_url:\"https://api.github.com/orgs/Octocoders/public_members{/member}\",repos_url:\"https://api.github.com/orgs/Octocoders/repos\",url:\"https://api.github.com/orgs/Codertocat\"},repository:{archive_url:\"https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}\",archived:!1,assignees_url:\"https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}\",blobs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}\",branches_url:\"https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}\",clone_url:\"https://github.com/Codertocat/Hello-World.git\",collaborators_url:\"https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}\",comments_url:\"https://api.github.com/repos/Codertocat/Hello-World/comments{/number}\",commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}\",compare_url:\"https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}\",contents_url:\"https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}\",contributors_url:\"https://api.github.com/repos/Codertocat/Hello-World/contributors\",created_at:\"2020-07-29T09:57:16Z\",default_branch:\"main\",deployments_url:\"https://api.github.com/repos/Codertocat/Hello-World/deployments\",description:null,disabled:!1,downloads_url:\"https://api.github.com/repos/Codertocat/Hello-World/downloads\",events_url:\"https://api.github.com/repos/Codertocat/Hello-World/events\",fork:!1,forks:0,forks_count:0,forks_url:\"https://api.github.com/repos/Codertocat/Hello-World/forks\",full_name:\"Codertocat/Hello-World\",git_commits_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}\",git_refs_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}\",git_tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}\",git_url:\"git://github.com/Codertocat/Hello-World.git\",has_downloads:!0,has_issues:!0,has_pages:!1,has_projects:!0,has_wiki:!0,homepage:null,hooks_url:\"https://api.github.com/repos/Codertocat/Hello-World/hooks\",html_url:\"https://github.com/Codertocat/Hello-World\",id:283462325,issue_comment_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}\",issue_events_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}\",issues_url:\"https://api.github.com/repos/Codertocat/Hello-World/issues{/number}\",keys_url:\"https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}\",labels_url:\"https://api.github.com/repos/Codertocat/Hello-World/labels{/name}\",language:null,languages_url:\"https://api.github.com/repos/Codertocat/Hello-World/languages\",license:null,merges_url:\"https://api.github.com/repos/Codertocat/Hello-World/merges\",milestones_url:\"https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}\",mirror_url:null,name:\"Hello-World\",node_id:\"MDEwOlJlcG9zaXRvcnkyODM0NjIzMjU=\",notifications_url:\"https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}\",open_issues:0,open_issues_count:0,owner:{avatar_url:\"https://avatars1.githubusercontent.com/u/21031067?v=4\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",gravatar_id:\"\",html_url:\"https://github.com/Codertocat\",id:33435682,login:\"Codertocat\",node_id:\"MDEyOk9yZ2FuaXphdGlvbjMzNDM1Njgy\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",repos_url:\"https://api.github.com/users/Codertocat/repos\",site_admin:!1,starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",type:\"Organization\",url:\"https://api.github.com/users/Codertocat\"},private:!0,pulls_url:\"https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}\",pushed_at:\"2020-07-29T10:06:16Z\",releases_url:\"https://api.github.com/repos/Codertocat/Hello-World/releases{/id}\",size:0,ssh_url:\"git@github.com:Codertocat/Hello-World.git\",stargazers_count:0,stargazers_url:\"https://api.github.com/repos/Codertocat/Hello-World/stargazers\",statuses_url:\"https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}\",subscribers_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscribers\",subscription_url:\"https://api.github.com/repos/Codertocat/Hello-World/subscription\",svn_url:\"https://github.com/Codertocat/Hello-World\",tags_url:\"https://api.github.com/repos/Codertocat/Hello-World/tags\",teams_url:\"https://api.github.com/repos/Codertocat/Hello-World/teams\",trees_url:\"https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}\",updated_at:\"2020-07-29T10:06:18Z\",url:\"https://api.github.com/repos/Codertocat/Hello-World\",watchers:0,watchers_count:0},sender:{avatar_url:\"https://avatars3.githubusercontent.com/u/54248166?v=4\",events_url:\"https://api.github.com/users/Codertocat/events{/privacy}\",followers_url:\"https://api.github.com/users/Codertocat/followers\",following_url:\"https://api.github.com/users/Codertocat/following{/other_user}\",gists_url:\"https://api.github.com/users/Codertocat/gists{/gist_id}\",gravatar_id:\"\",html_url:\"https://github.com/Codertocat\",id:54248166,login:\"Codertocat\",node_id:\"MDEwOkNoZWNrU3VpdGUxMTg1NzgxNDc=\",organizations_url:\"https://api.github.com/users/Codertocat/orgs\",received_events_url:\"https://api.github.com/users/Codertocat/received_events\",repos_url:\"https://api.github.com/users/Codertocat/repos\",site_admin:!0,starred_url:\"https://api.github.com/users/Codertocat/starred{/owner}{/repo}\",subscriptions_url:\"https://api.github.com/users/Codertocat/subscriptions\",type:\"User\",url:\"https://api.github.com/users/Codertocat\"}}};function Yt(t){return Pt({},...t.map(t=>Vt[t]))}function St(t){if(t&&t.on){const e=Yt(Object.keys(t.on));if(null==t?void 0:t.on.workflow_dispatch){e.inputs={};for(const r of Object.keys(t.on.workflow_dispatch.inputs||{})){var o;e.inputs[r]=(null===(o=t.on.workflow_dispatch.inputs[r])||void 0===o?void 0:o.default)||\"<provided input>\"}}return e}return Yt([\"push\"])}function Qt(t,o){const e=o.indexOf(\"jobs\");if(-1!==e&&!(e>=o.length-2))return tt(o.slice(0,e+2),t)}class Gt{constructor(t,o,e){this.workflow=void 0,this.path=void 0,this.secrets=void 0,this.workflow=t,this.path=o,this.secrets=e}get(t){var o,e;switch(t){case\"github\":return{event:St(this.workflow),event_path:\"\",workflow:(null===(o=this.workflow)||void 0===o?void 0:o.name)||\"workflow.yaml\",job:\"\",run_id:\"42\",run_number:\"23\",actor:\"monalisa\",repository:\"repository\",repository_owner:\"repository_owner\",event_name:(null===(e=this.workflow)||void 0===e?void 0:e.on)&&Object.keys(this.workflow.on)[0]||\"push\",sha:\"6113728f27ae82c7b1a177c8d03f9e96e0adf246\",ref:\"main\",head_ref:\"refs/heads/branch\",base_ref:\"refs/heads/main\",token:\"***\",workspace:\"\",action:\"\",action_path:\"\"};case\"env\":let t={};return this.workflow&&tt(this.path,this.workflow,o=>{if(o.env){const e={...o.env};for(const o of Object.keys(e)){const r=e[o];if(l(r))try{e[o]=it(r,{get:o=>\"env\"===o?t:this.get(o)})}catch(t){}}t={...t,...e}}}),t;case\"runner\":return{os:\"macOS\",temp:\"/tmp\",tool_cache:\"/tmp/cache\"};case\"job\":{const t=Qt(this.workflow,this.path);return t?{status:\"success\",container:{id:\"\",network:\"\"},services:t.services}:{}}case\"needs\":{var r;const t=Qt(this.workflow,this.path);return t&&(null===(r=t.needs)||void 0===r?void 0:r.reduce((t,o)=>{const e=this.workflow.jobs[o].outputs||{};for(const t of Object.keys(e))l(e[t])&&(e[t]=c);return{...t,[o]:{result:\"success\",outputs:e}}},{}))||{}}case\"matrix\":{var s;const t=Qt(this.workflow,this.path);if(!t)return{};if(null===(s=t.strategy)||void 0===s?void 0:s.matrix){if(\"string\"==typeof t.strategy.matrix)return mt;const o={};for(const e of t.strategy.matrix)for(const t of Object.keys(e))o[t]=!0;return o}return{}}case\"strategy\":{const t=Qt(this.workflow,this.path);return(null==t?void 0:t.strategy)||{}}case\"steps\":{const t=this.path.map(t=>Array.isArray(t)?t[0]:t).indexOf(\"steps\");if(-1===t)return{};const o=Qt(this.workflow,this.path);if(!o)return{};const e=tt(this.path.slice(0,t+1),this.workflow),r=o.steps.indexOf(e);return-1===r?{}:o.steps.slice(0,r+1).reduce((t,o,e)=>({...t,[o.id||`${e}`]:{outputs:mt,outcome:\"success\",conclusion:\"success\"}}),{})}case\"secrets\":return Array.isArray(this.secrets)?this.secrets.reduce((t,o)=>(t[o]=\"***\",t),{}):mt}}}function qt(t,o){try{var e=t()}catch(t){return o(t)}return e&&e.then?e.then(void 0,o):e}function Lt(t,o){return{get:function(e,r){try{function s(){return new Gt(e,r,i)}let i;const l=qt(function(){return Promise.resolve(o.get(`${t.owner}/${t.repository}/secrets`,t.timeToCacheResponsesInMS,function(){try{var o;if(!(null==t||null===(o=t.client)||void 0===o?void 0:o.actions))return Promise.resolve(mt);const e=new Set([\"GITHUB_TOKEN\"]),r=[];return r.push(function(){try{return Promise.resolve(t.client.actions.listRepoSecrets({owner:t.owner,repo:t.repository})).then(function(t){t.data.secrets.forEach(t=>e.add(t.name))})}catch(t){return Promise.reject(t)}}()),t.ownerIsOrg&&t.orgFeaturesEnabled&&r.push(function(){try{const o=qt(function(){return Promise.resolve(t.client.actions.listOrgSecrets({org:t.owner,repo:t.repository})).then(function(t){t.data.secrets.forEach(t=>e.add(t.name))})},function(t){console.error(t),e.add(\":: Could not retrieve org secrets {e.?message}\")});return Promise.resolve(o&&o.then?o.then(function(){}):void 0)}catch(t){return Promise.reject(t)}}()),Promise.resolve(Promise.all(r)).then(function(){return Array.from(e.values())})}catch(t){return Promise.reject(t)}})).then(function(t){i=t})},function(t){console.error(t),i=[\"GITHUB_TOKEN\",`:: Could not load secrets: ${null==t?void 0:t.message}`]});return Promise.resolve(l&&l.then?l.then(s):s())}catch(t){return Promise.reject(t)}}}}const Ft=[[\"check_run\",\"Runs your workflow anytime the check_run event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/checks/runs.\",[\"created\",\"rerequested\",\"completed\",\"requested_action\"]],[\"check_suite\",\"Runs your workflow anytime the check_suite event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/checks/suites/.\",[\"completed\",\"requested\",\"rerequested\"]],[\"create\",\"Runs your workflow anytime someone creates a branch or tag, which triggers the create event. For information about the REST API, see https://developer.github.com/v3/git/refs/#create-a-reference.\",[]],[\"delete\",\"Runs your workflow anytime someone deletes a branch or tag, which triggers the delete event. For information about the REST API, see https://developer.github.com/v3/git/refs/#delete-a-reference.\",[]],[\"deployment\",\"Runs your workflow anytime someone creates a deployment, which triggers the deployment event. Deployments created with a commit SHA may not have a Git ref. For information about the REST API, see https://developer.github.com/v3/repos/deployments/.\",[]],[\"deployment_status\",\"Runs your workflow anytime a third party provides a deployment status, which triggers the deployment_status event. Deployments created with a commit SHA may not have a Git ref. For information about the REST API, see https://developer.github.com/v3/repos/deployments/#create-a-deployment-status.\",[]],[\"fork\",\"Runs your workflow anytime when someone forks a repository, which triggers the fork event. For information about the REST API, see https://developer.github.com/v3/repos/forks/#create-a-fork.\",[]],[\"gollum\",\"Runs your workflow when someone creates or updates a Wiki page, which triggers the gollum event.\",[]],[\"issue_comment\",\"Runs your workflow anytime the issue_comment event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/issues/comments/.\",[]],[\"issues\",\"Runs your workflow anytime the issues event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/issues.\",[[\"opened\",\"\"],[\"edited\",\"\"],[\"deleted\",\"\"],[\"transferred\",\"\"],[\"pinned\",\"\"],[\"unpinned\",\"\"],[\"closed\",\"\"],[\"reopened\",\"\"],[\"assigned\",\"\"],[\"unassigned\",\"\"],[\"labeled\",\"\"],[\"unlabeled\",\"\"],[\"locked\",\"\"],[\"unlocked\",\"\"],[\"milestoned\",\"\"],[\"demilestoned\",\"\"]]],[\"label\",\"Runs your workflow anytime the label event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/issues/labels/.\",[\"created\",\"edited\",\"deleted\"]],[\"member\",\"Runs your workflow anytime the member event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/repos/collaborators/.\",[\"added\",\"edited\",\"deleted\"]],[\"milestone\",\"Runs your workflow anytime the milestone event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/issues/milestones/.\",[\"created\",\"closed\",\"opened\",\"edited\",\"deleted\"]],[\"page_build\",\"Runs your workflow anytime someone pushes to a GitHub Pages-enabled branch, which triggers the page_build event. For information about the REST API, see https://developer.github.com/v3/repos/pages/.\",[]],[\"project\",\"Runs your workflow anytime the project event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/projects/.\",[\"created\",\"updated\",\"closed\",\"reopened\",\"edited\",\"deleted\"]],[\"project_card\",\"Runs your workflow anytime the project_card event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/projects/cards.\",[\"created\",\"moved\",\"converted\",\"edited\",\"deleted\"]],[\"project_column\",\"Runs your workflow anytime the project_column event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/projects/columns.\",[\"created\",\"updated\",\"moved\",\"deleted\"]],[\"public\",\"Runs your workflow anytime someone makes a private repository public, which triggers the public event. For information about the REST API, see https://developer.github.com/v3/repos/#edit.\",[]],[\"pull_request\",\"Runs your workflow anytime the pull_request event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/pulls.\\nNote: Workflows do not run on private base repositories when you open a pull request from a forked repository.\\nWhen you create a pull request from a forked repository to the base repository, GitHub sends the pull_request event to the base repository and no pull request events occur on the forked repository.\\nWorkflows don't run on forked repositories by default. You must enable GitHub Actions in the Actions tab of the forked repository.\\nThe permissions for the GITHUB_TOKEN in forked repositories is read-only. For more information about the GITHUB_TOKEN, see https://help.github.com/en/articles/virtual-environments-for-github-actions.\",[[\"assigned\",\"\"],[\"unassigned\",\"\"],[\"labeled\",\"\"],[\"unlabeled\",\"\"],[\"opened\",\"\"],[\"edited\",\"\"],[\"closed\",\"\"],[\"reopened\",\"\"],[\"synchronize\",\"\"],[\"ready_for_review\",\"\"],[\"locked\",\"\"],[\"unlocked\",\"\"],[\"review_requested\",\"\"],[\"review_request_removed\",\"\"]]],[\"pull_request_review\",\"Runs your workflow anytime the pull_request_review event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/pulls/reviews.\\nNote: Workflows do not run on private base repositories when you open a pull request from a forked repository.\\nWhen you create a pull request from a forked repository to the base repository, GitHub sends the pull_request event to the base repository and no pull request events occur on the forked repository.\\nWorkflows don't run on forked repositories by default. You must enable GitHub Actions in the Actions tab of the forked repository.\\nThe permissions for the GITHUB_TOKEN in forked repositories is read-only. For more information about the GITHUB_TOKEN, see https://help.github.com/en/articles/virtual-environments-for-github-actions.\",[\"submitted\",\"edited\",\"dismissed\"]],[\"pull_request_review_comment\",\"Runs your workflow anytime a comment on a pull request's unified diff is modified, which triggers the pull_request_review_comment event. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/pulls/comments.\\nNote: Workflows do not run on private base repositories when you open a pull request from a forked repository.\\nWhen you create a pull request from a forked repository to the base repository, GitHub sends the pull_request event to the base repository and no pull request events occur on the forked repository.\\nWorkflows don't run on forked repositories by default. You must enable GitHub Actions in the Actions tab of the forked repository.\\nThe permissions for the GITHUB_TOKEN in forked repositories is read-only. For more information about the GITHUB_TOKEN, see https://help.github.com/en/articles/virtual-environments-for-github-actions.\",[\"created\",\"edited\",\"deleted\"]],[\"pull_request_target\",\"This event runs in the context of the base of the pull request, rather than in the merge commit as the `pull_request` event does. This prevents executing unsafe workflow code from the head of the pull request that could alter your repository or steal any secrets you use in your workflow. This event allows you to do things like create workflows that label and comment on pull requests based on the contents of the event payload.\",[[\"assigned\",\"\"],[\"unassigned\",\"\"],[\"labeled\",\"\"],[\"unlabeled\",\"\"],[\"opened\",\"\"],[\"edited\",\"\"],[\"closed\",\"\"],[\"reopened\",\"\"],[\"synchronize\",\"\"],[\"ready_for_review\",\"\"],[\"locked\",\"\"],[\"unlocked\",\"\"],[\"review_requested\",\"\"],[\"review_request_removed\",\"\"]]],[\"push\",\"Runs your workflow when someone pushes to a repository branch, which triggers the push event.\\nNote: The webhook payload available to GitHub Actions does not include the added, removed, and modified attributes in the commit object. You can retrieve the full commit object using the REST API. For more information, see https://developer.github.com/v3/repos/commits/#get-a-single-commit.\",[]],[\"registry_package\",\"\",[]],[\"release\",\"Runs your workflow anytime the release event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/repos/releases/.\",[\"published\",\"unpublished\",\"created\",\"edited\",\"deleted\",\"prereleased\"]],[\"repository_dispatch\",\"\",[]],[\"schedule\",\"You can schedule a workflow to run at specific UTC times using POSIX cron syntax (https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07). Scheduled workflows run on the latest commit on the default or base branch. The shortest interval you can run scheduled workflows is once every 5 minutes.\\nNote: GitHub Actions does not support the non-standard syntax @yearly, @monthly, @weekly, @daily, @hourly, and @reboot.\\nYou can use crontab guru (https://crontab.guru/). to help generate your cron syntax and confirm what time it will run. To help you get started, there is also a list of crontab guru examples (https://crontab.guru/examples.html).\",[]],[\"status\",\"Runs your workflow anytime the status of a Git commit changes, which triggers the status event. For information about the REST API, see https://developer.github.com/v3/repos/statuses/.\",[]],[\"watch\",\"Runs your workflow anytime the watch event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/activity/starring/.\",[]],[\"workflow_dispatch\",\"\",[]],[\"workflow_run\",\"\",[]]],Jt=Ft.map(([t,o])=>({value:t,description:o})),Bt={branches:{type:\"sequence\",itemDesc:{type:\"value\"}},\"branches-ignore\":{type:\"sequence\",itemDesc:{type:\"value\"}},tags:{type:\"sequence\",itemDesc:{type:\"value\"}},\"tags-ignore\":{type:\"sequence\",itemDesc:{type:\"value\"}},paths:{type:\"sequence\",itemDesc:{type:\"value\"}},\"paths-ignore\":{type:\"sequence\",itemDesc:{type:\"value\"}}},$t=Pt({},Ft.reduce((t,[o,e,r])=>({...t,[o]:{type:\"map\",description:e,keys:r.length>0&&{types:{type:\"sequence\",itemDesc:{type:\"value\",allowedValues:r.map(t=>({value:Array.isArray(t)?t[0]:t,description:Array.isArray(t)?t[1]:void 0}))}}}||void 0}}),{}),{push:{type:\"map\",keys:{...Bt}},pull_request:{type:\"map\",keys:{...Bt}},pull_request_target:{type:\"map\",keys:{...Bt}},schedule:{type:\"sequence\",itemDesc:{type:\"map\",keys:{cron:{type:\"value\"}},required:[\"cron\"]}},workflow_dispatch:{type:\"map\",description:\"Event that can be manually triggered\",keys:{inputs:{type:\"map\",itemDesc:{type:\"map\",keys:{required:{type:\"value\"},description:{type:\"value\"},default:{type:\"value\"}}}}}}}),Kt=function(t,o,e){try{const t=e[e.length-2];return Promise.resolve(t&&(null==o?void 0:o.jobs)&&Object.keys(o.jobs).filter(o=>o!==t).map(t=>({value:t}))||[])}catch(t){return Promise.reject(t)}},to=(t,o)=>function(r,s,i){try{if(!s)return Promise.resolve([]);\"with\"===i[i.length-1]&&i.pop();const r=tt(i,s);if(!r||!(\"uses\"in r)||\"remote\"!==r.uses.type)return Promise.resolve([]);const l=r.uses;return Promise.resolve(o.get(`${l.owner}/${l.repository}@${l.ref}`,36e5,function(){try{return Promise.resolve(function(t,o){try{let e;const r=function(){var r;if(null==t||null===(r=t.client)||void 0===r?void 0:r.repos)return Promise.resolve(t.client.repos.getContent({owner:o.owner,repo:o.repository,path:\"action.yml\",ref:o.ref})).then(function(r){function s(){var t,o;if(null===(t=r)||void 0===t||null===(o=t.data)||void 0===o?void 0:o.content){let t=Buffer.from(r.data.content,\"base64\").toString(\"utf-8\");return t=t.replace(\"\\0\",\"\"),e=1,t}}const i=function(){if(404===r.status)return Promise.resolve(t.client.repos.getContent({owner:o.owner,repo:o.repository,path:\"action.yaml\",ref:o.ref})).then(function(t){r=t})}();return i&&i.then?i.then(s):s()})}();return Promise.resolve(r&&r.then?r.then(function(t){return e?t:void 0}):e?r:void 0)}catch(t){return Promise.reject(t)}}(t,l)).then(function(t){if(t)try{const{inputs:o}=e.load(t,{json:!0});if(o)return Object.keys(o).map(t=>({value:t,description:`${o[t].description||\"\"} \\n\\nrequired: \\`${!!o[t].required}\\` \\n\\n${o[t].default&&`default:\\`${o[t].default}\\``||\"\"}`,validation:o[t].required?bt.Required:bt.None}))}catch(t){console.error(t)}})}catch(t){return Promise.reject(t)}}))}catch(t){return Promise.reject(t)}};function oo(t,o){try{var e=t()}catch(t){return o(t)}return e&&e.then?e.then(void 0,o):e}const eo=new class{constructor(t=6e5){this.defaultTTLinMS=void 0,this.cache=new Map,this.defaultTTLinMS=t}get(t,o,e){try{const r=this,s=r.cache.has(t),i=s&&r.cache.get(t);return s&&i&&i.cachedAt>Date.now()-(o||r.defaultTTLinMS)?Promise.resolve(i.content):Promise.resolve(function(o,s){try{var i=Promise.resolve(e()).then(function(o){return r.cache.set(t,{cachedAt:Date.now(),content:o}),o})}catch(t){return s(t)}return i&&i.then?i.then(void 0,s):i}(0,function(o){throw r.cache.delete(t),o}))}catch(t){return Promise.reject(t)}}},ro=t=>({type:\"value\",description:t}),so={type:\"value\",description:\"Concurreny group key. Expressions can use the `github` context.\",supportsExpression:!0},io={type:\"oneOf\",description:\"Concurrency ensures that only a single job or workflow using the same concurrency group will run at a time.\",oneOf:[so,{type:\"map\",keys:{group:so,\"cancel-in-progress\":{type:\"value\"}}}]},lo={type:\"value\",allowedValues:[{value:\"read\"},{value:\"write\"},{value:\"none\"}]},ao={type:\"oneOf\",description:\"Concurrency ensures that only a single job or workflow using the same concurrency group will run at a time.\",oneOf:[{type:\"value\",allowedValues:[{value:\"read-all\"},{value:\"write-all\"}]},{type:\"map\",keys:{actions:lo,checks:lo,contents:lo,deployments:lo,issues:lo,packages:lo,\"pull-requests\":lo,\"repository-projects\":lo,\"security-events\":lo,statuses:lo}}]},uo={type:\"map\",itemDesc:{type:\"value\"}},co={type:\"value\",allowedValues:[{value:\"bash\"},{value:\"pwsh\"},{value:\"python\"},{value:\"sh\"},{value:\"cmd\"},{value:\"powershell\"}],description:\"https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#custom-shell\"},po={type:\"map\",keys:{run:{type:\"map\",keys:{shell:co,\"working-directory\":ro()}}}},ho=()=>({type:\"map\",keys:{image:ro(\"The Docker image to use as the container to run the action. The value can be the Docker Hub image name or a public docker registry name.\"),env:uo,ports:{type:\"sequence\",itemDesc:ro(),description:\"Sets an array of ports to expose on the container.\"},volumes:{type:\"sequence\",itemDesc:ro(\"Pattern: ^[^:]+:[^:]+$\"),description:\"Sets an array of volumes for the container to use. You can use volumes to share data between services or other steps in a job. You can specify named Docker volumes, anonymous Docker volumes, or bind mounts on the host.\\nTo specify a volume, you specify the source and destination path: <source>:<destinationPath>\\nThe <source> is a volume name or an absolute path on the host machine, and <destinationPath> is an absolute path in the container.\"},options:ro(\"Additional Docker container resource options. For a list of options, see https://docs.docker.com/engine/reference/commandline/create/#options.\")},required:[\"image\"]}),no=t=>({type:\"value\",description:\"The type of machine to run the job on. The machine can be either a GitHub-hosted runner, or a self-hosted runner.\",supportsExpression:!0,customValueProvider:function(){try{return Promise.resolve(eo.get(`${t.owner}/${t.repository}/runs-on-labels`,t.timeToCacheResponsesInMS,function(){try{function o(){return Array.from(e.values()).map(t=>({value:t}))}const e=new Set([\"ubuntu-latest\",\"ubuntu-20.04\",\"ubuntu-18.04\",\"ubuntu-16.04\",\"windows-latest\",\"windows-2019\",\"macos-latest\",\"macos-11\",\"macos-10.15\",\"self-hosted\"]),r=function(){var o;if(null==t||null===(o=t.client)||void 0===o?void 0:o.actions){const o=oo(function(){return Promise.resolve(t.client.actions.listSelfHostedRunnersForRepo({owner:t.owner,repo:t.repository})).then(function(t){t&&t.data.runners&&t.data.runners.forEach(t=>{var o;return null==t||null===(o=t.labels)||void 0===o?void 0:o.forEach(t=>e.add(t.name))})})},function(t){console.log(\"Error while retrieving runner labels, falling back to defaults\",t)});if(o&&o.then)return o.then(function(){})}}();return Promise.resolve(r&&r.then?r.then(o):o())}catch(t){return Promise.reject(t)}}))}catch(t){return Promise.reject(t)}}}),mo=t=>({type:\"value\",description:\"The environment that the job references. All environment protection rules must pass before a job referencing the environment is sent to a runner.\",supportsExpression:!0,customValueProvider:function(){try{return Promise.resolve(eo.get(`${t.owner}/${t.repository}/environment-names`,t.timeToCacheResponsesInMS,function(){try{let o;const e=function(){var e;if(null==t||null===(e=t.client)||void 0===e?void 0:e.repos)return oo(function(){return Promise.resolve(t.client.repos.getAllEnvironments({owner:t.owner,repo:t.repository})).then(function(t){if(t&&t.data.environments)return o=1,t.data.environments.map(t=>{var o;return{value:t.name,description:(null===(o=t.protection_rules)||void 0===o?void 0:o.length)?`Protection rules:\\n${t.protection_rules.map(t=>`- ${t.type}`).join(\"\\n\")}\\n\\nLearn more: [Protection rules](https://docs.github.com/en/actions/reference/environments#environment-protection-rules)`:void 0}})})},function(t){console.log(\"Error while retrieving environments\",t)})}();return Promise.resolve(e&&e.then?e.then(function(t){return o?t:void 0}):o?e:void 0)}catch(t){return Promise.reject(t)}}))}catch(t){return Promise.reject(t)}}}),go=t=>({type:\"map\",keys:{name:ro(\"Optional custom name for this job\"),concurrency:io,permissions:ao,env:uo,needs:{type:\"oneOf\",oneOf:[{type:\"value\",customValueProvider:Kt},{type:\"sequence\",itemDesc:{type:\"value\",customValueProvider:Kt}}]},outputs:{type:\"map\"},environment:{description:\"The environment that the job references. All environment protection rules must pass before a job referencing the environment is sent to a runner. For more information, see [Environments](https://docs.github.com/en/free-pro-team@latest/actions/reference/environments).\\n\\nYou can provide the environment as only the environment `name`, or as an environment object with the `name` and `url`.\",type:\"oneOf\",oneOf:[mo(t),{type:\"map\",keys:{name:mo(t),url:ro(\"The URL maps to `environment_url` in the deployments API. For more information about the deployments API, see [Deployments](https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#deployments).\\n\\nThe URL can be an expression and can use any context except for the `secrets` context.\")},required:[\"name\"]}]},defaults:po,if:{type:\"value\",isExpression:!0},\"timeout-minutes\":ro(),\"continue-on-error\":ro(),container:ho(),services:{type:\"map\",itemDesc:ho(),description:\"Additional containers to host services for a job in a workflow. These are useful for creating databases or cache services like redis. The runner on the virtual machine will automatically create a network and manage the life cycle of the service containers.\\nWhen you use a service container for a job or your step uses container actions, you don't need to set port information to access the service. Docker automatically exposes all ports between containers on the same network.\\nWhen both the job and the action run in a container, you can directly reference the container by its hostname. The hostname is automatically mapped to the service name.\\nWhen a step does not use a container action, you must access the service using localhost and bind the ports.\"},\"runs-on\":{type:\"oneOf\",oneOf:[no(t),{type:\"sequence\",itemDesc:no(t)}],description:\"The type of machine to run the job on. The machine can be either a GitHub-hosted runner, or a self-hosted runner.\"},steps:{type:\"sequence\",itemDesc:{type:\"map\",keys:{id:ro(\"A unique identifier for the step. You can use the id to reference the step in contexts. For more information, see https://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions.\"),if:{type:\"value\",isExpression:!0},name:ro(\"Optional custom name for the step\"),uses:ro(),run:ro(\"Runs command-line programs using the operating system's shell. If you do not provide a `name`, the step name will default to the text specified in the `run` command.\"),\"working-directory\":ro(),shell:co,with:{type:\"map\",customValueProvider:to(t,eo)},env:uo,\"continue-on-error\":ro(),\"timeout-minutes\":ro()}}},strategy:{type:\"map\",keys:{matrix:{type:\"oneOf\",oneOf:[{type:\"map\",allowUnknownKeys:!0,itemDesc:{type:\"sequence\"},keys:{include:{type:\"sequence\",itemDesc:{type:\"map\"}},exclude:{type:\"sequence\",itemDesc:{type:\"map\"}}}},{type:\"value\",description:\"A matrix strategy can also be set using an expression. For example: `matrix: ${{fromJSON(needs.job1.outputs.matrix)}}`\"}],description:\"A build matrix is a set of different configurations of the virtual environment. For example you might run a job against more than one supported version of a language, operating system, or tool. Each configuration is a copy of the job that runs and reports a status.\\nYou can specify a matrix by supplying an array for the configuration options. For example, if the GitHub virtual environment supports Node.js versions 6, 8, and 10 you could specify an array of those versions in the matrix.\\nWhen you define a matrix of operating systems, you must set the required runs-on keyword to the operating system of the current job, rather than hard-coding the operating system name. To access the operating system name, you can use the matrix.os context parameter to set runs-on. For more information, see https://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions.\"},\"fail-fast\":ro(\"When set to true, GitHub cancels all in-progress jobs if any matrix job fails. Default: true\"),\"max-parallel\":ro(\"The maximum number of jobs that can run simultaneously when using a matrix job strategy. By default, GitHub will maximize the number of jobs run in parallel depending on the available runners on GitHub-hosted virtual machines.\")},required:[\"matrix\"]}},required:[\"runs-on\",\"steps\"]});function bo(t){return{type:\"map\",keys:{name:ro(\"Name of the workflow\"),concurrency:io,defaults:po,env:uo,permissions:ao,on:{type:\"oneOf\",oneOf:[{type:\"value\",allowedValues:Jt},{type:\"sequence\",itemDesc:{type:\"value\",allowedValues:Jt}},{type:\"map\",keys:$t}]},jobs:{type:\"map\",itemDesc:go(t)}},required:[\"on\",\"jobs\"]}}exports.ExpressionParser=B,exports.complete=function(t,o,e,r){try{return Promise.resolve(function(t,o,e,r,s){try{const[i,l,a]=function(t,o){const e=t.split(\"\\n\"),r=t.substring(0,o).split(\"\").filter(t=>\"\\n\"===t).length,s=o-e.slice(0,r).reduce((t,o)=>t+o.length+1,0),i=e[r];let l=i.trim();if(-1===l.indexOf(\"${{\")){const t=i.indexOf(\":\");if(-1===t){const t=i.trim();if(\"\"===t||\"-\"===t){let l=\"\";\"-\"!==t||i.endsWith(\" \")||(l=\" \",o++),e[r]=i.substring(0,s)+l+\"dummy\"+(\"-\"===t?\"\":\":\")+i.substring(s),o++}else t.startsWith(\"-\")||(e[r]=i+\":\");t.startsWith(\"-\")&&(l=t.substring(t.indexOf(\"-\")+1).trim())}else l=(o>t?i.substring(t+1):i.substring(0,t)).trim(),o-=1}return[e.join(\"\\n\"),o,l]}(o,e);return Promise.resolve(Mt(t,i,r,s)).then(function(t){let r;function i(o){if(r)return o;if(u.kind===lt.SCALAR)return Nt(u,e,pt(u),t.workflow,s);throw new Error(\"Could not find schema for node\")}if(!t.workflow)return[];const u=ct(t.workflowST,l),c=t.nodeToDesc.get(u),p=function(){if(c)return Promise.resolve(Et(u,c,o,a,l,t,s)).then(function(t){return(t=t||[]).sort((t,o)=>t.value.localeCompare(o.value)),r=1,t})}();return p&&p.then?p.then(i):i(p)})}catch(t){return Promise.reject(t)}}(o,e,r,bo(t),Lt(t,eo)))}catch(t){return Promise.reject(t)}},exports.evaluateExpression=st,exports.findNode=ct,exports.hover=function(t,o,e,r){try{return Promise.resolve(function(t,o,e,r,s){try{return Promise.resolve(Mt(t,o,r,s)).then(function(t){const o=ct(t.workflowST,e),r=t.nodeToDesc.get(o);if(r)return Zt(o,r,e,t.workflow,s)})}catch(t){return Promise.reject(t)}}(o,e,r,bo(t),Lt(t,eo)))}catch(t){return Promise.reject(t)}},exports.inPos=ut,exports.parse=function(t,o,e){try{return Promise.resolve(Mt(o,e,bo(t),Lt(t,eo)))}catch(t){return Promise.reject(t)}};\n//# sourceMappingURL=index.js.map\n","'use strict';\n\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\n\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nmodule.exports.Type                = require('./lib/type');\nmodule.exports.Schema              = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.YAMLException       = require('./lib/exception');\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad            = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump            = renamed('safeDump', 'dump');\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nmodule.exports.dump = dump;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar makeSnippet         = require('./snippet');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = makeSnippet(mark);\n\n  return new YAMLException(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nmodule.exports.loadAll = loadAll;\nmodule.exports.load    = load;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  return this.extend(definition);\n}\n\n\nSchema.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof Type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new YAMLException('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type.multi) {\n      throw new YAMLException('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit', []);\n  result.compiledExplicit = compileList(result, 'explicit', []);\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nmodule.exports = Schema;\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nmodule.exports = require('./json');\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nmodule.exports = require('./core').extend({\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nmodule.exports = require('./failsafe').extend({\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","'use strict';\n\n\nvar common = require('./common');\n\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nmodule.exports = makeSnippet;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\n\nvar Type = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * line-column - Convert efficiently index to/from line-column in a string\n * @module  lineColumn\n * @license MIT\n */\n\"use strict\";\n\nvar isArray  = require(\"isarray\");\nvar isObject = require(\"isobject\");\nvar slice = Array.prototype.slice;\n\nmodule.exports = LineColumnFinder;\n\n/**\n * Finder for index and line-column from given string.\n *\n * You can call this without `new` operator as it returns an instance anyway.\n *\n * @class\n * @param {string} str - A string to be parsed.\n * @param {Object|number} [options] - Options.\n *     This can be an index in the string for shorthand of `lineColumn(str, index)`.\n * @param {number} [options.origin=1] - The origin value of line and column.\n */\nfunction LineColumnFinder(str, options) {\n  if (!(this instanceof LineColumnFinder)) {\n    if (typeof options === \"number\") {\n      return (new LineColumnFinder(str)).fromIndex(options);\n    }\n    return new LineColumnFinder(str, options);\n  }\n\n  this.str = str || \"\";\n  this.lineToIndex = buildLineToIndex(this.str);\n\n  options = options || {};\n  this.origin = typeof options.origin === \"undefined\" ? 1 : options.origin;\n}\n\n/**\n * Find line and column from index in the string.\n *\n * @param  {number} index - Index in the string. (0-origin)\n * @return {Object|null}\n *     Found line number and column number in object `{ line: X, col: Y }`.\n *     If the given index is out of range, it returns `null`.\n */\nLineColumnFinder.prototype.fromIndex = function (index) {\n  if (index < 0 || index >= this.str.length || isNaN(index)) {\n    return null;\n  }\n\n  var line = findLowerIndexInRangeArray(index, this.lineToIndex);\n  return {\n    line: line + this.origin,\n    col:  index - this.lineToIndex[line] + this.origin\n  };\n}\n\n/**\n * Find index from line and column in the string.\n *\n * @param  {number|Object|Array} line - Line number in the string.\n *     This can be an Object of `{ line: X, col: Y }`, or\n *     an Array of `[line, col]`.\n * @param  {number} [column] - Column number in the string.\n *     This must be omitted or undefined when Object or Array is given\n *     to the first argument.\n * @return {number}\n *     Found index in the string. (always 0-origin)\n *     If the given line or column is out of range, it returns `-1`.\n */\nLineColumnFinder.prototype.toIndex = function (line, column) {\n  if (typeof column === \"undefined\") {\n    if (isArray(line) && line.length >= 2) {\n      return this.toIndex(line[0], line[1]);\n    }\n    if (isObject(line) && \"line\" in line && (\"col\" in line || \"column\" in line)) {\n      return this.toIndex(line.line, (\"col\" in line ? line.col : line.column));\n    }\n    return -1;\n  }\n  if (isNaN(line) || isNaN(column)) {\n    return -1;\n  }\n\n  line -= this.origin;\n  column -= this.origin;\n\n  if (line >= 0 && column >= 0 && line < this.lineToIndex.length) {\n    var lineIndex = this.lineToIndex[line];\n    var nextIndex = (\n      line === this.lineToIndex.length - 1\n        ? this.str.length\n        : this.lineToIndex[line + 1]\n    );\n\n    if (column < nextIndex - lineIndex) {\n      return lineIndex + column;\n    }\n  }\n  return -1;\n}\n\n/**\n * Build an array of indexes of each line from a string.\n *\n * @private\n * @param   str {string}  An input string.\n * @return  {number[]}    Built array of indexes. The key is line number.\n */\nfunction buildLineToIndex(str) {\n  var lines = str.split(\"\\n\"),\n      lineToIndex = new Array(lines.length),\n      index = 0;\n\n  for (var i = 0, l = lines.length; i < l; i++) {\n    lineToIndex[i] = index;\n    index += lines[i].length + /* \"\\n\".length */ 1;\n  }\n  return lineToIndex;\n}\n\n/**\n * Find a lower-bound index of a value in a sorted array of ranges.\n *\n * Assume `arr = [0, 5, 10, 15, 20]` and\n * this returns `1` for `value = 7` (5 <= value < 10),\n * and returns `3` for `value = 18` (15 <= value < 20).\n *\n * @private\n * @param  arr   {number[]} An array of values representing ranges.\n * @param  value {number}   A value to be searched.\n * @return {number} Found index. If not found `-1`.\n */\nfunction findLowerIndexInRangeArray(value, arr) {\n  if (value >= arr[arr.length - 1]) {\n    return arr.length - 1;\n  }\n\n  var min = 0, max = arr.length - 2, mid;\n  while (min < max) {\n    mid = min + ((max - min) >> 1);\n\n    if (value < arr[mid]) {\n      max = mid - 1;\n    } else if (value >= arr[mid + 1]) {\n      min = mid + 1;\n    } else { // value >= arr[mid] && value < arr[mid + 1]\n      min = mid;\n      break;\n    }\n  }\n  return min;\n}\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isArray = require('isarray');\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && isArray(val) === false;\n};\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n",";(function(root, factory) {\n    // istanbul ignore next\n    if (typeof define === \"function\" && define.amd) {\n        // istanbul ignore next\n        define([], factory)\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory()\n    } else {\n        // istanbul ignore next\n        root.regexpToAst = factory()\n    }\n})(\n    typeof self !== \"undefined\"\n        ? // istanbul ignore next\n          self\n        : this,\n    function() {\n        // references\n        // https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n        // https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\n        function RegExpParser() {}\n\n        RegExpParser.prototype.saveState = function() {\n            return {\n                idx: this.idx,\n                input: this.input,\n                groupIdx: this.groupIdx\n            }\n        }\n\n        RegExpParser.prototype.restoreState = function(newState) {\n            this.idx = newState.idx\n            this.input = newState.input\n            this.groupIdx = newState.groupIdx\n        }\n\n        RegExpParser.prototype.pattern = function(input) {\n            // parser state\n            this.idx = 0\n            this.input = input\n            this.groupIdx = 0\n\n            this.consumeChar(\"/\")\n            var value = this.disjunction()\n            this.consumeChar(\"/\")\n\n            var flags = {\n                type: \"Flags\",\n                loc: { begin: this.idx, end: input.length },\n                global: false,\n                ignoreCase: false,\n                multiLine: false,\n                unicode: false,\n                sticky: false\n            }\n\n            while (this.isRegExpFlag()) {\n                switch (this.popChar()) {\n                    case \"g\":\n                        addFlag(flags, \"global\")\n                        break\n                    case \"i\":\n                        addFlag(flags, \"ignoreCase\")\n                        break\n                    case \"m\":\n                        addFlag(flags, \"multiLine\")\n                        break\n                    case \"u\":\n                        addFlag(flags, \"unicode\")\n                        break\n                    case \"y\":\n                        addFlag(flags, \"sticky\")\n                        break\n                }\n            }\n\n            if (this.idx !== this.input.length) {\n                throw Error(\n                    \"Redundant input: \" + this.input.substring(this.idx)\n                )\n            }\n            return {\n                type: \"Pattern\",\n                flags: flags,\n                value: value,\n                loc: this.loc(0)\n            }\n        }\n\n        RegExpParser.prototype.disjunction = function() {\n            var alts = []\n            var begin = this.idx\n\n            alts.push(this.alternative())\n\n            while (this.peekChar() === \"|\") {\n                this.consumeChar(\"|\")\n                alts.push(this.alternative())\n            }\n\n            return { type: \"Disjunction\", value: alts, loc: this.loc(begin) }\n        }\n\n        RegExpParser.prototype.alternative = function() {\n            var terms = []\n            var begin = this.idx\n\n            while (this.isTerm()) {\n                terms.push(this.term())\n            }\n\n            return { type: \"Alternative\", value: terms, loc: this.loc(begin) }\n        }\n\n        RegExpParser.prototype.term = function() {\n            if (this.isAssertion()) {\n                return this.assertion()\n            } else {\n                return this.atom()\n            }\n        }\n\n        RegExpParser.prototype.assertion = function() {\n            var begin = this.idx\n            switch (this.popChar()) {\n                case \"^\":\n                    return {\n                        type: \"StartAnchor\",\n                        loc: this.loc(begin)\n                    }\n                case \"$\":\n                    return { type: \"EndAnchor\", loc: this.loc(begin) }\n                // '\\b' or '\\B'\n                case \"\\\\\":\n                    switch (this.popChar()) {\n                        case \"b\":\n                            return {\n                                type: \"WordBoundary\",\n                                loc: this.loc(begin)\n                            }\n                        case \"B\":\n                            return {\n                                type: \"NonWordBoundary\",\n                                loc: this.loc(begin)\n                            }\n                    }\n                    // istanbul ignore next\n                    throw Error(\"Invalid Assertion Escape\")\n                // '(?=' or '(?!'\n                case \"(\":\n                    this.consumeChar(\"?\")\n\n                    var type\n                    switch (this.popChar()) {\n                        case \"=\":\n                            type = \"Lookahead\"\n                            break\n                        case \"!\":\n                            type = \"NegativeLookahead\"\n                            break\n                    }\n                    ASSERT_EXISTS(type)\n\n                    var disjunction = this.disjunction()\n\n                    this.consumeChar(\")\")\n\n                    return {\n                        type: type,\n                        value: disjunction,\n                        loc: this.loc(begin)\n                    }\n            }\n            // istanbul ignore next\n            ASSERT_NEVER_REACH_HERE()\n        }\n\n        RegExpParser.prototype.quantifier = function(isBacktracking) {\n            var range\n            var begin = this.idx\n            switch (this.popChar()) {\n                case \"*\":\n                    range = {\n                        atLeast: 0,\n                        atMost: Infinity\n                    }\n                    break\n                case \"+\":\n                    range = {\n                        atLeast: 1,\n                        atMost: Infinity\n                    }\n                    break\n                case \"?\":\n                    range = {\n                        atLeast: 0,\n                        atMost: 1\n                    }\n                    break\n                case \"{\":\n                    var atLeast = this.integerIncludingZero()\n                    switch (this.popChar()) {\n                        case \"}\":\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atLeast\n                            }\n                            break\n                        case \",\":\n                            var atMost\n                            if (this.isDigit()) {\n                                atMost = this.integerIncludingZero()\n                                range = {\n                                    atLeast: atLeast,\n                                    atMost: atMost\n                                }\n                            } else {\n                                range = {\n                                    atLeast: atLeast,\n                                    atMost: Infinity\n                                }\n                            }\n                            this.consumeChar(\"}\")\n                            break\n                    }\n                    // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                    // causes severe performance degradations\n                    if (isBacktracking === true && range === undefined) {\n                        return undefined\n                    }\n                    ASSERT_EXISTS(range)\n                    break\n            }\n\n            // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n            // causes severe performance degradations\n            if (isBacktracking === true && range === undefined) {\n                return undefined\n            }\n\n            ASSERT_EXISTS(range)\n\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\")\n                range.greedy = false\n            } else {\n                range.greedy = true\n            }\n\n            range.type = \"Quantifier\"\n            range.loc = this.loc(begin)\n            return range\n        }\n\n        RegExpParser.prototype.atom = function() {\n            var atom\n            var begin = this.idx\n            switch (this.peekChar()) {\n                case \".\":\n                    atom = this.dotAll()\n                    break\n                case \"\\\\\":\n                    atom = this.atomEscape()\n                    break\n                case \"[\":\n                    atom = this.characterClass()\n                    break\n                case \"(\":\n                    atom = this.group()\n                    break\n            }\n\n            if (atom === undefined && this.isPatternCharacter()) {\n                atom = this.patternCharacter()\n            }\n\n            ASSERT_EXISTS(atom)\n\n            atom.loc = this.loc(begin)\n\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier()\n            }\n\n            return atom\n        }\n\n        RegExpParser.prototype.dotAll = function() {\n            this.consumeChar(\".\")\n            return {\n                type: \"Set\",\n                complement: true,\n                value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")]\n            }\n        }\n\n        RegExpParser.prototype.atomEscape = function() {\n            this.consumeChar(\"\\\\\")\n\n            switch (this.peekChar()) {\n                case \"1\":\n                case \"2\":\n                case \"3\":\n                case \"4\":\n                case \"5\":\n                case \"6\":\n                case \"7\":\n                case \"8\":\n                case \"9\":\n                    return this.decimalEscapeAtom()\n                case \"d\":\n                case \"D\":\n                case \"s\":\n                case \"S\":\n                case \"w\":\n                case \"W\":\n                    return this.characterClassEscape()\n                case \"f\":\n                case \"n\":\n                case \"r\":\n                case \"t\":\n                case \"v\":\n                    return this.controlEscapeAtom()\n                case \"c\":\n                    return this.controlLetterEscapeAtom()\n                case \"0\":\n                    return this.nulCharacterAtom()\n                case \"x\":\n                    return this.hexEscapeSequenceAtom()\n                case \"u\":\n                    return this.regExpUnicodeEscapeSequenceAtom()\n                default:\n                    return this.identityEscapeAtom()\n            }\n        }\n\n        RegExpParser.prototype.decimalEscapeAtom = function() {\n            var value = this.positiveInteger()\n\n            return { type: \"GroupBackReference\", value: value }\n        }\n\n        RegExpParser.prototype.characterClassEscape = function() {\n            var set\n            var complement = false\n            switch (this.popChar()) {\n                case \"d\":\n                    set = digitsCharCodes\n                    break\n                case \"D\":\n                    set = digitsCharCodes\n                    complement = true\n                    break\n                case \"s\":\n                    set = whitespaceCodes\n                    break\n                case \"S\":\n                    set = whitespaceCodes\n                    complement = true\n                    break\n                case \"w\":\n                    set = wordCharCodes\n                    break\n                case \"W\":\n                    set = wordCharCodes\n                    complement = true\n                    break\n            }\n\n            ASSERT_EXISTS(set)\n\n            return { type: \"Set\", value: set, complement: complement }\n        }\n\n        RegExpParser.prototype.controlEscapeAtom = function() {\n            var escapeCode\n            switch (this.popChar()) {\n                case \"f\":\n                    escapeCode = cc(\"\\f\")\n                    break\n                case \"n\":\n                    escapeCode = cc(\"\\n\")\n                    break\n                case \"r\":\n                    escapeCode = cc(\"\\r\")\n                    break\n                case \"t\":\n                    escapeCode = cc(\"\\t\")\n                    break\n                case \"v\":\n                    escapeCode = cc(\"\\v\")\n                    break\n            }\n            ASSERT_EXISTS(escapeCode)\n\n            return { type: \"Character\", value: escapeCode }\n        }\n\n        RegExpParser.prototype.controlLetterEscapeAtom = function() {\n            this.consumeChar(\"c\")\n            var letter = this.popChar()\n            if (/[a-zA-Z]/.test(letter) === false) {\n                throw Error(\"Invalid \")\n            }\n\n            var letterCode = letter.toUpperCase().charCodeAt(0) - 64\n            return { type: \"Character\", value: letterCode }\n        }\n\n        RegExpParser.prototype.nulCharacterAtom = function() {\n            // TODO implement '[lookahead ∉ DecimalDigit]'\n            // TODO: for the deprecated octal escape sequence\n            this.consumeChar(\"0\")\n            return { type: \"Character\", value: cc(\"\\0\") }\n        }\n\n        RegExpParser.prototype.hexEscapeSequenceAtom = function() {\n            this.consumeChar(\"x\")\n            return this.parseHexDigits(2)\n        }\n\n        RegExpParser.prototype.regExpUnicodeEscapeSequenceAtom = function() {\n            this.consumeChar(\"u\")\n            return this.parseHexDigits(4)\n        }\n\n        RegExpParser.prototype.identityEscapeAtom = function() {\n            // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n            // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n            var escapedChar = this.popChar()\n            return { type: \"Character\", value: cc(escapedChar) }\n        }\n\n        RegExpParser.prototype.classPatternCharacterAtom = function() {\n            switch (this.peekChar()) {\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                // istanbul ignore next\n                case \"\\\\\":\n                // istanbul ignore next\n                case \"]\":\n                    throw Error(\"TBD\")\n                default:\n                    var nextChar = this.popChar()\n                    return { type: \"Character\", value: cc(nextChar) }\n            }\n        }\n\n        RegExpParser.prototype.characterClass = function() {\n            var set = []\n            var complement = false\n            this.consumeChar(\"[\")\n            if (this.peekChar(0) === \"^\") {\n                this.consumeChar(\"^\")\n                complement = true\n            }\n\n            while (this.isClassAtom()) {\n                var from = this.classAtom()\n                var isFromSingleChar = from.type === \"Character\"\n                if (isFromSingleChar && this.isRangeDash()) {\n                    this.consumeChar(\"-\")\n                    var to = this.classAtom()\n                    var isToSingleChar = to.type === \"Character\"\n\n                    // a range can only be used when both sides are single characters\n                    if (isToSingleChar) {\n                        if (to.value < from.value) {\n                            throw Error(\"Range out of order in character class\")\n                        }\n                        set.push({ from: from.value, to: to.value })\n                    } else {\n                        // literal dash\n                        insertToSet(from.value, set)\n                        set.push(cc(\"-\"))\n                        insertToSet(to.value, set)\n                    }\n                } else {\n                    insertToSet(from.value, set)\n                }\n            }\n\n            this.consumeChar(\"]\")\n\n            return { type: \"Set\", complement: complement, value: set }\n        }\n\n        RegExpParser.prototype.classAtom = function() {\n            switch (this.peekChar()) {\n                // istanbul ignore next\n                case \"]\":\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                    throw Error(\"TBD\")\n                case \"\\\\\":\n                    return this.classEscape()\n                default:\n                    return this.classPatternCharacterAtom()\n            }\n        }\n\n        RegExpParser.prototype.classEscape = function() {\n            this.consumeChar(\"\\\\\")\n            switch (this.peekChar()) {\n                // Matches a backspace.\n                // (Not to be confused with \\b word boundary outside characterClass)\n                case \"b\":\n                    this.consumeChar(\"b\")\n                    return { type: \"Character\", value: cc(\"\\u0008\") }\n                case \"d\":\n                case \"D\":\n                case \"s\":\n                case \"S\":\n                case \"w\":\n                case \"W\":\n                    return this.characterClassEscape()\n                case \"f\":\n                case \"n\":\n                case \"r\":\n                case \"t\":\n                case \"v\":\n                    return this.controlEscapeAtom()\n                case \"c\":\n                    return this.controlLetterEscapeAtom()\n                case \"0\":\n                    return this.nulCharacterAtom()\n                case \"x\":\n                    return this.hexEscapeSequenceAtom()\n                case \"u\":\n                    return this.regExpUnicodeEscapeSequenceAtom()\n                default:\n                    return this.identityEscapeAtom()\n            }\n        }\n\n        RegExpParser.prototype.group = function() {\n            var capturing = true\n            this.consumeChar(\"(\")\n            switch (this.peekChar(0)) {\n                case \"?\":\n                    this.consumeChar(\"?\")\n                    this.consumeChar(\":\")\n                    capturing = false\n                    break\n                default:\n                    this.groupIdx++\n                    break\n            }\n            var value = this.disjunction()\n            this.consumeChar(\")\")\n\n            var groupAst = {\n                type: \"Group\",\n                capturing: capturing,\n                value: value\n            }\n\n            if (capturing) {\n                groupAst.idx = this.groupIdx\n            }\n\n            return groupAst\n        }\n\n        RegExpParser.prototype.positiveInteger = function() {\n            var number = this.popChar()\n\n            // istanbul ignore next - can't ever get here due to previous lookahead checks\n            // still implementing this error checking in case this ever changes.\n            if (decimalPatternNoZero.test(number) === false) {\n                throw Error(\"Expecting a positive integer\")\n            }\n\n            while (decimalPattern.test(this.peekChar(0))) {\n                number += this.popChar()\n            }\n\n            return parseInt(number, 10)\n        }\n\n        RegExpParser.prototype.integerIncludingZero = function() {\n            var number = this.popChar()\n            if (decimalPattern.test(number) === false) {\n                throw Error(\"Expecting an integer\")\n            }\n\n            while (decimalPattern.test(this.peekChar(0))) {\n                number += this.popChar()\n            }\n\n            return parseInt(number, 10)\n        }\n\n        RegExpParser.prototype.patternCharacter = function() {\n            var nextChar = this.popChar()\n            switch (nextChar) {\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                // istanbul ignore next\n                case \"^\":\n                // istanbul ignore next\n                case \"$\":\n                // istanbul ignore next\n                case \"\\\\\":\n                // istanbul ignore next\n                case \".\":\n                // istanbul ignore next\n                case \"*\":\n                // istanbul ignore next\n                case \"+\":\n                // istanbul ignore next\n                case \"?\":\n                // istanbul ignore next\n                case \"(\":\n                // istanbul ignore next\n                case \")\":\n                // istanbul ignore next\n                case \"[\":\n                // istanbul ignore next\n                case \"|\":\n                    // istanbul ignore next\n                    throw Error(\"TBD\")\n                default:\n                    return { type: \"Character\", value: cc(nextChar) }\n            }\n        }\n        RegExpParser.prototype.isRegExpFlag = function() {\n            switch (this.peekChar(0)) {\n                case \"g\":\n                case \"i\":\n                case \"m\":\n                case \"u\":\n                case \"y\":\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isRangeDash = function() {\n            return this.peekChar() === \"-\" && this.isClassAtom(1)\n        }\n\n        RegExpParser.prototype.isDigit = function() {\n            return decimalPattern.test(this.peekChar(0))\n        }\n\n        RegExpParser.prototype.isClassAtom = function(howMuch) {\n            if (howMuch === undefined) {\n                howMuch = 0\n            }\n\n            switch (this.peekChar(howMuch)) {\n                case \"]\":\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\u2028\":\n                case \"\\u2029\":\n                    return false\n                default:\n                    return true\n            }\n        }\n\n        RegExpParser.prototype.isTerm = function() {\n            return this.isAtom() || this.isAssertion()\n        }\n\n        RegExpParser.prototype.isAtom = function() {\n            if (this.isPatternCharacter()) {\n                return true\n            }\n\n            switch (this.peekChar(0)) {\n                case \".\":\n                case \"\\\\\": // atomEscape\n                case \"[\": // characterClass\n                // TODO: isAtom must be called before isAssertion - disambiguate\n                case \"(\": // group\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isAssertion = function() {\n            switch (this.peekChar(0)) {\n                case \"^\":\n                case \"$\":\n                    return true\n                // '\\b' or '\\B'\n                case \"\\\\\":\n                    switch (this.peekChar(1)) {\n                        case \"b\":\n                        case \"B\":\n                            return true\n                        default:\n                            return false\n                    }\n                // '(?=' or '(?!'\n                case \"(\":\n                    return (\n                        this.peekChar(1) === \"?\" &&\n                        (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\")\n                    )\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isQuantifier = function() {\n            var prevState = this.saveState()\n            try {\n                return this.quantifier(true) !== undefined\n            } catch (e) {\n                return false\n            } finally {\n                this.restoreState(prevState)\n            }\n        }\n\n        RegExpParser.prototype.isPatternCharacter = function() {\n            switch (this.peekChar()) {\n                case \"^\":\n                case \"$\":\n                case \"\\\\\":\n                case \".\":\n                case \"*\":\n                case \"+\":\n                case \"?\":\n                case \"(\":\n                case \")\":\n                case \"[\":\n                case \"|\":\n                case \"/\":\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\u2028\":\n                case \"\\u2029\":\n                    return false\n                default:\n                    return true\n            }\n        }\n\n        RegExpParser.prototype.parseHexDigits = function(howMany) {\n            var hexString = \"\"\n            for (var i = 0; i < howMany; i++) {\n                var hexChar = this.popChar()\n                if (hexDigitPattern.test(hexChar) === false) {\n                    throw Error(\"Expecting a HexDecimal digits\")\n                }\n                hexString += hexChar\n            }\n            var charCode = parseInt(hexString, 16)\n            return { type: \"Character\", value: charCode }\n        }\n\n        RegExpParser.prototype.peekChar = function(howMuch) {\n            if (howMuch === undefined) {\n                howMuch = 0\n            }\n            return this.input[this.idx + howMuch]\n        }\n\n        RegExpParser.prototype.popChar = function() {\n            var nextChar = this.peekChar(0)\n            this.consumeChar()\n            return nextChar\n        }\n\n        RegExpParser.prototype.consumeChar = function(char) {\n            if (char !== undefined && this.input[this.idx] !== char) {\n                throw Error(\n                    \"Expected: '\" +\n                        char +\n                        \"' but found: '\" +\n                        this.input[this.idx] +\n                        \"' at offset: \" +\n                        this.idx\n                )\n            }\n\n            if (this.idx >= this.input.length) {\n                throw Error(\"Unexpected end of input\")\n            }\n            this.idx++\n        }\n\n        RegExpParser.prototype.loc = function(begin) {\n            return { begin: begin, end: this.idx }\n        }\n\n        // consts and utilities\n        var hexDigitPattern = /[0-9a-fA-F]/\n        var decimalPattern = /[0-9]/\n        var decimalPatternNoZero = /[1-9]/\n\n        function cc(char) {\n            return char.charCodeAt(0)\n        }\n\n        function insertToSet(item, set) {\n            if (item.length !== undefined) {\n                item.forEach(function(subItem) {\n                    set.push(subItem)\n                })\n            } else {\n                set.push(item)\n            }\n        }\n\n        function addFlag(flagObj, flagKey) {\n            if (flagObj[flagKey] === true) {\n                throw \"duplicate flag \" + flagKey\n            }\n\n            flagObj[flagKey] = true\n        }\n\n        function ASSERT_EXISTS(obj) {\n            // istanbul ignore next\n            if (obj === undefined) {\n                throw Error(\"Internal Error - Should never get here!\")\n            }\n        }\n\n        // istanbul ignore next\n        function ASSERT_NEVER_REACH_HERE() {\n            throw Error(\"Internal Error - Should never get here!\")\n        }\n\n        var i\n        var digitsCharCodes = []\n        for (i = cc(\"0\"); i <= cc(\"9\"); i++) {\n            digitsCharCodes.push(i)\n        }\n\n        var wordCharCodes = [cc(\"_\")].concat(digitsCharCodes)\n        for (i = cc(\"a\"); i <= cc(\"z\"); i++) {\n            wordCharCodes.push(i)\n        }\n\n        for (i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n            wordCharCodes.push(i)\n        }\n\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\n        var whitespaceCodes = [\n            cc(\" \"),\n            cc(\"\\f\"),\n            cc(\"\\n\"),\n            cc(\"\\r\"),\n            cc(\"\\t\"),\n            cc(\"\\v\"),\n            cc(\"\\t\"),\n            cc(\"\\u00a0\"),\n            cc(\"\\u1680\"),\n            cc(\"\\u2000\"),\n            cc(\"\\u2001\"),\n            cc(\"\\u2002\"),\n            cc(\"\\u2003\"),\n            cc(\"\\u2004\"),\n            cc(\"\\u2005\"),\n            cc(\"\\u2006\"),\n            cc(\"\\u2007\"),\n            cc(\"\\u2008\"),\n            cc(\"\\u2009\"),\n            cc(\"\\u200a\"),\n            cc(\"\\u2028\"),\n            cc(\"\\u2029\"),\n            cc(\"\\u202f\"),\n            cc(\"\\u205f\"),\n            cc(\"\\u3000\"),\n            cc(\"\\ufeff\")\n        ]\n\n        function BaseRegExpVisitor() {}\n\n        BaseRegExpVisitor.prototype.visitChildren = function(node) {\n            for (var key in node) {\n                var child = node[key]\n                /* istanbul ignore else */\n                if (node.hasOwnProperty(key)) {\n                    if (child.type !== undefined) {\n                        this.visit(child)\n                    } else if (Array.isArray(child)) {\n                        child.forEach(function(subChild) {\n                            this.visit(subChild)\n                        }, this)\n                    }\n                }\n            }\n        }\n\n        BaseRegExpVisitor.prototype.visit = function(node) {\n            switch (node.type) {\n                case \"Pattern\":\n                    this.visitPattern(node)\n                    break\n                case \"Flags\":\n                    this.visitFlags(node)\n                    break\n                case \"Disjunction\":\n                    this.visitDisjunction(node)\n                    break\n                case \"Alternative\":\n                    this.visitAlternative(node)\n                    break\n                case \"StartAnchor\":\n                    this.visitStartAnchor(node)\n                    break\n                case \"EndAnchor\":\n                    this.visitEndAnchor(node)\n                    break\n                case \"WordBoundary\":\n                    this.visitWordBoundary(node)\n                    break\n                case \"NonWordBoundary\":\n                    this.visitNonWordBoundary(node)\n                    break\n                case \"Lookahead\":\n                    this.visitLookahead(node)\n                    break\n                case \"NegativeLookahead\":\n                    this.visitNegativeLookahead(node)\n                    break\n                case \"Character\":\n                    this.visitCharacter(node)\n                    break\n                case \"Set\":\n                    this.visitSet(node)\n                    break\n                case \"Group\":\n                    this.visitGroup(node)\n                    break\n                case \"GroupBackReference\":\n                    this.visitGroupBackReference(node)\n                    break\n                case \"Quantifier\":\n                    this.visitQuantifier(node)\n                    break\n            }\n\n            this.visitChildren(node)\n        }\n\n        BaseRegExpVisitor.prototype.visitPattern = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitFlags = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitDisjunction = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitAlternative = function(node) {}\n\n        // Assertion\n        BaseRegExpVisitor.prototype.visitStartAnchor = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitEndAnchor = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitWordBoundary = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitNonWordBoundary = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitLookahead = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitNegativeLookahead = function(node) {}\n\n        // atoms\n        BaseRegExpVisitor.prototype.visitCharacter = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitSet = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitGroup = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitGroupBackReference = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitQuantifier = function(node) {}\n\n        return {\n            RegExpParser: RegExpParser,\n            BaseRegExpVisitor: BaseRegExpVisitor,\n            VERSION: \"0.5.0\"\n        }\n    }\n)\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction getUserAgent() {\n  if (typeof navigator === \"object\" && \"userAgent\" in navigator) {\n    return navigator.userAgent;\n  }\n\n  if (typeof process === \"object\" && \"version\" in process) {\n    return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;\n  }\n\n  return \"<environment undetectable>\";\n}\n\nexports.getUserAgent = getUserAgent;\n//# sourceMappingURL=index.js.map\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isNothing(subject) {\n    return (typeof subject === 'undefined') || (null === subject);\n}\nexports.isNothing = isNothing;\nfunction isObject(subject) {\n    return (typeof subject === 'object') && (null !== subject);\n}\nexports.isObject = isObject;\nfunction toArray(sequence) {\n    if (Array.isArray(sequence)) {\n        return sequence;\n    }\n    else if (isNothing(sequence)) {\n        return [];\n    }\n    return [sequence];\n}\nexports.toArray = toArray;\nfunction extend(target, source) {\n    var index, length, key, sourceKeys;\n    if (source) {\n        sourceKeys = Object.keys(source);\n        for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n            key = sourceKeys[index];\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nexports.extend = extend;\nfunction repeat(string, count) {\n    var result = '', cycle;\n    for (cycle = 0; cycle < count; cycle += 1) {\n        result += string;\n    }\n    return result;\n}\nexports.repeat = repeat;\nfunction isNegativeZero(number) {\n    return (0 === number) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\nexports.isNegativeZero = isNegativeZero;\n//# sourceMappingURL=common.js.map","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common = require('./common');\nvar YAMLException = require('./exception');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar _toString = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar CHAR_TAB = 0x09;\nvar CHAR_LINE_FEED = 0x0A;\nvar CHAR_CARRIAGE_RETURN = 0x0D;\nvar CHAR_SPACE = 0x20;\nvar CHAR_EXCLAMATION = 0x21;\nvar CHAR_DOUBLE_QUOTE = 0x22;\nvar CHAR_SHARP = 0x23;\nvar CHAR_PERCENT = 0x25;\nvar CHAR_AMPERSAND = 0x26;\nvar CHAR_SINGLE_QUOTE = 0x27;\nvar CHAR_ASTERISK = 0x2A;\nvar CHAR_COMMA = 0x2C;\nvar CHAR_MINUS = 0x2D;\nvar CHAR_COLON = 0x3A;\nvar CHAR_GREATER_THAN = 0x3E;\nvar CHAR_QUESTION = 0x3F;\nvar CHAR_COMMERCIAL_AT = 0x40;\nvar CHAR_LEFT_SQUARE_BRACKET = 0x5B;\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D;\nvar CHAR_GRAVE_ACCENT = 0x60;\nvar CHAR_LEFT_CURLY_BRACKET = 0x7B;\nvar CHAR_VERTICAL_LINE = 0x7C;\nvar CHAR_RIGHT_CURLY_BRACKET = 0x7D;\nvar ESCAPE_SEQUENCES = {};\nESCAPE_SEQUENCES[0x00] = '\\\\0';\nESCAPE_SEQUENCES[0x07] = '\\\\a';\nESCAPE_SEQUENCES[0x08] = '\\\\b';\nESCAPE_SEQUENCES[0x09] = '\\\\t';\nESCAPE_SEQUENCES[0x0A] = '\\\\n';\nESCAPE_SEQUENCES[0x0B] = '\\\\v';\nESCAPE_SEQUENCES[0x0C] = '\\\\f';\nESCAPE_SEQUENCES[0x0D] = '\\\\r';\nESCAPE_SEQUENCES[0x1B] = '\\\\e';\nESCAPE_SEQUENCES[0x22] = '\\\\\"';\nESCAPE_SEQUENCES[0x5C] = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85] = '\\\\N';\nESCAPE_SEQUENCES[0xA0] = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n    'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n    'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\nfunction compileStyleMap(schema, map) {\n    var result, keys, index, length, tag, style, type;\n    if (null === map) {\n        return {};\n    }\n    result = {};\n    keys = Object.keys(map);\n    for (index = 0, length = keys.length; index < length; index += 1) {\n        tag = keys[index];\n        style = String(map[tag]);\n        if ('!!' === tag.slice(0, 2)) {\n            tag = 'tag:yaml.org,2002:' + tag.slice(2);\n        }\n        type = schema.compiledTypeMap[tag];\n        if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n            style = type.styleAliases[style];\n        }\n        result[tag] = style;\n    }\n    return result;\n}\nfunction encodeHex(character) {\n    var string, handle, length;\n    string = character.toString(16).toUpperCase();\n    if (character <= 0xFF) {\n        handle = 'x';\n        length = 2;\n    }\n    else if (character <= 0xFFFF) {\n        handle = 'u';\n        length = 4;\n    }\n    else if (character <= 0xFFFFFFFF) {\n        handle = 'U';\n        length = 8;\n    }\n    else {\n        throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n    }\n    return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\nfunction State(options) {\n    this.schema = options['schema'] || DEFAULT_FULL_SCHEMA;\n    this.indent = Math.max(1, (options['indent'] || 2));\n    this.skipInvalid = options['skipInvalid'] || false;\n    this.flowLevel = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n    this.styleMap = compileStyleMap(this.schema, options['styles'] || null);\n    this.implicitTypes = this.schema.compiledImplicit;\n    this.explicitTypes = this.schema.compiledExplicit;\n    this.tag = null;\n    this.result = '';\n    this.duplicates = [];\n    this.usedDuplicates = null;\n}\nfunction indentString(string, spaces) {\n    var ind = common.repeat(' ', spaces), position = 0, next = -1, result = '', line, length = string.length;\n    while (position < length) {\n        next = string.indexOf('\\n', position);\n        if (next === -1) {\n            line = string.slice(position);\n            position = length;\n        }\n        else {\n            line = string.slice(position, next + 1);\n            position = next + 1;\n        }\n        if (line.length && line !== '\\n') {\n            result += ind;\n        }\n        result += line;\n    }\n    return result;\n}\nfunction generateNextLine(state, level) {\n    return '\\n' + common.repeat(' ', state.indent * level);\n}\nfunction testImplicitResolving(state, str) {\n    var index, length, type;\n    for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n        type = state.implicitTypes[index];\n        if (type.resolve(str)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction StringBuilder(source) {\n    this.source = source;\n    this.result = '';\n    this.checkpoint = 0;\n}\nStringBuilder.prototype.takeUpTo = function (position) {\n    var er;\n    if (position < this.checkpoint) {\n        er = new Error('position should be > checkpoint');\n        er.position = position;\n        er.checkpoint = this.checkpoint;\n        throw er;\n    }\n    this.result += this.source.slice(this.checkpoint, position);\n    this.checkpoint = position;\n    return this;\n};\nStringBuilder.prototype.escapeChar = function () {\n    var character, esc;\n    character = this.source.charCodeAt(this.checkpoint);\n    esc = ESCAPE_SEQUENCES[character] || encodeHex(character);\n    this.result += esc;\n    this.checkpoint += 1;\n    return this;\n};\nStringBuilder.prototype.finish = function () {\n    if (this.source.length > this.checkpoint) {\n        this.takeUpTo(this.source.length);\n    }\n};\nfunction writeScalar(state, object, level) {\n    var simple, first, spaceWrap, folded, literal, single, double, sawLineFeed, linePosition, longestLine, indent, max, character, position, escapeSeq, hexEsc, previous, lineLength, modifier, trailingLineBreaks, result;\n    if (0 === object.length) {\n        state.dump = \"''\";\n        return;\n    }\n    if (object.indexOf(\"!include\") == 0) {\n        state.dump = \"\" + object;\n        return;\n    }\n    if (object.indexOf(\"!$$$novalue\") == 0) {\n        state.dump = \"\";\n        return;\n    }\n    if (-1 !== DEPRECATED_BOOLEANS_SYNTAX.indexOf(object)) {\n        state.dump = \"'\" + object + \"'\";\n        return;\n    }\n    simple = true;\n    first = object.length ? object.charCodeAt(0) : 0;\n    spaceWrap = (CHAR_SPACE === first ||\n        CHAR_SPACE === object.charCodeAt(object.length - 1));\n    if (CHAR_MINUS === first ||\n        CHAR_QUESTION === first ||\n        CHAR_COMMERCIAL_AT === first ||\n        CHAR_GRAVE_ACCENT === first) {\n        simple = false;\n    }\n    if (spaceWrap) {\n        simple = false;\n        folded = false;\n        literal = false;\n    }\n    else {\n        folded = true;\n        literal = true;\n    }\n    single = true;\n    double = new StringBuilder(object);\n    sawLineFeed = false;\n    linePosition = 0;\n    longestLine = 0;\n    indent = state.indent * level;\n    max = 80;\n    if (indent < 40) {\n        max -= indent;\n    }\n    else {\n        max = 40;\n    }\n    for (position = 0; position < object.length; position++) {\n        character = object.charCodeAt(position);\n        if (simple) {\n            if (!simpleChar(character)) {\n                simple = false;\n            }\n            else {\n                continue;\n            }\n        }\n        if (single && character === CHAR_SINGLE_QUOTE) {\n            single = false;\n        }\n        escapeSeq = ESCAPE_SEQUENCES[character];\n        hexEsc = needsHexEscape(character);\n        if (!escapeSeq && !hexEsc) {\n            continue;\n        }\n        if (character !== CHAR_LINE_FEED &&\n            character !== CHAR_DOUBLE_QUOTE &&\n            character !== CHAR_SINGLE_QUOTE) {\n            folded = false;\n            literal = false;\n        }\n        else if (character === CHAR_LINE_FEED) {\n            sawLineFeed = true;\n            single = false;\n            if (position > 0) {\n                previous = object.charCodeAt(position - 1);\n                if (previous === CHAR_SPACE) {\n                    literal = false;\n                    folded = false;\n                }\n            }\n            if (folded) {\n                lineLength = position - linePosition;\n                linePosition = position;\n                if (lineLength > longestLine) {\n                    longestLine = lineLength;\n                }\n            }\n        }\n        if (character !== CHAR_DOUBLE_QUOTE) {\n            single = false;\n        }\n        double.takeUpTo(position);\n        double.escapeChar();\n    }\n    if (simple && testImplicitResolving(state, object)) {\n        simple = false;\n    }\n    modifier = '';\n    if (folded || literal) {\n        trailingLineBreaks = 0;\n        if (object.charCodeAt(object.length - 1) === CHAR_LINE_FEED) {\n            trailingLineBreaks += 1;\n            if (object.charCodeAt(object.length - 2) === CHAR_LINE_FEED) {\n                trailingLineBreaks += 1;\n            }\n        }\n        if (trailingLineBreaks === 0) {\n            modifier = '-';\n        }\n        else if (trailingLineBreaks === 2) {\n            modifier = '+';\n        }\n    }\n    if (literal && longestLine < max) {\n        folded = false;\n    }\n    if (!sawLineFeed) {\n        literal = false;\n    }\n    if (simple) {\n        state.dump = object;\n    }\n    else if (single) {\n        state.dump = '\\'' + object + '\\'';\n    }\n    else if (folded) {\n        result = fold(object, max);\n        state.dump = '>' + modifier + '\\n' + indentString(result, indent);\n    }\n    else if (literal) {\n        if (!modifier) {\n            object = object.replace(/\\n$/, '');\n        }\n        state.dump = '|' + modifier + '\\n' + indentString(object, indent);\n    }\n    else if (double) {\n        double.finish();\n        state.dump = '\"' + double.result + '\"';\n    }\n    else {\n        throw new Error('Failed to dump scalar value');\n    }\n    return;\n}\nfunction fold(object, max) {\n    var result = '', position = 0, length = object.length, trailing = /\\n+$/.exec(object), newLine;\n    if (trailing) {\n        length = trailing.index + 1;\n    }\n    while (position < length) {\n        newLine = object.indexOf('\\n', position);\n        if (newLine > length || newLine === -1) {\n            if (result) {\n                result += '\\n\\n';\n            }\n            result += foldLine(object.slice(position, length), max);\n            position = length;\n        }\n        else {\n            if (result) {\n                result += '\\n\\n';\n            }\n            result += foldLine(object.slice(position, newLine), max);\n            position = newLine + 1;\n        }\n    }\n    if (trailing && trailing[0] !== '\\n') {\n        result += trailing[0];\n    }\n    return result;\n}\nfunction foldLine(line, max) {\n    if (line === '') {\n        return line;\n    }\n    var foldRe = /[^\\s] [^\\s]/g, result = '', prevMatch = 0, foldStart = 0, match = foldRe.exec(line), index, foldEnd, folded;\n    while (match) {\n        index = match.index;\n        if (index - foldStart > max) {\n            if (prevMatch !== foldStart) {\n                foldEnd = prevMatch;\n            }\n            else {\n                foldEnd = index;\n            }\n            if (result) {\n                result += '\\n';\n            }\n            folded = line.slice(foldStart, foldEnd);\n            result += folded;\n            foldStart = foldEnd + 1;\n        }\n        prevMatch = index + 1;\n        match = foldRe.exec(line);\n    }\n    if (result) {\n        result += '\\n';\n    }\n    if (foldStart !== prevMatch && line.length - foldStart > max) {\n        result += line.slice(foldStart, prevMatch) + '\\n' +\n            line.slice(prevMatch + 1);\n    }\n    else {\n        result += line.slice(foldStart);\n    }\n    return result;\n}\nfunction simpleChar(character) {\n    return CHAR_TAB !== character &&\n        CHAR_LINE_FEED !== character &&\n        CHAR_CARRIAGE_RETURN !== character &&\n        CHAR_COMMA !== character &&\n        CHAR_LEFT_SQUARE_BRACKET !== character &&\n        CHAR_RIGHT_SQUARE_BRACKET !== character &&\n        CHAR_LEFT_CURLY_BRACKET !== character &&\n        CHAR_RIGHT_CURLY_BRACKET !== character &&\n        CHAR_SHARP !== character &&\n        CHAR_AMPERSAND !== character &&\n        CHAR_ASTERISK !== character &&\n        CHAR_EXCLAMATION !== character &&\n        CHAR_VERTICAL_LINE !== character &&\n        CHAR_GREATER_THAN !== character &&\n        CHAR_SINGLE_QUOTE !== character &&\n        CHAR_DOUBLE_QUOTE !== character &&\n        CHAR_PERCENT !== character &&\n        CHAR_COLON !== character &&\n        !ESCAPE_SEQUENCES[character] &&\n        !needsHexEscape(character);\n}\nfunction needsHexEscape(character) {\n    return !((0x00020 <= character && character <= 0x00007E) ||\n        (0x00085 === character) ||\n        (0x000A0 <= character && character <= 0x00D7FF) ||\n        (0x0E000 <= character && character <= 0x00FFFD) ||\n        (0x10000 <= character && character <= 0x10FFFF));\n}\nfunction writeFlowSequence(state, level, object) {\n    var _result = '', _tag = state.tag, index, length;\n    for (index = 0, length = object.length; index < length; index += 1) {\n        if (writeNode(state, level, object[index], false, false)) {\n            if (0 !== index) {\n                _result += ', ';\n            }\n            _result += state.dump;\n        }\n    }\n    state.tag = _tag;\n    state.dump = '[' + _result + ']';\n}\nfunction writeBlockSequence(state, level, object, compact) {\n    var _result = '', _tag = state.tag, index, length;\n    for (index = 0, length = object.length; index < length; index += 1) {\n        if (writeNode(state, level + 1, object[index], true, true)) {\n            if (!compact || 0 !== index) {\n                _result += generateNextLine(state, level);\n            }\n            _result += '- ' + state.dump;\n        }\n    }\n    state.tag = _tag;\n    state.dump = _result || '[]';\n}\nfunction writeFlowMapping(state, level, object) {\n    var _result = '', _tag = state.tag, objectKeyList = Object.keys(object), index, length, objectKey, objectValue, pairBuffer;\n    for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n        pairBuffer = '';\n        if (0 !== index) {\n            pairBuffer += ', ';\n        }\n        objectKey = objectKeyList[index];\n        objectValue = object[objectKey];\n        if (!writeNode(state, level, objectKey, false, false)) {\n            continue;\n        }\n        if (state.dump.length > 1024) {\n            pairBuffer += '? ';\n        }\n        pairBuffer += state.dump + ': ';\n        if (!writeNode(state, level, objectValue, false, false)) {\n            continue;\n        }\n        pairBuffer += state.dump;\n        _result += pairBuffer;\n    }\n    state.tag = _tag;\n    state.dump = '{' + _result + '}';\n}\nfunction writeBlockMapping(state, level, object, compact) {\n    var _result = '', _tag = state.tag, objectKeyList = Object.keys(object), index, length, objectKey, objectValue, explicitPair, pairBuffer;\n    for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n        pairBuffer = '';\n        if (!compact || 0 !== index) {\n            pairBuffer += generateNextLine(state, level);\n        }\n        objectKey = objectKeyList[index];\n        objectValue = object[objectKey];\n        if (!writeNode(state, level + 1, objectKey, true, true)) {\n            continue;\n        }\n        explicitPair = (null !== state.tag && '?' !== state.tag) ||\n            (state.dump && state.dump.length > 1024);\n        if (explicitPair) {\n            if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n                pairBuffer += '?';\n            }\n            else {\n                pairBuffer += '? ';\n            }\n        }\n        pairBuffer += state.dump;\n        if (explicitPair) {\n            pairBuffer += generateNextLine(state, level);\n        }\n        if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n            continue;\n        }\n        if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n            pairBuffer += ':';\n        }\n        else {\n            pairBuffer += ': ';\n        }\n        pairBuffer += state.dump;\n        _result += pairBuffer;\n    }\n    state.tag = _tag;\n    state.dump = _result || '{}';\n}\nfunction detectType(state, object, explicit) {\n    var _result, typeList, index, length, type, style;\n    typeList = explicit ? state.explicitTypes : state.implicitTypes;\n    for (index = 0, length = typeList.length; index < length; index += 1) {\n        type = typeList[index];\n        if ((type.instanceOf || type.predicate) &&\n            (!type.instanceOf || (('object' === typeof object) && (object instanceof type.instanceOf))) &&\n            (!type.predicate || type.predicate(object))) {\n            state.tag = explicit ? type.tag : '?';\n            if (type.represent) {\n                style = state.styleMap[type.tag] || type.defaultStyle;\n                if ('[object Function]' === _toString.call(type.represent)) {\n                    _result = type.represent(object, style);\n                }\n                else if (_hasOwnProperty.call(type.represent, style)) {\n                    _result = type.represent[style](object, style);\n                }\n                else {\n                    throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n                }\n                state.dump = _result;\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction writeNode(state, level, object, block, compact) {\n    state.tag = null;\n    state.dump = object;\n    if (!detectType(state, object, false)) {\n        detectType(state, object, true);\n    }\n    var type = _toString.call(state.dump);\n    if (block) {\n        block = (0 > state.flowLevel || state.flowLevel > level);\n    }\n    if ((null !== state.tag && '?' !== state.tag) || (2 !== state.indent && level > 0)) {\n        compact = false;\n    }\n    var objectOrArray = '[object Object]' === type || '[object Array]' === type, duplicateIndex, duplicate;\n    if (objectOrArray) {\n        duplicateIndex = state.duplicates.indexOf(object);\n        duplicate = duplicateIndex !== -1;\n    }\n    if (duplicate && state.usedDuplicates[duplicateIndex]) {\n        state.dump = '*ref_' + duplicateIndex;\n    }\n    else {\n        if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n            state.usedDuplicates[duplicateIndex] = true;\n        }\n        if ('[object Object]' === type) {\n            if (block && (0 !== Object.keys(state.dump).length)) {\n                writeBlockMapping(state, level, state.dump, compact);\n                if (duplicate) {\n                    state.dump = '&ref_' + duplicateIndex + (0 === level ? '\\n' : '') + state.dump;\n                }\n            }\n            else {\n                writeFlowMapping(state, level, state.dump);\n                if (duplicate) {\n                    state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n                }\n            }\n        }\n        else if ('[object Array]' === type) {\n            if (block && (0 !== state.dump.length)) {\n                writeBlockSequence(state, level, state.dump, compact);\n                if (duplicate) {\n                    state.dump = '&ref_' + duplicateIndex + (0 === level ? '\\n' : '') + state.dump;\n                }\n            }\n            else {\n                writeFlowSequence(state, level, state.dump);\n                if (duplicate) {\n                    state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n                }\n            }\n        }\n        else if ('[object String]' === type) {\n            if ('?' !== state.tag) {\n                writeScalar(state, state.dump, level);\n            }\n        }\n        else {\n            if (state.skipInvalid) {\n                return false;\n            }\n            throw new YAMLException('unacceptable kind of an object to dump ' + type);\n        }\n        if (null !== state.tag && '?' !== state.tag) {\n            state.dump = '!<' + state.tag + '> ' + state.dump;\n        }\n    }\n    return true;\n}\nfunction getDuplicateReferences(object, state) {\n    var objects = [], duplicatesIndexes = [], index, length;\n    inspectNode(object, objects, duplicatesIndexes);\n    for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n        state.duplicates.push(objects[duplicatesIndexes[index]]);\n    }\n    state.usedDuplicates = new Array(length);\n}\nfunction inspectNode(object, objects, duplicatesIndexes) {\n    var type = _toString.call(object), objectKeyList, index, length;\n    if (null !== object && 'object' === typeof object) {\n        index = objects.indexOf(object);\n        if (-1 !== index) {\n            if (-1 === duplicatesIndexes.indexOf(index)) {\n                duplicatesIndexes.push(index);\n            }\n        }\n        else {\n            objects.push(object);\n            if (Array.isArray(object)) {\n                for (index = 0, length = object.length; index < length; index += 1) {\n                    inspectNode(object[index], objects, duplicatesIndexes);\n                }\n            }\n            else {\n                objectKeyList = Object.keys(object);\n                for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n                    inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n                }\n            }\n        }\n    }\n}\nfunction dump(input, options) {\n    options = options || {};\n    var state = new State(options);\n    getDuplicateReferences(input, state);\n    if (writeNode(state, 0, input, true, true)) {\n        return state.dump + '\\n';\n    }\n    return '';\n}\nexports.dump = dump;\nfunction safeDump(input, options) {\n    return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\nexports.safeDump = safeDump;\n//# sourceMappingURL=dumper.js.map","'use strict';\nvar YAMLException = (function () {\n    function YAMLException(reason, mark, isWarning) {\n        if (mark === void 0) { mark = null; }\n        if (isWarning === void 0) { isWarning = false; }\n        this.name = 'YAMLException';\n        this.reason = reason;\n        this.mark = mark;\n        this.message = this.toString(false);\n        this.isWarning = isWarning;\n    }\n    YAMLException.isInstance = function (instance) {\n        if (instance != null && instance.getClassIdentifier\n            && typeof (instance.getClassIdentifier) == \"function\") {\n            for (var _i = 0, _a = instance.getClassIdentifier(); _i < _a.length; _i++) {\n                var currentIdentifier = _a[_i];\n                if (currentIdentifier == YAMLException.CLASS_IDENTIFIER)\n                    return true;\n            }\n        }\n        return false;\n    };\n    YAMLException.prototype.getClassIdentifier = function () {\n        var superIdentifiers = [];\n        return superIdentifiers.concat(YAMLException.CLASS_IDENTIFIER);\n    };\n    YAMLException.prototype.toString = function (compact) {\n        if (compact === void 0) { compact = false; }\n        var result;\n        result = 'JS-YAML: ' + (this.reason || '(unknown reason)');\n        if (!compact && this.mark) {\n            result += ' ' + this.mark.toString();\n        }\n        return result;\n    };\n    YAMLException.CLASS_IDENTIFIER = \"yaml-ast-parser.YAMLException\";\n    return YAMLException;\n}());\nmodule.exports = YAMLException;\n//# sourceMappingURL=exception.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar loader_1 = require(\"./loader\");\nexports.load = loader_1.load;\nexports.loadAll = loader_1.loadAll;\nexports.safeLoad = loader_1.safeLoad;\nexports.safeLoadAll = loader_1.safeLoadAll;\nvar dumper_1 = require(\"./dumper\");\nexports.dump = dumper_1.dump;\nexports.safeDump = dumper_1.safeDump;\nexports.YAMLException = require(\"./exception\");\n__export(require(\"./yamlAST\"));\nfunction deprecated(name) {\n    return function () {\n        throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n    };\n}\n__export(require(\"./scalarInference\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ast = require(\"./yamlAST\");\n'use strict';\nvar common = require(\"./common\");\nvar YAMLException = require(\"./exception\");\nvar Mark = require(\"./mark\");\nvar DEFAULT_SAFE_SCHEMA = require(\"./schema/default_safe\");\nvar DEFAULT_FULL_SCHEMA = require(\"./schema/default_full\");\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar CONTEXT_FLOW_IN = 1;\nvar CONTEXT_FLOW_OUT = 2;\nvar CONTEXT_BLOCK_IN = 3;\nvar CONTEXT_BLOCK_OUT = 4;\nvar CHOMPING_CLIP = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP = 3;\nvar PATTERN_NON_PRINTABLE = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\nfunction is_EOL(c) {\n    return (c === 0x0A) || (c === 0x0D);\n}\nfunction is_WHITE_SPACE(c) {\n    return (c === 0x09) || (c === 0x20);\n}\nfunction is_WS_OR_EOL(c) {\n    return (c === 0x09) ||\n        (c === 0x20) ||\n        (c === 0x0A) ||\n        (c === 0x0D);\n}\nfunction is_FLOW_INDICATOR(c) {\n    return 0x2C === c ||\n        0x5B === c ||\n        0x5D === c ||\n        0x7B === c ||\n        0x7D === c;\n}\nfunction fromHexCode(c) {\n    var lc;\n    if ((0x30 <= c) && (c <= 0x39)) {\n        return c - 0x30;\n    }\n    lc = c | 0x20;\n    if ((0x61 <= lc) && (lc <= 0x66)) {\n        return lc - 0x61 + 10;\n    }\n    return -1;\n}\nfunction escapedHexLen(c) {\n    if (c === 0x78) {\n        return 2;\n    }\n    if (c === 0x75) {\n        return 4;\n    }\n    if (c === 0x55) {\n        return 8;\n    }\n    return 0;\n}\nfunction fromDecimalCode(c) {\n    if ((0x30 <= c) && (c <= 0x39)) {\n        return c - 0x30;\n    }\n    return -1;\n}\nfunction simpleEscapeSequence(c) {\n    return (c === 0x30) ? '\\x00' :\n        (c === 0x61) ? '\\x07' :\n            (c === 0x62) ? '\\x08' :\n                (c === 0x74) ? '\\x09' :\n                    (c === 0x09) ? '\\x09' :\n                        (c === 0x6E) ? '\\x0A' :\n                            (c === 0x76) ? '\\x0B' :\n                                (c === 0x66) ? '\\x0C' :\n                                    (c === 0x72) ? '\\x0D' :\n                                        (c === 0x65) ? '\\x1B' :\n                                            (c === 0x20) ? ' ' :\n                                                (c === 0x22) ? '\\x22' :\n                                                    (c === 0x2F) ? '/' :\n                                                        (c === 0x5C) ? '\\x5C' :\n                                                            (c === 0x4E) ? '\\x85' :\n                                                                (c === 0x5F) ? '\\xA0' :\n                                                                    (c === 0x4C) ? '\\u2028' :\n                                                                        (c === 0x50) ? '\\u2029' : '';\n}\nfunction charFromCodepoint(c) {\n    if (c <= 0xFFFF) {\n        return String.fromCharCode(c);\n    }\n    return String.fromCharCode(((c - 0x010000) >> 10) + 0xD800, ((c - 0x010000) & 0x03FF) + 0xDC00);\n}\nvar simpleEscapeCheck = new Array(256);\nvar simpleEscapeMap = new Array(256);\nvar customEscapeCheck = new Array(256);\nvar customEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n    customEscapeMap[i] = simpleEscapeMap[i] = simpleEscapeSequence(i);\n    simpleEscapeCheck[i] = simpleEscapeMap[i] ? 1 : 0;\n    customEscapeCheck[i] = 1;\n    if (!simpleEscapeCheck[i]) {\n        customEscapeMap[i] = '\\\\' + String.fromCharCode(i);\n    }\n}\nvar State = (function () {\n    function State(input, options) {\n        this.errorMap = {};\n        this.errors = [];\n        this.lines = [];\n        this.input = input;\n        this.filename = options['filename'] || null;\n        this.schema = options['schema'] || DEFAULT_FULL_SCHEMA;\n        this.onWarning = options['onWarning'] || null;\n        this.legacy = options['legacy'] || false;\n        this.allowAnyEscape = options['allowAnyEscape'] || false;\n        this.ignoreDuplicateKeys = options['ignoreDuplicateKeys'] || false;\n        this.implicitTypes = this.schema.compiledImplicit;\n        this.typeMap = this.schema.compiledTypeMap;\n        this.length = input.length;\n        this.position = 0;\n        this.line = 0;\n        this.lineStart = 0;\n        this.lineIndent = 0;\n        this.documents = [];\n    }\n    return State;\n}());\nfunction generateError(state, message, isWarning) {\n    if (isWarning === void 0) { isWarning = false; }\n    return new YAMLException(message, new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)), isWarning);\n}\nfunction throwErrorFromPosition(state, position, message, isWarning, toLineEnd) {\n    if (isWarning === void 0) { isWarning = false; }\n    if (toLineEnd === void 0) { toLineEnd = false; }\n    var line = positionToLine(state, position);\n    if (!line) {\n        return;\n    }\n    var hash = message + position;\n    if (state.errorMap[hash]) {\n        return;\n    }\n    var mark = new Mark(state.filename, state.input, position, line.line, (position - line.start));\n    if (toLineEnd) {\n        mark.toLineEnd = true;\n    }\n    var error = new YAMLException(message, mark, isWarning);\n    state.errors.push(error);\n}\nfunction throwError(state, message) {\n    var error = generateError(state, message);\n    var hash = error.message + error.mark.position;\n    if (state.errorMap[hash]) {\n        return;\n    }\n    state.errors.push(error);\n    state.errorMap[hash] = 1;\n    var or = state.position;\n    while (true) {\n        if (state.position >= state.input.length - 1) {\n            return;\n        }\n        var c = state.input.charAt(state.position);\n        if (c == '\\n') {\n            state.position--;\n            if (state.position == or) {\n                state.position += 1;\n            }\n            return;\n        }\n        if (c == '\\r') {\n            state.position--;\n            if (state.position == or) {\n                state.position += 1;\n            }\n            return;\n        }\n        state.position++;\n    }\n}\nfunction throwWarning(state, message) {\n    var error = generateError(state, message);\n    if (state.onWarning) {\n        state.onWarning.call(null, error);\n    }\n    else {\n    }\n}\nvar directiveHandlers = {\n    YAML: function handleYamlDirective(state, name, args) {\n        var match, major, minor;\n        if (null !== state.version) {\n            throwError(state, 'duplication of %YAML directive');\n        }\n        if (1 !== args.length) {\n            throwError(state, 'YAML directive accepts exactly one argument');\n        }\n        match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n        if (null === match) {\n            throwError(state, 'ill-formed argument of the YAML directive');\n        }\n        major = parseInt(match[1], 10);\n        minor = parseInt(match[2], 10);\n        if (1 !== major) {\n            throwError(state, 'found incompatible YAML document (version 1.2 is required)');\n        }\n        state.version = args[0];\n        state.checkLineBreaks = (minor < 2);\n        if (2 !== minor) {\n            throwError(state, 'found incompatible YAML document (version 1.2 is required)');\n        }\n    },\n    TAG: function handleTagDirective(state, name, args) {\n        var handle, prefix;\n        if (2 !== args.length) {\n            throwError(state, 'TAG directive accepts exactly two arguments');\n        }\n        handle = args[0];\n        prefix = args[1];\n        if (!PATTERN_TAG_HANDLE.test(handle)) {\n            throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n        }\n        if (_hasOwnProperty.call(state.tagMap, handle)) {\n            throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n        }\n        if (!PATTERN_TAG_URI.test(prefix)) {\n            throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n        }\n        state.tagMap[handle] = prefix;\n    }\n};\nfunction captureSegment(state, start, end, checkJson) {\n    var _position, _length, _character, _result;\n    var scalar = state.result;\n    if (scalar.startPosition == -1) {\n        scalar.startPosition = start;\n    }\n    if (start <= end) {\n        _result = state.input.slice(start, end);\n        if (checkJson) {\n            for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n                _character = _result.charCodeAt(_position);\n                if (!(0x09 === _character ||\n                    0x20 <= _character && _character <= 0x10FFFF)) {\n                    throwError(state, 'expected valid JSON character');\n                }\n            }\n        }\n        else if (PATTERN_NON_PRINTABLE.test(_result)) {\n            throwError(state, 'the stream contains non-printable characters');\n        }\n        scalar.value += _result;\n        scalar.endPosition = end;\n    }\n}\nfunction mergeMappings(state, destination, source) {\n    var sourceKeys, key, index, quantity;\n    if (!common.isObject(source)) {\n        throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n    }\n    sourceKeys = Object.keys(source);\n    for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n        key = sourceKeys[index];\n        if (!_hasOwnProperty.call(destination, key)) {\n            destination[key] = source[key];\n        }\n    }\n}\nfunction storeMappingPair(state, _result, keyTag, keyNode, valueNode) {\n    var index, quantity;\n    if (keyNode == null) {\n        return;\n    }\n    if (null === _result) {\n        _result = {\n            startPosition: keyNode.startPosition,\n            endPosition: valueNode.endPosition,\n            parent: null,\n            errors: [],\n            mappings: [], kind: ast.Kind.MAP\n        };\n    }\n    var mapping = ast.newMapping(keyNode, valueNode);\n    mapping.parent = _result;\n    keyNode.parent = mapping;\n    if (valueNode != null) {\n        valueNode.parent = mapping;\n    }\n    !state.ignoreDuplicateKeys && _result.mappings.forEach(function (sibling) {\n        if (sibling.key && sibling.key.value === (mapping.key && mapping.key.value)) {\n            throwErrorFromPosition(state, mapping.key.startPosition, 'duplicate key');\n            throwErrorFromPosition(state, sibling.key.startPosition, 'duplicate key');\n        }\n    });\n    _result.mappings.push(mapping);\n    _result.endPosition = valueNode ? valueNode.endPosition : keyNode.endPosition + 1;\n    return _result;\n}\nfunction readLineBreak(state) {\n    var ch;\n    ch = state.input.charCodeAt(state.position);\n    if (0x0A === ch) {\n        state.position++;\n    }\n    else if (0x0D === ch) {\n        state.position++;\n        if (0x0A === state.input.charCodeAt(state.position)) {\n            state.position++;\n        }\n    }\n    else {\n        throwError(state, 'a line break is expected');\n    }\n    state.line += 1;\n    state.lineStart = state.position;\n    state.lines.push({\n        start: state.lineStart,\n        line: state.line\n    });\n}\nvar Line = (function () {\n    function Line() {\n    }\n    return Line;\n}());\nfunction positionToLine(state, position) {\n    var line;\n    for (var i = 0; i < state.lines.length; i++) {\n        if (state.lines[i].start > position) {\n            break;\n        }\n        line = state.lines[i];\n    }\n    if (!line) {\n        return {\n            start: 0,\n            line: 0\n        };\n    }\n    return line;\n}\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n    var lineBreaks = 0, ch = state.input.charCodeAt(state.position);\n    while (0 !== ch) {\n        while (is_WHITE_SPACE(ch)) {\n            if (ch === 0x09) {\n                state.errors.push(generateError(state, \"Using tabs can lead to unpredictable results\", true));\n            }\n            ch = state.input.charCodeAt(++state.position);\n        }\n        if (allowComments && 0x23 === ch) {\n            do {\n                ch = state.input.charCodeAt(++state.position);\n            } while (ch !== 0x0A && ch !== 0x0D && 0 !== ch);\n        }\n        if (is_EOL(ch)) {\n            readLineBreak(state);\n            ch = state.input.charCodeAt(state.position);\n            lineBreaks++;\n            state.lineIndent = 0;\n            while (0x20 === ch) {\n                state.lineIndent++;\n                ch = state.input.charCodeAt(++state.position);\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (-1 !== checkIndent && 0 !== lineBreaks && state.lineIndent < checkIndent) {\n        throwWarning(state, 'deficient indentation');\n    }\n    return lineBreaks;\n}\nfunction testDocumentSeparator(state) {\n    var _position = state.position, ch;\n    ch = state.input.charCodeAt(_position);\n    if ((0x2D === ch || 0x2E === ch) &&\n        state.input.charCodeAt(_position + 1) === ch &&\n        state.input.charCodeAt(_position + 2) === ch) {\n        _position += 3;\n        ch = state.input.charCodeAt(_position);\n        if (ch === 0 || is_WS_OR_EOL(ch)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction writeFoldedLines(state, scalar, count) {\n    if (1 === count) {\n        scalar.value += ' ';\n    }\n    else if (count > 1) {\n        scalar.value += common.repeat('\\n', count - 1);\n    }\n}\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n    var preceding, following, captureStart, captureEnd, hasPendingContent, _line, _lineStart, _lineIndent, _kind = state.kind, _result = state.result, ch;\n    var state_result = ast.newScalar();\n    state_result.plainScalar = true;\n    state.result = state_result;\n    ch = state.input.charCodeAt(state.position);\n    if (is_WS_OR_EOL(ch) ||\n        is_FLOW_INDICATOR(ch) ||\n        0x23 === ch ||\n        0x26 === ch ||\n        0x2A === ch ||\n        0x21 === ch ||\n        0x7C === ch ||\n        0x3E === ch ||\n        0x27 === ch ||\n        0x22 === ch ||\n        0x25 === ch ||\n        0x40 === ch ||\n        0x60 === ch) {\n        return false;\n    }\n    if (0x3F === ch || 0x2D === ch) {\n        following = state.input.charCodeAt(state.position + 1);\n        if (is_WS_OR_EOL(following) ||\n            withinFlowCollection && is_FLOW_INDICATOR(following)) {\n            return false;\n        }\n    }\n    state.kind = 'scalar';\n    captureStart = captureEnd = state.position;\n    hasPendingContent = false;\n    while (0 !== ch) {\n        if (0x3A === ch) {\n            following = state.input.charCodeAt(state.position + 1);\n            if (is_WS_OR_EOL(following) ||\n                withinFlowCollection && is_FLOW_INDICATOR(following)) {\n                break;\n            }\n        }\n        else if (0x23 === ch) {\n            preceding = state.input.charCodeAt(state.position - 1);\n            if (is_WS_OR_EOL(preceding)) {\n                break;\n            }\n        }\n        else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n            withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n            break;\n        }\n        else if (is_EOL(ch)) {\n            _line = state.line;\n            _lineStart = state.lineStart;\n            _lineIndent = state.lineIndent;\n            skipSeparationSpace(state, false, -1);\n            if (state.lineIndent >= nodeIndent) {\n                hasPendingContent = true;\n                ch = state.input.charCodeAt(state.position);\n                continue;\n            }\n            else {\n                state.position = captureEnd;\n                state.line = _line;\n                state.lineStart = _lineStart;\n                state.lineIndent = _lineIndent;\n                break;\n            }\n        }\n        if (hasPendingContent) {\n            captureSegment(state, captureStart, captureEnd, false);\n            writeFoldedLines(state, state_result, state.line - _line);\n            captureStart = captureEnd = state.position;\n            hasPendingContent = false;\n        }\n        if (!is_WHITE_SPACE(ch)) {\n            captureEnd = state.position + 1;\n        }\n        ch = state.input.charCodeAt(++state.position);\n        if (state.position >= state.input.length) {\n            return false;\n        }\n    }\n    captureSegment(state, captureStart, captureEnd, false);\n    if (state.result.startPosition != -1) {\n        state_result.rawValue = state.input.substring(state_result.startPosition, state_result.endPosition);\n        return true;\n    }\n    state.kind = _kind;\n    state.result = _result;\n    return false;\n}\nfunction readSingleQuotedScalar(state, nodeIndent) {\n    var ch, captureStart, captureEnd;\n    ch = state.input.charCodeAt(state.position);\n    if (0x27 !== ch) {\n        return false;\n    }\n    var scalar = ast.newScalar();\n    scalar.singleQuoted = true;\n    state.kind = 'scalar';\n    state.result = scalar;\n    scalar.startPosition = state.position;\n    state.position++;\n    captureStart = captureEnd = state.position;\n    while (0 !== (ch = state.input.charCodeAt(state.position))) {\n        if (0x27 === ch) {\n            captureSegment(state, captureStart, state.position, true);\n            ch = state.input.charCodeAt(++state.position);\n            scalar.endPosition = state.position;\n            if (0x27 === ch) {\n                captureStart = captureEnd = state.position;\n                state.position++;\n            }\n            else {\n                return true;\n            }\n        }\n        else if (is_EOL(ch)) {\n            captureSegment(state, captureStart, captureEnd, true);\n            writeFoldedLines(state, scalar, skipSeparationSpace(state, false, nodeIndent));\n            captureStart = captureEnd = state.position;\n        }\n        else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n            throwError(state, 'unexpected end of the document within a single quoted scalar');\n        }\n        else {\n            state.position++;\n            captureEnd = state.position;\n            scalar.endPosition = state.position;\n        }\n    }\n    throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n    var captureStart, captureEnd, hexLength, hexResult, tmp, tmpEsc, ch;\n    ch = state.input.charCodeAt(state.position);\n    if (0x22 !== ch) {\n        return false;\n    }\n    state.kind = 'scalar';\n    var scalar = ast.newScalar();\n    scalar.doubleQuoted = true;\n    state.result = scalar;\n    scalar.startPosition = state.position;\n    state.position++;\n    captureStart = captureEnd = state.position;\n    while (0 !== (ch = state.input.charCodeAt(state.position))) {\n        if (0x22 === ch) {\n            captureSegment(state, captureStart, state.position, true);\n            state.position++;\n            scalar.endPosition = state.position;\n            scalar.rawValue = state.input.substring(scalar.startPosition, scalar.endPosition);\n            return true;\n        }\n        else if (0x5C === ch) {\n            captureSegment(state, captureStart, state.position, true);\n            ch = state.input.charCodeAt(++state.position);\n            if (is_EOL(ch)) {\n                skipSeparationSpace(state, false, nodeIndent);\n            }\n            else if (ch < 256 && (state.allowAnyEscape ? customEscapeCheck[ch] : simpleEscapeCheck[ch])) {\n                scalar.value += (state.allowAnyEscape ? customEscapeMap[ch] : simpleEscapeMap[ch]);\n                state.position++;\n            }\n            else if ((tmp = escapedHexLen(ch)) > 0) {\n                hexLength = tmp;\n                hexResult = 0;\n                for (; hexLength > 0; hexLength--) {\n                    ch = state.input.charCodeAt(++state.position);\n                    if ((tmp = fromHexCode(ch)) >= 0) {\n                        hexResult = (hexResult << 4) + tmp;\n                    }\n                    else {\n                        throwError(state, 'expected hexadecimal character');\n                    }\n                }\n                scalar.value += charFromCodepoint(hexResult);\n                state.position++;\n            }\n            else {\n                throwError(state, 'unknown escape sequence');\n            }\n            captureStart = captureEnd = state.position;\n        }\n        else if (is_EOL(ch)) {\n            captureSegment(state, captureStart, captureEnd, true);\n            writeFoldedLines(state, scalar, skipSeparationSpace(state, false, nodeIndent));\n            captureStart = captureEnd = state.position;\n        }\n        else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n            throwError(state, 'unexpected end of the document within a double quoted scalar');\n        }\n        else {\n            state.position++;\n            captureEnd = state.position;\n        }\n    }\n    throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\nfunction readFlowCollection(state, nodeIndent) {\n    var readNext = true, _line, _tag = state.tag, _result, _anchor = state.anchor, following, terminator, isPair, isExplicitPair, isMapping, keyNode, keyTag, valueNode, ch;\n    ch = state.input.charCodeAt(state.position);\n    if (ch === 0x5B) {\n        terminator = 0x5D;\n        isMapping = false;\n        _result = ast.newItems();\n        _result.startPosition = state.position;\n    }\n    else if (ch === 0x7B) {\n        terminator = 0x7D;\n        isMapping = true;\n        _result = ast.newMap();\n        _result.startPosition = state.position;\n    }\n    else {\n        return false;\n    }\n    if (null !== state.anchor) {\n        _result.anchorId = state.anchor;\n        state.anchorMap[state.anchor] = _result;\n    }\n    ch = state.input.charCodeAt(++state.position);\n    while (0 !== ch) {\n        skipSeparationSpace(state, true, nodeIndent);\n        ch = state.input.charCodeAt(state.position);\n        if (ch === terminator) {\n            state.position++;\n            state.tag = _tag;\n            state.anchor = _anchor;\n            state.kind = isMapping ? 'mapping' : 'sequence';\n            state.result = _result;\n            _result.endPosition = state.position;\n            return true;\n        }\n        else if (!readNext) {\n            var p = state.position;\n            throwError(state, 'missed comma between flow collection entries');\n            state.position = p + 1;\n        }\n        keyTag = keyNode = valueNode = null;\n        isPair = isExplicitPair = false;\n        if (0x3F === ch) {\n            following = state.input.charCodeAt(state.position + 1);\n            if (is_WS_OR_EOL(following)) {\n                isPair = isExplicitPair = true;\n                state.position++;\n                skipSeparationSpace(state, true, nodeIndent);\n            }\n        }\n        _line = state.line;\n        composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n        keyTag = state.tag;\n        keyNode = state.result;\n        skipSeparationSpace(state, true, nodeIndent);\n        ch = state.input.charCodeAt(state.position);\n        if ((isExplicitPair || state.line === _line) && 0x3A === ch) {\n            isPair = true;\n            ch = state.input.charCodeAt(++state.position);\n            skipSeparationSpace(state, true, nodeIndent);\n            composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n            valueNode = state.result;\n        }\n        if (isMapping) {\n            storeMappingPair(state, _result, keyTag, keyNode, valueNode);\n        }\n        else if (isPair) {\n            var mp = storeMappingPair(state, null, keyTag, keyNode, valueNode);\n            mp.parent = _result;\n            _result.items.push(mp);\n        }\n        else {\n            if (keyNode) {\n                keyNode.parent = _result;\n            }\n            _result.items.push(keyNode);\n        }\n        _result.endPosition = state.position + 1;\n        skipSeparationSpace(state, true, nodeIndent);\n        ch = state.input.charCodeAt(state.position);\n        if (0x2C === ch) {\n            readNext = true;\n            ch = state.input.charCodeAt(++state.position);\n        }\n        else {\n            readNext = false;\n        }\n    }\n    throwError(state, 'unexpected end of the stream within a flow collection');\n}\nfunction readBlockScalar(state, nodeIndent) {\n    var captureStart, folding, chomping = CHOMPING_CLIP, detectedIndent = false, textIndent = nodeIndent, emptyLines = 0, atMoreIndented = false, tmp, ch;\n    ch = state.input.charCodeAt(state.position);\n    if (ch === 0x7C) {\n        folding = false;\n    }\n    else if (ch === 0x3E) {\n        folding = true;\n    }\n    else {\n        return false;\n    }\n    var sc = ast.newScalar();\n    state.kind = 'scalar';\n    state.result = sc;\n    sc.startPosition = state.position;\n    while (0 !== ch) {\n        ch = state.input.charCodeAt(++state.position);\n        if (0x2B === ch || 0x2D === ch) {\n            if (CHOMPING_CLIP === chomping) {\n                chomping = (0x2B === ch) ? CHOMPING_KEEP : CHOMPING_STRIP;\n            }\n            else {\n                throwError(state, 'repeat of a chomping mode identifier');\n            }\n        }\n        else if ((tmp = fromDecimalCode(ch)) >= 0) {\n            if (tmp === 0) {\n                throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n            }\n            else if (!detectedIndent) {\n                textIndent = nodeIndent + tmp - 1;\n                detectedIndent = true;\n            }\n            else {\n                throwError(state, 'repeat of an indentation width identifier');\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (is_WHITE_SPACE(ch)) {\n        do {\n            ch = state.input.charCodeAt(++state.position);\n        } while (is_WHITE_SPACE(ch));\n        if (0x23 === ch) {\n            do {\n                ch = state.input.charCodeAt(++state.position);\n            } while (!is_EOL(ch) && (0 !== ch));\n        }\n    }\n    while (0 !== ch) {\n        readLineBreak(state);\n        state.lineIndent = 0;\n        ch = state.input.charCodeAt(state.position);\n        while ((!detectedIndent || state.lineIndent < textIndent) &&\n            (0x20 === ch)) {\n            state.lineIndent++;\n            ch = state.input.charCodeAt(++state.position);\n        }\n        if (!detectedIndent && state.lineIndent > textIndent) {\n            textIndent = state.lineIndent;\n        }\n        if (is_EOL(ch)) {\n            emptyLines++;\n            continue;\n        }\n        if (state.lineIndent < textIndent) {\n            if (chomping === CHOMPING_KEEP) {\n                sc.value += common.repeat('\\n', emptyLines);\n            }\n            else if (chomping === CHOMPING_CLIP) {\n                if (detectedIndent) {\n                    sc.value += '\\n';\n                }\n            }\n            break;\n        }\n        if (folding) {\n            if (is_WHITE_SPACE(ch)) {\n                atMoreIndented = true;\n                sc.value += common.repeat('\\n', emptyLines + 1);\n            }\n            else if (atMoreIndented) {\n                atMoreIndented = false;\n                sc.value += common.repeat('\\n', emptyLines + 1);\n            }\n            else if (0 === emptyLines) {\n                if (detectedIndent) {\n                    sc.value += ' ';\n                }\n            }\n            else {\n                sc.value += common.repeat('\\n', emptyLines);\n            }\n        }\n        else if (detectedIndent) {\n            sc.value += common.repeat('\\n', emptyLines + 1);\n        }\n        else {\n        }\n        detectedIndent = true;\n        emptyLines = 0;\n        captureStart = state.position;\n        while (!is_EOL(ch) && (0 !== ch)) {\n            ch = state.input.charCodeAt(++state.position);\n        }\n        captureSegment(state, captureStart, state.position, false);\n    }\n    sc.endPosition = state.position;\n    var i = state.position - 1;\n    var needMinus = false;\n    while (true) {\n        var c = state.input[i];\n        if (c == '\\r' || c == '\\n') {\n            if (needMinus) {\n                i--;\n            }\n            break;\n        }\n        if (c != ' ' && c != '\\t') {\n            break;\n        }\n        i--;\n    }\n    sc.endPosition = i;\n    sc.rawValue = state.input.substring(sc.startPosition, sc.endPosition);\n    return true;\n}\nfunction readBlockSequence(state, nodeIndent) {\n    var _line, _tag = state.tag, _anchor = state.anchor, _result = ast.newItems(), following, detected = false, ch;\n    if (null !== state.anchor) {\n        _result.anchorId = state.anchor;\n        state.anchorMap[state.anchor] = _result;\n    }\n    _result.startPosition = state.position;\n    ch = state.input.charCodeAt(state.position);\n    while (0 !== ch) {\n        if (0x2D !== ch) {\n            break;\n        }\n        following = state.input.charCodeAt(state.position + 1);\n        if (!is_WS_OR_EOL(following)) {\n            break;\n        }\n        detected = true;\n        state.position++;\n        if (skipSeparationSpace(state, true, -1)) {\n            if (state.lineIndent <= nodeIndent) {\n                _result.items.push(null);\n                ch = state.input.charCodeAt(state.position);\n                continue;\n            }\n        }\n        _line = state.line;\n        composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n        if (state.result) {\n            state.result.parent = _result;\n            _result.items.push(state.result);\n        }\n        skipSeparationSpace(state, true, -1);\n        ch = state.input.charCodeAt(state.position);\n        if ((state.line === _line || state.lineIndent > nodeIndent) && (0 !== ch)) {\n            throwError(state, 'bad indentation of a sequence entry');\n        }\n        else if (state.lineIndent < nodeIndent) {\n            break;\n        }\n    }\n    _result.endPosition = state.position;\n    if (detected) {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        state.kind = 'sequence';\n        state.result = _result;\n        _result.endPosition = state.position;\n        return true;\n    }\n    return false;\n}\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n    var following, allowCompact, _line, _tag = state.tag, _anchor = state.anchor, _result = ast.newMap(), keyTag = null, keyNode = null, valueNode = null, atExplicitKey = false, detected = false, ch;\n    _result.startPosition = state.position;\n    if (null !== state.anchor) {\n        _result.anchorId = state.anchor;\n        state.anchorMap[state.anchor] = _result;\n    }\n    ch = state.input.charCodeAt(state.position);\n    while (0 !== ch) {\n        following = state.input.charCodeAt(state.position + 1);\n        _line = state.line;\n        if ((0x3F === ch || 0x3A === ch) && is_WS_OR_EOL(following)) {\n            if (0x3F === ch) {\n                if (atExplicitKey) {\n                    storeMappingPair(state, _result, keyTag, keyNode, null);\n                    keyTag = keyNode = valueNode = null;\n                }\n                detected = true;\n                atExplicitKey = true;\n                allowCompact = true;\n            }\n            else if (atExplicitKey) {\n                atExplicitKey = false;\n                allowCompact = true;\n            }\n            else {\n                throwError(state, 'incomplete explicit mapping pair; a key node is missed');\n            }\n            state.position += 1;\n            ch = following;\n        }\n        else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n            if (state.line === _line) {\n                ch = state.input.charCodeAt(state.position);\n                while (is_WHITE_SPACE(ch)) {\n                    ch = state.input.charCodeAt(++state.position);\n                }\n                if (0x3A === ch) {\n                    ch = state.input.charCodeAt(++state.position);\n                    if (!is_WS_OR_EOL(ch)) {\n                        throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n                    }\n                    if (atExplicitKey) {\n                        storeMappingPair(state, _result, keyTag, keyNode, null);\n                        keyTag = keyNode = valueNode = null;\n                    }\n                    detected = true;\n                    atExplicitKey = false;\n                    allowCompact = false;\n                    keyTag = state.tag;\n                    keyNode = state.result;\n                }\n                else if (state.position == state.lineStart && testDocumentSeparator(state)) {\n                    break;\n                }\n                else if (detected) {\n                    throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n                }\n                else {\n                    state.tag = _tag;\n                    state.anchor = _anchor;\n                    return true;\n                }\n            }\n            else if (detected) {\n                throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n                while (state.position > 0) {\n                    ch = state.input.charCodeAt(--state.position);\n                    if (is_EOL(ch)) {\n                        state.position++;\n                        break;\n                    }\n                }\n            }\n            else {\n                state.tag = _tag;\n                state.anchor = _anchor;\n                return true;\n            }\n        }\n        else {\n            break;\n        }\n        if (state.line === _line || state.lineIndent > nodeIndent) {\n            if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n                if (atExplicitKey) {\n                    keyNode = state.result;\n                }\n                else {\n                    valueNode = state.result;\n                }\n            }\n            if (!atExplicitKey) {\n                storeMappingPair(state, _result, keyTag, keyNode, valueNode);\n                keyTag = keyNode = valueNode = null;\n            }\n            skipSeparationSpace(state, true, -1);\n            ch = state.input.charCodeAt(state.position);\n        }\n        if (state.lineIndent > nodeIndent && (0 !== ch)) {\n            throwError(state, 'bad indentation of a mapping entry');\n        }\n        else if (state.lineIndent < nodeIndent) {\n            break;\n        }\n    }\n    if (atExplicitKey) {\n        storeMappingPair(state, _result, keyTag, keyNode, null);\n    }\n    if (detected) {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        state.kind = 'mapping';\n        state.result = _result;\n    }\n    return detected;\n}\nfunction readTagProperty(state) {\n    var _position, isVerbatim = false, isNamed = false, tagHandle, tagName, ch;\n    ch = state.input.charCodeAt(state.position);\n    if (0x21 !== ch) {\n        return false;\n    }\n    if (null !== state.tag) {\n        throwError(state, 'duplication of a tag property');\n    }\n    ch = state.input.charCodeAt(++state.position);\n    if (0x3C === ch) {\n        isVerbatim = true;\n        ch = state.input.charCodeAt(++state.position);\n    }\n    else if (0x21 === ch) {\n        isNamed = true;\n        tagHandle = '!!';\n        ch = state.input.charCodeAt(++state.position);\n    }\n    else {\n        tagHandle = '!';\n    }\n    _position = state.position;\n    if (isVerbatim) {\n        do {\n            ch = state.input.charCodeAt(++state.position);\n        } while (0 !== ch && 0x3E !== ch);\n        if (state.position < state.length) {\n            tagName = state.input.slice(_position, state.position);\n            ch = state.input.charCodeAt(++state.position);\n        }\n        else {\n            throwError(state, 'unexpected end of the stream within a verbatim tag');\n        }\n    }\n    else {\n        while (0 !== ch && !is_WS_OR_EOL(ch)) {\n            if (0x21 === ch) {\n                if (!isNamed) {\n                    tagHandle = state.input.slice(_position - 1, state.position + 1);\n                    if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n                        throwError(state, 'named tag handle cannot contain such characters');\n                    }\n                    isNamed = true;\n                    _position = state.position + 1;\n                }\n                else {\n                    throwError(state, 'tag suffix cannot contain exclamation marks');\n                }\n            }\n            ch = state.input.charCodeAt(++state.position);\n        }\n        tagName = state.input.slice(_position, state.position);\n        if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n            throwError(state, 'tag suffix cannot contain flow indicator characters');\n        }\n    }\n    if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n        throwError(state, 'tag name cannot contain such characters: ' + tagName);\n    }\n    if (isVerbatim) {\n        state.tag = tagName;\n    }\n    else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n        state.tag = state.tagMap[tagHandle] + tagName;\n    }\n    else if ('!' === tagHandle) {\n        state.tag = '!' + tagName;\n    }\n    else if ('!!' === tagHandle) {\n        state.tag = 'tag:yaml.org,2002:' + tagName;\n    }\n    else {\n        throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n    }\n    return true;\n}\nfunction readAnchorProperty(state) {\n    var _position, ch;\n    ch = state.input.charCodeAt(state.position);\n    if (0x26 !== ch) {\n        return false;\n    }\n    if (null !== state.anchor) {\n        throwError(state, 'duplication of an anchor property');\n    }\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n    while (0 !== ch && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n    }\n    if (state.position === _position) {\n        throwError(state, 'name of an anchor node must contain at least one character');\n    }\n    state.anchor = state.input.slice(_position, state.position);\n    return true;\n}\nfunction readAlias(state) {\n    var _position, alias, len = state.length, input = state.input, ch;\n    ch = state.input.charCodeAt(state.position);\n    if (0x2A !== ch) {\n        return false;\n    }\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n    while (0 !== ch && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n    }\n    if (state.position <= _position) {\n        throwError(state, 'name of an alias node must contain at least one character');\n        state.position = _position + 1;\n    }\n    alias = state.input.slice(_position, state.position);\n    if (!state.anchorMap.hasOwnProperty(alias)) {\n        throwError(state, 'unidentified alias \"' + alias + '\"');\n        if (state.position <= _position) {\n            state.position = _position + 1;\n        }\n    }\n    state.result = ast.newAnchorRef(alias, _position, state.position, state.anchorMap[alias]);\n    skipSeparationSpace(state, true, -1);\n    return true;\n}\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n    var allowBlockStyles, allowBlockScalars, allowBlockCollections, indentStatus = 1, atNewLine = false, hasContent = false, typeIndex, typeQuantity, type, flowIndent, blockIndent, _result;\n    state.tag = null;\n    state.anchor = null;\n    state.kind = null;\n    state.result = null;\n    allowBlockStyles = allowBlockScalars = allowBlockCollections =\n        CONTEXT_BLOCK_OUT === nodeContext ||\n            CONTEXT_BLOCK_IN === nodeContext;\n    if (allowToSeek) {\n        if (skipSeparationSpace(state, true, -1)) {\n            atNewLine = true;\n            if (state.lineIndent > parentIndent) {\n                indentStatus = 1;\n            }\n            else if (state.lineIndent === parentIndent) {\n                indentStatus = 0;\n            }\n            else if (state.lineIndent < parentIndent) {\n                indentStatus = -1;\n            }\n        }\n    }\n    var tagStart = state.position;\n    var tagColumn = state.position - state.lineStart;\n    if (1 === indentStatus) {\n        while (readTagProperty(state) || readAnchorProperty(state)) {\n            if (skipSeparationSpace(state, true, -1)) {\n                atNewLine = true;\n                allowBlockCollections = allowBlockStyles;\n                if (state.lineIndent > parentIndent) {\n                    indentStatus = 1;\n                }\n                else if (state.lineIndent === parentIndent) {\n                    indentStatus = 0;\n                }\n                else if (state.lineIndent < parentIndent) {\n                    indentStatus = -1;\n                }\n            }\n            else {\n                allowBlockCollections = false;\n            }\n        }\n    }\n    if (allowBlockCollections) {\n        allowBlockCollections = atNewLine || allowCompact;\n    }\n    if (1 === indentStatus || CONTEXT_BLOCK_OUT === nodeContext) {\n        if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n            flowIndent = parentIndent;\n        }\n        else {\n            flowIndent = parentIndent + 1;\n        }\n        blockIndent = state.position - state.lineStart;\n        if (1 === indentStatus) {\n            if (allowBlockCollections &&\n                (readBlockSequence(state, blockIndent) ||\n                    readBlockMapping(state, blockIndent, flowIndent)) ||\n                readFlowCollection(state, flowIndent)) {\n                hasContent = true;\n            }\n            else {\n                if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n                    readSingleQuotedScalar(state, flowIndent) ||\n                    readDoubleQuotedScalar(state, flowIndent)) {\n                    hasContent = true;\n                }\n                else if (readAlias(state)) {\n                    hasContent = true;\n                    if (null !== state.tag || null !== state.anchor) {\n                        throwError(state, 'alias node should not have any properties');\n                    }\n                }\n                else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n                    hasContent = true;\n                    if (null === state.tag) {\n                        state.tag = '?';\n                    }\n                }\n                if (null !== state.anchor) {\n                    state.anchorMap[state.anchor] = state.result;\n                    state.result.anchorId = state.anchor;\n                }\n            }\n        }\n        else if (0 === indentStatus) {\n            hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n        }\n    }\n    if (null !== state.tag && '!' !== state.tag) {\n        if (state.tag == \"!include\") {\n            if (!state.result) {\n                state.result = ast.newScalar();\n                state.result.startPosition = state.position;\n                state.result.endPosition = state.position;\n                throwError(state, \"!include without value\");\n            }\n            state.result.kind = ast.Kind.INCLUDE_REF;\n        }\n        else if ('?' === state.tag) {\n            for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n                type = state.implicitTypes[typeIndex];\n                var vl = state.result['value'];\n                if (type.resolve(vl)) {\n                    state.result.valueObject = type.construct(state.result['value']);\n                    state.tag = type.tag;\n                    if (null !== state.anchor) {\n                        state.result.anchorId = state.anchor;\n                        state.anchorMap[state.anchor] = state.result;\n                    }\n                    break;\n                }\n            }\n        }\n        else if (_hasOwnProperty.call(state.typeMap, state.tag)) {\n            type = state.typeMap[state.tag];\n            if (null !== state.result && type.kind !== state.kind) {\n                throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n            }\n            if (!type.resolve(state.result)) {\n                throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n            }\n            else {\n                state.result = type.construct(state.result);\n                if (null !== state.anchor) {\n                    state.result.anchorId = state.anchor;\n                    state.anchorMap[state.anchor] = state.result;\n                }\n            }\n        }\n        else {\n            throwErrorFromPosition(state, tagStart, 'unknown tag <' + state.tag + '>', false, true);\n        }\n    }\n    return null !== state.tag || null !== state.anchor || hasContent;\n}\nfunction readDocument(state) {\n    var documentStart = state.position, _position, directiveName, directiveArgs, hasDirectives = false, ch;\n    state.version = null;\n    state.checkLineBreaks = state.legacy;\n    state.tagMap = {};\n    state.anchorMap = {};\n    while (0 !== (ch = state.input.charCodeAt(state.position))) {\n        skipSeparationSpace(state, true, -1);\n        ch = state.input.charCodeAt(state.position);\n        if (state.lineIndent > 0 || 0x25 !== ch) {\n            break;\n        }\n        hasDirectives = true;\n        ch = state.input.charCodeAt(++state.position);\n        _position = state.position;\n        while (0 !== ch && !is_WS_OR_EOL(ch)) {\n            ch = state.input.charCodeAt(++state.position);\n        }\n        directiveName = state.input.slice(_position, state.position);\n        directiveArgs = [];\n        if (directiveName.length < 1) {\n            throwError(state, 'directive name must not be less than one character in length');\n        }\n        while (0 !== ch) {\n            while (is_WHITE_SPACE(ch)) {\n                ch = state.input.charCodeAt(++state.position);\n            }\n            if (0x23 === ch) {\n                do {\n                    ch = state.input.charCodeAt(++state.position);\n                } while (0 !== ch && !is_EOL(ch));\n                break;\n            }\n            if (is_EOL(ch)) {\n                break;\n            }\n            _position = state.position;\n            while (0 !== ch && !is_WS_OR_EOL(ch)) {\n                ch = state.input.charCodeAt(++state.position);\n            }\n            directiveArgs.push(state.input.slice(_position, state.position));\n        }\n        if (0 !== ch) {\n            readLineBreak(state);\n        }\n        if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n            directiveHandlers[directiveName](state, directiveName, directiveArgs);\n        }\n        else {\n            throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n            state.position++;\n        }\n    }\n    skipSeparationSpace(state, true, -1);\n    if (0 === state.lineIndent &&\n        0x2D === state.input.charCodeAt(state.position) &&\n        0x2D === state.input.charCodeAt(state.position + 1) &&\n        0x2D === state.input.charCodeAt(state.position + 2)) {\n        state.position += 3;\n        skipSeparationSpace(state, true, -1);\n    }\n    else if (hasDirectives) {\n        throwError(state, 'directives end mark is expected');\n    }\n    composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n    skipSeparationSpace(state, true, -1);\n    if (state.checkLineBreaks &&\n        PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n        throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n    }\n    state.documents.push(state.result);\n    if (state.position === state.lineStart && testDocumentSeparator(state)) {\n        if (0x2E === state.input.charCodeAt(state.position)) {\n            state.position += 3;\n            skipSeparationSpace(state, true, -1);\n        }\n        return;\n    }\n    if (state.position < (state.length - 1)) {\n        throwError(state, 'end of the stream or a document separator is expected');\n    }\n    else {\n        return;\n    }\n}\nfunction loadDocuments(input, options) {\n    input = String(input);\n    options = options || {};\n    var inputLength = input.length;\n    if (inputLength !== 0) {\n        if (0x0A !== input.charCodeAt(inputLength - 1) &&\n            0x0D !== input.charCodeAt(inputLength - 1)) {\n            input += '\\n';\n        }\n        if (input.charCodeAt(0) === 0xFEFF) {\n            input = input.slice(1);\n        }\n    }\n    var state = new State(input, options);\n    state.input += '\\0';\n    while (0x20 === state.input.charCodeAt(state.position)) {\n        state.lineIndent += 1;\n        state.position += 1;\n    }\n    while (state.position < (state.length - 1)) {\n        var q = state.position;\n        readDocument(state);\n        if (state.position <= q) {\n            for (; state.position < state.length - 1; state.position++) {\n                var c = state.input.charAt(state.position);\n                if (c == '\\n') {\n                    break;\n                }\n            }\n        }\n    }\n    var documents = state.documents;\n    var docsCount = documents.length;\n    if (docsCount > 0) {\n        documents[docsCount - 1].endPosition = inputLength;\n    }\n    for (var _i = 0, documents_1 = documents; _i < documents_1.length; _i++) {\n        var x = documents_1[_i];\n        x.errors = state.errors;\n        if (x.startPosition > x.endPosition) {\n            x.startPosition = x.endPosition;\n        }\n    }\n    return documents;\n}\nfunction loadAll(input, iterator, options) {\n    if (options === void 0) { options = {}; }\n    var documents = loadDocuments(input, options), index, length;\n    for (index = 0, length = documents.length; index < length; index += 1) {\n        iterator(documents[index]);\n    }\n}\nexports.loadAll = loadAll;\nfunction load(input, options) {\n    if (options === void 0) { options = {}; }\n    var documents = loadDocuments(input, options), index, length;\n    if (0 === documents.length) {\n        return undefined;\n    }\n    else if (1 === documents.length) {\n        return documents[0];\n    }\n    var e = new YAMLException('expected a single document in the stream, but found more');\n    e.mark = new Mark(\"\", \"\", 0, 0, 0);\n    e.mark.position = documents[0].endPosition;\n    documents[0].errors.push(e);\n    return documents[0];\n}\nexports.load = load;\nfunction safeLoadAll(input, output, options) {\n    if (options === void 0) { options = {}; }\n    loadAll(input, output, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\nexports.safeLoadAll = safeLoadAll;\nfunction safeLoad(input, options) {\n    if (options === void 0) { options = {}; }\n    return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\nexports.safeLoad = safeLoad;\nmodule.exports.loadAll = loadAll;\nmodule.exports.load = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad = safeLoad;\n//# sourceMappingURL=loader.js.map","'use strict';\nvar common = require(\"./common\");\nvar Mark = (function () {\n    function Mark(name, buffer, position, line, column) {\n        this.name = name;\n        this.buffer = buffer;\n        this.position = position;\n        this.line = line;\n        this.column = column;\n    }\n    Mark.prototype.getSnippet = function (indent, maxLength) {\n        if (indent === void 0) { indent = 0; }\n        if (maxLength === void 0) { maxLength = 75; }\n        var head, start, tail, end, snippet;\n        if (!this.buffer) {\n            return null;\n        }\n        indent = indent || 4;\n        maxLength = maxLength || 75;\n        head = '';\n        start = this.position;\n        while (start > 0 && -1 === '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1))) {\n            start -= 1;\n            if (this.position - start > (maxLength / 2 - 1)) {\n                head = ' ... ';\n                start += 5;\n                break;\n            }\n        }\n        tail = '';\n        end = this.position;\n        while (end < this.buffer.length && -1 === '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end))) {\n            end += 1;\n            if (end - this.position > (maxLength / 2 - 1)) {\n                tail = ' ... ';\n                end -= 5;\n                break;\n            }\n        }\n        snippet = this.buffer.slice(start, end);\n        return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n            common.repeat(' ', indent + this.position - start + head.length) + '^';\n    };\n    Mark.prototype.toString = function (compact) {\n        if (compact === void 0) { compact = true; }\n        var snippet, where = '';\n        if (this.name) {\n            where += 'in \"' + this.name + '\" ';\n        }\n        where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n        if (!compact) {\n            snippet = this.getSnippet();\n            if (snippet) {\n                where += ':\\n' + snippet;\n            }\n        }\n        return where;\n    };\n    return Mark;\n}());\nmodule.exports = Mark;\n//# sourceMappingURL=mark.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction parseYamlBoolean(input) {\n    if ([\"true\", \"True\", \"TRUE\"].lastIndexOf(input) >= 0) {\n        return true;\n    }\n    else if ([\"false\", \"False\", \"FALSE\"].lastIndexOf(input) >= 0) {\n        return false;\n    }\n    throw \"Invalid boolean \\\"\" + input + \"\\\"\";\n}\nexports.parseYamlBoolean = parseYamlBoolean;\nfunction safeParseYamlInteger(input) {\n    if (input.lastIndexOf('0o', 0) === 0) {\n        return parseInt(input.substring(2), 8);\n    }\n    return parseInt(input);\n}\nfunction parseYamlInteger(input) {\n    var result = safeParseYamlInteger(input);\n    if (isNaN(result)) {\n        throw \"Invalid integer \\\"\" + input + \"\\\"\";\n    }\n    return result;\n}\nexports.parseYamlInteger = parseYamlInteger;\nfunction parseYamlFloat(input) {\n    if ([\".nan\", \".NaN\", \".NAN\"].lastIndexOf(input) >= 0) {\n        return NaN;\n    }\n    var infinity = /^([-+])?(?:\\.inf|\\.Inf|\\.INF)$/;\n    var match = infinity.exec(input);\n    if (match) {\n        return (match[1] === '-') ? -Infinity : Infinity;\n    }\n    var result = parseFloat(input);\n    if (!isNaN(result)) {\n        return result;\n    }\n    throw \"Invalid float \\\"\" + input + \"\\\"\";\n}\nexports.parseYamlFloat = parseYamlFloat;\nvar ScalarType;\n(function (ScalarType) {\n    ScalarType[ScalarType[\"null\"] = 0] = \"null\";\n    ScalarType[ScalarType[\"bool\"] = 1] = \"bool\";\n    ScalarType[ScalarType[\"int\"] = 2] = \"int\";\n    ScalarType[ScalarType[\"float\"] = 3] = \"float\";\n    ScalarType[ScalarType[\"string\"] = 4] = \"string\";\n})(ScalarType = exports.ScalarType || (exports.ScalarType = {}));\nfunction determineScalarType(node) {\n    if (node === undefined) {\n        return ScalarType.null;\n    }\n    if (node.doubleQuoted || !node.plainScalar || node['singleQuoted']) {\n        return ScalarType.string;\n    }\n    var value = node.value;\n    if ([\"null\", \"Null\", \"NULL\", \"~\", ''].indexOf(value) >= 0) {\n        return ScalarType.null;\n    }\n    if (value === null || value === undefined) {\n        return ScalarType.null;\n    }\n    if ([\"true\", \"True\", \"TRUE\", \"false\", \"False\", \"FALSE\"].indexOf(value) >= 0) {\n        return ScalarType.bool;\n    }\n    var base10 = /^[-+]?[0-9]+$/;\n    var base8 = /^0o[0-7]+$/;\n    var base16 = /^0x[0-9a-fA-F]+$/;\n    if (base10.test(value) || base8.test(value) || base16.test(value)) {\n        return ScalarType.int;\n    }\n    var float = /^[-+]?(\\.[0-9]+|[0-9]+(\\.[0-9]*)?)([eE][-+]?[0-9]+)?$/;\n    var infinity = /^[-+]?(\\.inf|\\.Inf|\\.INF)$/;\n    if (float.test(value) || infinity.test(value) || [\".nan\", \".NaN\", \".NAN\"].indexOf(value) >= 0) {\n        return ScalarType.float;\n    }\n    return ScalarType.string;\n}\nexports.determineScalarType = determineScalarType;\n//# sourceMappingURL=scalarInference.js.map","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common = require(\"./common\");\nvar YAMLException = require(\"./exception\");\nvar type_1 = require(\"./type\");\nfunction compileList(schema, name, result) {\n    var exclude = [];\n    schema.include.forEach(function (includedSchema) {\n        result = compileList(includedSchema, name, result);\n    });\n    schema[name].forEach(function (currentType) {\n        result.forEach(function (previousType, previousIndex) {\n            if (previousType.tag === currentType.tag) {\n                exclude.push(previousIndex);\n            }\n        });\n        result.push(currentType);\n    });\n    return result.filter(function (type, index) {\n        return -1 === exclude.indexOf(index);\n    });\n}\nfunction compileMap() {\n    var result = {}, index, length;\n    function collectType(type) {\n        result[type.tag] = type;\n    }\n    for (index = 0, length = arguments.length; index < length; index += 1) {\n        arguments[index].forEach(collectType);\n    }\n    return result;\n}\nvar Schema = (function () {\n    function Schema(definition) {\n        this.include = definition.include || [];\n        this.implicit = definition.implicit || [];\n        this.explicit = definition.explicit || [];\n        this.implicit.forEach(function (type) {\n            if (type.loadKind && 'scalar' !== type.loadKind) {\n                throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n            }\n        });\n        this.compiledImplicit = compileList(this, 'implicit', []);\n        this.compiledExplicit = compileList(this, 'explicit', []);\n        this.compiledTypeMap = compileMap(this.compiledImplicit, this.compiledExplicit);\n    }\n    Schema.DEFAULT = null;\n    Schema.create = function createSchema() {\n        var schemas, types;\n        switch (arguments.length) {\n            case 1:\n                schemas = Schema.DEFAULT;\n                types = arguments[0];\n                break;\n            case 2:\n                schemas = arguments[0];\n                types = arguments[1];\n                break;\n            default:\n                throw new YAMLException('Wrong number of arguments for Schema.create function');\n        }\n        schemas = common.toArray(schemas);\n        types = common.toArray(types);\n        if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n            throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n        }\n        if (!types.every(function (type) { return type instanceof type_1.Type; })) {\n            throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n        }\n        return new Schema({\n            include: schemas,\n            explicit: types\n        });\n    };\n    return Schema;\n}());\nexports.Schema = Schema;\n//# sourceMappingURL=schema.js.map","'use strict';\nvar schema_1 = require(\"../schema\");\nmodule.exports = new schema_1.Schema({\n    include: [\n        require('./json')\n    ]\n});\n//# sourceMappingURL=core.js.map","'use strict';\nvar schema_1 = require(\"../schema\");\nvar schema = new schema_1.Schema({\n    include: [\n        require('./default_safe')\n    ],\n    explicit: [\n        require('../type/js/undefined'),\n        require('../type/js/regexp')\n    ]\n});\nschema_1.Schema.DEFAULT = schema;\nmodule.exports = schema;\n//# sourceMappingURL=default_full.js.map","'use strict';\nvar schema_1 = require(\"../schema\");\nvar schema = new schema_1.Schema({\n    include: [\n        require('./core')\n    ],\n    implicit: [\n        require('../type/timestamp'),\n        require('../type/merge')\n    ],\n    explicit: [\n        require('../type/binary'),\n        require('../type/omap'),\n        require('../type/pairs'),\n        require('../type/set')\n    ]\n});\nmodule.exports = schema;\n//# sourceMappingURL=default_safe.js.map","'use strict';\nvar schema_1 = require(\"../schema\");\nmodule.exports = new schema_1.Schema({\n    explicit: [\n        require('../type/str'),\n        require('../type/seq'),\n        require('../type/map')\n    ]\n});\n//# sourceMappingURL=failsafe.js.map","'use strict';\nvar schema_1 = require(\"../schema\");\nmodule.exports = new schema_1.Schema({\n    include: [\n        require('./failsafe')\n    ],\n    implicit: [\n        require('../type/null'),\n        require('../type/bool'),\n        require('../type/int'),\n        require('../type/float')\n    ]\n});\n//# sourceMappingURL=json.js.map","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar YAMLException = require(\"./exception\");\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n    'kind',\n    'resolve',\n    'construct',\n    'instanceOf',\n    'predicate',\n    'represent',\n    'defaultStyle',\n    'styleAliases'\n];\nvar YAML_NODE_KINDS = [\n    'scalar',\n    'sequence',\n    'mapping'\n];\nfunction compileStyleAliases(map) {\n    var result = {};\n    if (null !== map) {\n        Object.keys(map).forEach(function (style) {\n            map[style].forEach(function (alias) {\n                result[String(alias)] = style;\n            });\n        });\n    }\n    return result;\n}\nvar Type = (function () {\n    function Type(tag, options) {\n        options = options || {};\n        Object.keys(options).forEach(function (name) {\n            if (-1 === TYPE_CONSTRUCTOR_OPTIONS.indexOf(name)) {\n                throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n            }\n        });\n        this.tag = tag;\n        this.kind = options['kind'] || null;\n        this.resolve = options['resolve'] || function () { return true; };\n        this.construct = options['construct'] || function (data) { return data; };\n        this.instanceOf = options['instanceOf'] || null;\n        this.predicate = options['predicate'] || null;\n        this.represent = options['represent'] || null;\n        this.defaultStyle = options['defaultStyle'] || null;\n        this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n        if (-1 === YAML_NODE_KINDS.indexOf(this.kind)) {\n            throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n        }\n    }\n    return Type;\n}());\nexports.Type = Type;\n//# sourceMappingURL=type.js.map","'use strict';\nvar NodeBuffer = require('buffer').Buffer;\nvar type_1 = require(\"../type\");\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\nfunction resolveYamlBinary(data) {\n    if (null === data) {\n        return false;\n    }\n    var code, idx, bitlen = 0, len = 0, max = data.length, map = BASE64_MAP;\n    for (idx = 0; idx < max; idx++) {\n        code = map.indexOf(data.charAt(idx));\n        if (code > 64) {\n            continue;\n        }\n        if (code < 0) {\n            return false;\n        }\n        bitlen += 6;\n    }\n    return (bitlen % 8) === 0;\n}\nfunction constructYamlBinary(data) {\n    var code, idx, tailbits, input = data.replace(/[\\r\\n=]/g, ''), max = input.length, map = BASE64_MAP, bits = 0, result = [];\n    for (idx = 0; idx < max; idx++) {\n        if ((idx % 4 === 0) && idx) {\n            result.push((bits >> 16) & 0xFF);\n            result.push((bits >> 8) & 0xFF);\n            result.push(bits & 0xFF);\n        }\n        bits = (bits << 6) | map.indexOf(input.charAt(idx));\n    }\n    tailbits = (max % 4) * 6;\n    if (tailbits === 0) {\n        result.push((bits >> 16) & 0xFF);\n        result.push((bits >> 8) & 0xFF);\n        result.push(bits & 0xFF);\n    }\n    else if (tailbits === 18) {\n        result.push((bits >> 10) & 0xFF);\n        result.push((bits >> 2) & 0xFF);\n    }\n    else if (tailbits === 12) {\n        result.push((bits >> 4) & 0xFF);\n    }\n    if (NodeBuffer) {\n        return new NodeBuffer(result);\n    }\n    return result;\n}\nfunction representYamlBinary(object) {\n    var result = '', bits = 0, idx, tail, max = object.length, map = BASE64_MAP;\n    for (idx = 0; idx < max; idx++) {\n        if ((idx % 3 === 0) && idx) {\n            result += map[(bits >> 18) & 0x3F];\n            result += map[(bits >> 12) & 0x3F];\n            result += map[(bits >> 6) & 0x3F];\n            result += map[bits & 0x3F];\n        }\n        bits = (bits << 8) + object[idx];\n    }\n    tail = max % 3;\n    if (tail === 0) {\n        result += map[(bits >> 18) & 0x3F];\n        result += map[(bits >> 12) & 0x3F];\n        result += map[(bits >> 6) & 0x3F];\n        result += map[bits & 0x3F];\n    }\n    else if (tail === 2) {\n        result += map[(bits >> 10) & 0x3F];\n        result += map[(bits >> 4) & 0x3F];\n        result += map[(bits << 2) & 0x3F];\n        result += map[64];\n    }\n    else if (tail === 1) {\n        result += map[(bits >> 2) & 0x3F];\n        result += map[(bits << 4) & 0x3F];\n        result += map[64];\n        result += map[64];\n    }\n    return result;\n}\nfunction isBinary(object) {\n    return NodeBuffer && NodeBuffer.isBuffer(object);\n}\nmodule.exports = new type_1.Type('tag:yaml.org,2002:binary', {\n    kind: 'scalar',\n    resolve: resolveYamlBinary,\n    construct: constructYamlBinary,\n    predicate: isBinary,\n    represent: representYamlBinary\n});\n//# sourceMappingURL=binary.js.map","\"use strict\";\n'use strict';\nvar type_1 = require(\"../type\");\nfunction resolveYamlBoolean(data) {\n    if (null === data) {\n        return false;\n    }\n    var max = data.length;\n    return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n        (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\nfunction constructYamlBoolean(data) {\n    return data === 'true' ||\n        data === 'True' ||\n        data === 'TRUE';\n}\nfunction isBoolean(object) {\n    return '[object Boolean]' === Object.prototype.toString.call(object);\n}\nmodule.exports = new type_1.Type('tag:yaml.org,2002:bool', {\n    kind: 'scalar',\n    resolve: resolveYamlBoolean,\n    construct: constructYamlBoolean,\n    predicate: isBoolean,\n    represent: {\n        lowercase: function (object) { return object ? 'true' : 'false'; },\n        uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n        camelcase: function (object) { return object ? 'True' : 'False'; }\n    },\n    defaultStyle: 'lowercase'\n});\n//# sourceMappingURL=bool.js.map","'use strict';\nvar common = require(\"../common\");\nvar type_1 = require(\"../type\");\nvar YAML_FLOAT_PATTERN = new RegExp('^(?:[-+]?(?:[0-9][0-9_]*)\\\\.[0-9_]*(?:[eE][-+][0-9]+)?' +\n    '|\\\\.[0-9_]+(?:[eE][-+][0-9]+)?' +\n    '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n    '|[-+]?\\\\.(?:inf|Inf|INF)' +\n    '|\\\\.(?:nan|NaN|NAN))$');\nfunction resolveYamlFloat(data) {\n    if (null === data) {\n        return false;\n    }\n    var value, sign, base, digits;\n    if (!YAML_FLOAT_PATTERN.test(data)) {\n        return false;\n    }\n    return true;\n}\nfunction constructYamlFloat(data) {\n    var value, sign, base, digits;\n    value = data.replace(/_/g, '').toLowerCase();\n    sign = '-' === value[0] ? -1 : 1;\n    digits = [];\n    if (0 <= '+-'.indexOf(value[0])) {\n        value = value.slice(1);\n    }\n    if ('.inf' === value) {\n        return (1 === sign) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n    }\n    else if ('.nan' === value) {\n        return NaN;\n    }\n    else if (0 <= value.indexOf(':')) {\n        value.split(':').forEach(function (v) {\n            digits.unshift(parseFloat(v, 10));\n        });\n        value = 0.0;\n        base = 1;\n        digits.forEach(function (d) {\n            value += d * base;\n            base *= 60;\n        });\n        return sign * value;\n    }\n    return sign * parseFloat(value, 10);\n}\nfunction representYamlFloat(object, style) {\n    if (isNaN(object)) {\n        switch (style) {\n            case 'lowercase':\n                return '.nan';\n            case 'uppercase':\n                return '.NAN';\n            case 'camelcase':\n                return '.NaN';\n        }\n    }\n    else if (Number.POSITIVE_INFINITY === object) {\n        switch (style) {\n            case 'lowercase':\n                return '.inf';\n            case 'uppercase':\n                return '.INF';\n            case 'camelcase':\n                return '.Inf';\n        }\n    }\n    else if (Number.NEGATIVE_INFINITY === object) {\n        switch (style) {\n            case 'lowercase':\n                return '-.inf';\n            case 'uppercase':\n                return '-.INF';\n            case 'camelcase':\n                return '-.Inf';\n        }\n    }\n    else if (common.isNegativeZero(object)) {\n        return '-0.0';\n    }\n    return object.toString(10);\n}\nfunction isFloat(object) {\n    return ('[object Number]' === Object.prototype.toString.call(object)) &&\n        (0 !== object % 1 || common.isNegativeZero(object));\n}\nmodule.exports = new type_1.Type('tag:yaml.org,2002:float', {\n    kind: 'scalar',\n    resolve: resolveYamlFloat,\n    construct: constructYamlFloat,\n    predicate: isFloat,\n    represent: representYamlFloat,\n    defaultStyle: 'lowercase'\n});\n//# sourceMappingURL=float.js.map","'use strict';\nvar common = require(\"../common\");\nvar type_1 = require(\"../type\");\nfunction isHexCode(c) {\n    return ((0x30 <= c) && (c <= 0x39)) ||\n        ((0x41 <= c) && (c <= 0x46)) ||\n        ((0x61 <= c) && (c <= 0x66));\n}\nfunction isOctCode(c) {\n    return ((0x30 <= c) && (c <= 0x37));\n}\nfunction isDecCode(c) {\n    return ((0x30 <= c) && (c <= 0x39));\n}\nfunction resolveYamlInteger(data) {\n    if (null === data) {\n        return false;\n    }\n    var max = data.length, index = 0, hasDigits = false, ch;\n    if (!max) {\n        return false;\n    }\n    ch = data[index];\n    if (ch === '-' || ch === '+') {\n        ch = data[++index];\n    }\n    if (ch === '0') {\n        if (index + 1 === max) {\n            return true;\n        }\n        ch = data[++index];\n        if (ch === 'b') {\n            index++;\n            for (; index < max; index++) {\n                ch = data[index];\n                if (ch === '_') {\n                    continue;\n                }\n                if (ch !== '0' && ch !== '1') {\n                    return false;\n                }\n                hasDigits = true;\n            }\n            return hasDigits;\n        }\n        if (ch === 'x') {\n            index++;\n            for (; index < max; index++) {\n                ch = data[index];\n                if (ch === '_') {\n                    continue;\n                }\n                if (!isHexCode(data.charCodeAt(index))) {\n                    return false;\n                }\n                hasDigits = true;\n            }\n            return hasDigits;\n        }\n        for (; index < max; index++) {\n            ch = data[index];\n            if (ch === '_') {\n                continue;\n            }\n            if (!isOctCode(data.charCodeAt(index))) {\n                return false;\n            }\n            hasDigits = true;\n        }\n        return hasDigits;\n    }\n    for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') {\n            continue;\n        }\n        if (ch === ':') {\n            break;\n        }\n        if (!isDecCode(data.charCodeAt(index))) {\n            return false;\n        }\n        hasDigits = true;\n    }\n    if (!hasDigits) {\n        return false;\n    }\n    if (ch !== ':') {\n        return true;\n    }\n    return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\nfunction constructYamlInteger(data) {\n    var value = data, sign = 1, ch, base, digits = [];\n    if (value.indexOf('_') !== -1) {\n        value = value.replace(/_/g, '');\n    }\n    ch = value[0];\n    if (ch === '-' || ch === '+') {\n        if (ch === '-') {\n            sign = -1;\n        }\n        value = value.slice(1);\n        ch = value[0];\n    }\n    if ('0' === value) {\n        return 0;\n    }\n    if (ch === '0') {\n        if (value[1] === 'b') {\n            return sign * parseInt(value.slice(2), 2);\n        }\n        if (value[1] === 'x') {\n            return sign * parseInt(value, 16);\n        }\n        return sign * parseInt(value, 8);\n    }\n    if (value.indexOf(':') !== -1) {\n        value.split(':').forEach(function (v) {\n            digits.unshift(parseInt(v, 10));\n        });\n        value = 0;\n        base = 1;\n        digits.forEach(function (d) {\n            value += (d * base);\n            base *= 60;\n        });\n        return sign * value;\n    }\n    return sign * parseInt(value, 10);\n}\nfunction isInteger(object) {\n    return ('[object Number]' === Object.prototype.toString.call(object)) &&\n        (0 === object % 1 && !common.isNegativeZero(object));\n}\nmodule.exports = new type_1.Type('tag:yaml.org,2002:int', {\n    kind: 'scalar',\n    resolve: resolveYamlInteger,\n    construct: constructYamlInteger,\n    predicate: isInteger,\n    represent: {\n        binary: function (object) { return '0b' + object.toString(2); },\n        octal: function (object) { return '0' + object.toString(8); },\n        decimal: function (object) { return object.toString(10); },\n        hexadecimal: function (object) { return '0x' + object.toString(16).toUpperCase(); }\n    },\n    defaultStyle: 'decimal',\n    styleAliases: {\n        binary: [2, 'bin'],\n        octal: [8, 'oct'],\n        decimal: [10, 'dec'],\n        hexadecimal: [16, 'hex']\n    }\n});\n//# sourceMappingURL=int.js.map","'use strict';\nvar type_1 = require(\"../../type\");\nfunction resolveJavascriptRegExp(data) {\n    if (null === data) {\n        return false;\n    }\n    if (0 === data.length) {\n        return false;\n    }\n    var regexp = data, tail = /\\/([gim]*)$/.exec(data), modifiers = '';\n    if ('/' === regexp[0]) {\n        if (tail) {\n            modifiers = tail[1];\n        }\n        if (modifiers.length > 3) {\n            return false;\n        }\n        if (regexp[regexp.length - modifiers.length - 1] !== '/') {\n            return false;\n        }\n        regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n    }\n    try {\n        var dummy = new RegExp(regexp, modifiers);\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction constructJavascriptRegExp(data) {\n    var regexp = data, tail = /\\/([gim]*)$/.exec(data), modifiers = '';\n    if ('/' === regexp[0]) {\n        if (tail) {\n            modifiers = tail[1];\n        }\n        regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n    }\n    return new RegExp(regexp, modifiers);\n}\nfunction representJavascriptRegExp(object) {\n    var result = '/' + object.source + '/';\n    if (object.global) {\n        result += 'g';\n    }\n    if (object.multiline) {\n        result += 'm';\n    }\n    if (object.ignoreCase) {\n        result += 'i';\n    }\n    return result;\n}\nfunction isRegExp(object) {\n    return '[object RegExp]' === Object.prototype.toString.call(object);\n}\nmodule.exports = new type_1.Type('tag:yaml.org,2002:js/regexp', {\n    kind: 'scalar',\n    resolve: resolveJavascriptRegExp,\n    construct: constructJavascriptRegExp,\n    predicate: isRegExp,\n    represent: representJavascriptRegExp\n});\n//# sourceMappingURL=regexp.js.map","'use strict';\nvar type_1 = require(\"../../type\");\nfunction resolveJavascriptUndefined() {\n    return true;\n}\nfunction constructJavascriptUndefined() {\n    return undefined;\n}\nfunction representJavascriptUndefined() {\n    return '';\n}\nfunction isUndefined(object) {\n    return 'undefined' === typeof object;\n}\nmodule.exports = new type_1.Type('tag:yaml.org,2002:js/undefined', {\n    kind: 'scalar',\n    resolve: resolveJavascriptUndefined,\n    construct: constructJavascriptUndefined,\n    predicate: isUndefined,\n    represent: representJavascriptUndefined\n});\n//# sourceMappingURL=undefined.js.map","'use strict';\nvar type_1 = require(\"../type\");\nmodule.exports = new type_1.Type('tag:yaml.org,2002:map', {\n    kind: 'mapping',\n    construct: function (data) { return null !== data ? data : {}; }\n});\n//# sourceMappingURL=map.js.map","'use strict';\nvar type_1 = require(\"../type\");\nfunction resolveYamlMerge(data) {\n    return '<<' === data || null === data;\n}\nmodule.exports = new type_1.Type('tag:yaml.org,2002:merge', {\n    kind: 'scalar',\n    resolve: resolveYamlMerge\n});\n//# sourceMappingURL=merge.js.map","'use strict';\nvar type_1 = require(\"../type\");\nfunction resolveYamlNull(data) {\n    if (null === data) {\n        return true;\n    }\n    var max = data.length;\n    return (max === 1 && data === '~') ||\n        (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\nfunction constructYamlNull() {\n    return null;\n}\nfunction isNull(object) {\n    return null === object;\n}\nmodule.exports = new type_1.Type('tag:yaml.org,2002:null', {\n    kind: 'scalar',\n    resolve: resolveYamlNull,\n    construct: constructYamlNull,\n    predicate: isNull,\n    represent: {\n        canonical: function () { return '~'; },\n        lowercase: function () { return 'null'; },\n        uppercase: function () { return 'NULL'; },\n        camelcase: function () { return 'Null'; }\n    },\n    defaultStyle: 'lowercase'\n});\n//# sourceMappingURL=null.js.map","'use strict';\nvar type_1 = require(\"../type\");\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString = Object.prototype.toString;\nfunction resolveYamlOmap(data) {\n    if (null === data) {\n        return true;\n    }\n    var objectKeys = [], index, length, pair, pairKey, pairHasKey, object = data;\n    for (index = 0, length = object.length; index < length; index += 1) {\n        pair = object[index];\n        pairHasKey = false;\n        if ('[object Object]' !== _toString.call(pair)) {\n            return false;\n        }\n        for (pairKey in pair) {\n            if (_hasOwnProperty.call(pair, pairKey)) {\n                if (!pairHasKey) {\n                    pairHasKey = true;\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n        if (!pairHasKey) {\n            return false;\n        }\n        if (-1 === objectKeys.indexOf(pairKey)) {\n            objectKeys.push(pairKey);\n        }\n        else {\n            return false;\n        }\n    }\n    return true;\n}\nfunction constructYamlOmap(data) {\n    return null !== data ? data : [];\n}\nmodule.exports = new type_1.Type('tag:yaml.org,2002:omap', {\n    kind: 'sequence',\n    resolve: resolveYamlOmap,\n    construct: constructYamlOmap\n});\n//# sourceMappingURL=omap.js.map","'use strict';\nvar type_1 = require(\"../type\");\nvar ast = require(\"../yamlAST\");\nvar _toString = Object.prototype.toString;\nfunction resolveYamlPairs(data) {\n    if (null === data) {\n        return true;\n    }\n    if (data.kind != ast.Kind.SEQ) {\n        return false;\n    }\n    var index, length, pair, keys, result, object = data.items;\n    for (index = 0, length = object.length; index < length; index += 1) {\n        pair = object[index];\n        if ('[object Object]' !== _toString.call(pair)) {\n            return false;\n        }\n        if (!Array.isArray(pair.mappings)) {\n            return false;\n        }\n        if (1 !== pair.mappings.length) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction constructYamlPairs(data) {\n    if (null === data || !Array.isArray(data.items)) {\n        return [];\n    }\n    var index, length, keys, result, object = data.items;\n    result = ast.newItems();\n    result.parent = data.parent;\n    result.startPosition = data.startPosition;\n    result.endPosition = data.endPosition;\n    for (index = 0, length = object.length; index < length; index += 1) {\n        var pair = object[index];\n        var mapping = pair.mappings[0];\n        var pairSeq = ast.newItems();\n        pairSeq.parent = result;\n        pairSeq.startPosition = mapping.key.startPosition;\n        pairSeq.endPosition = mapping.value.startPosition;\n        mapping.key.parent = pairSeq;\n        mapping.value.parent = pairSeq;\n        pairSeq.items = [mapping.key, mapping.value];\n        result.items.push(pairSeq);\n    }\n    return result;\n}\nmodule.exports = new type_1.Type('tag:yaml.org,2002:pairs', {\n    kind: 'sequence',\n    resolve: resolveYamlPairs,\n    construct: constructYamlPairs\n});\n//# sourceMappingURL=pairs.js.map","'use strict';\nvar type_1 = require(\"../type\");\nmodule.exports = new type_1.Type('tag:yaml.org,2002:seq', {\n    kind: 'sequence',\n    construct: function (data) { return null !== data ? data : []; }\n});\n//# sourceMappingURL=seq.js.map","'use strict';\nvar type_1 = require(\"../type\");\nvar ast = require(\"../yamlAST\");\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction resolveYamlSet(data) {\n    if (null === data) {\n        return true;\n    }\n    if (data.kind != ast.Kind.MAP) {\n        return false;\n    }\n    return true;\n}\nfunction constructYamlSet(data) {\n    return null !== data ? data : {};\n}\nmodule.exports = new type_1.Type('tag:yaml.org,2002:set', {\n    kind: 'mapping',\n    resolve: resolveYamlSet,\n    construct: constructYamlSet\n});\n//# sourceMappingURL=set.js.map","'use strict';\nvar type_1 = require(\"../type\");\nmodule.exports = new type_1.Type('tag:yaml.org,2002:str', {\n    kind: 'scalar',\n    construct: function (data) { return null !== data ? data : ''; }\n});\n//# sourceMappingURL=str.js.map","'use strict';\nvar type_1 = require(\"../type\");\nvar YAML_TIMESTAMP_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' +\n    '-([0-9][0-9]?)' +\n    '-([0-9][0-9]?)' +\n    '(?:(?:[Tt]|[ \\\\t]+)' +\n    '([0-9][0-9]?)' +\n    ':([0-9][0-9])' +\n    ':([0-9][0-9])' +\n    '(?:\\\\.([0-9]*))?' +\n    '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' +\n    '(?::([0-9][0-9]))?))?)?$');\nfunction resolveYamlTimestamp(data) {\n    if (null === data) {\n        return false;\n    }\n    var match, year, month, day, hour, minute, second, fraction = 0, delta = null, tz_hour, tz_minute, date;\n    match = YAML_TIMESTAMP_REGEXP.exec(data);\n    if (null === match) {\n        return false;\n    }\n    return true;\n}\nfunction constructYamlTimestamp(data) {\n    var match, year, month, day, hour, minute, second, fraction = 0, delta = null, tz_hour, tz_minute, date;\n    match = YAML_TIMESTAMP_REGEXP.exec(data);\n    if (null === match) {\n        throw new Error('Date resolve error');\n    }\n    year = +(match[1]);\n    month = +(match[2]) - 1;\n    day = +(match[3]);\n    if (!match[4]) {\n        return new Date(Date.UTC(year, month, day));\n    }\n    hour = +(match[4]);\n    minute = +(match[5]);\n    second = +(match[6]);\n    if (match[7]) {\n        fraction = match[7].slice(0, 3);\n        while (fraction.length < 3) {\n            fraction = fraction + '0';\n        }\n        fraction = +fraction;\n    }\n    if (match[9]) {\n        tz_hour = +(match[10]);\n        tz_minute = +(match[11] || 0);\n        delta = (tz_hour * 60 + tz_minute) * 60000;\n        if ('-' === match[9]) {\n            delta = -delta;\n        }\n    }\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n    if (delta) {\n        date.setTime(date.getTime() - delta);\n    }\n    return date;\n}\nfunction representYamlTimestamp(object) {\n    return object.toISOString();\n}\nmodule.exports = new type_1.Type('tag:yaml.org,2002:timestamp', {\n    kind: 'scalar',\n    resolve: resolveYamlTimestamp,\n    construct: constructYamlTimestamp,\n    instanceOf: Date,\n    represent: representYamlTimestamp\n});\n//# sourceMappingURL=timestamp.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Kind;\n(function (Kind) {\n    Kind[Kind[\"SCALAR\"] = 0] = \"SCALAR\";\n    Kind[Kind[\"MAPPING\"] = 1] = \"MAPPING\";\n    Kind[Kind[\"MAP\"] = 2] = \"MAP\";\n    Kind[Kind[\"SEQ\"] = 3] = \"SEQ\";\n    Kind[Kind[\"ANCHOR_REF\"] = 4] = \"ANCHOR_REF\";\n    Kind[Kind[\"INCLUDE_REF\"] = 5] = \"INCLUDE_REF\";\n})(Kind = exports.Kind || (exports.Kind = {}));\nfunction newMapping(key, value) {\n    var end = (value ? value.endPosition : key.endPosition + 1);\n    var node = {\n        key: key,\n        value: value,\n        startPosition: key.startPosition,\n        endPosition: end,\n        kind: Kind.MAPPING,\n        parent: null,\n        errors: []\n    };\n    return node;\n}\nexports.newMapping = newMapping;\nfunction newAnchorRef(key, start, end, value) {\n    return {\n        errors: [],\n        referencesAnchor: key,\n        value: value,\n        startPosition: start,\n        endPosition: end,\n        kind: Kind.ANCHOR_REF,\n        parent: null\n    };\n}\nexports.newAnchorRef = newAnchorRef;\nfunction newScalar(v) {\n    if (v === void 0) { v = \"\"; }\n    var result = {\n        errors: [],\n        startPosition: -1,\n        endPosition: -1,\n        value: \"\" + v,\n        kind: Kind.SCALAR,\n        parent: null,\n        doubleQuoted: false,\n        rawValue: \"\" + v,\n    };\n    if (typeof v !== \"string\") {\n        result.valueObject = v;\n    }\n    return result;\n}\nexports.newScalar = newScalar;\nfunction newItems() {\n    return {\n        errors: [],\n        startPosition: -1,\n        endPosition: -1,\n        items: [],\n        kind: Kind.SEQ,\n        parent: null\n    };\n}\nexports.newItems = newItems;\nfunction newSeq() {\n    return newItems();\n}\nexports.newSeq = newSeq;\nfunction newMap(mappings) {\n    return {\n        errors: [],\n        startPosition: -1,\n        endPosition: -1,\n        mappings: mappings ? mappings : [],\n        kind: Kind.MAP,\n        parent: null\n    };\n}\nexports.newMap = newMap;\n//# sourceMappingURL=yamlAST.js.map",null,"module.exports = require(\"assert\");;","module.exports = require(\"buffer\");;","module.exports = require(\"events\");;","module.exports = require(\"fs\");;","module.exports = require(\"http\");;","module.exports = require(\"https\");;","module.exports = require(\"net\");;","module.exports = require(\"os\");;","module.exports = require(\"path\");;","module.exports = require(\"stream\");;","module.exports = require(\"tls\");;","module.exports = require(\"url\");;","module.exports = require(\"util\");;","module.exports = require(\"zlib\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\n__webpack_require__.ab = __dirname + \"/\";","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(3109);\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACptDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACrjzpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjjPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClvYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvrnoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvlhrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpzeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpnRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjpiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClnfrjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjtxvivljzprQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChxdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACrt8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxhsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACptGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClplbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACptDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACzflnzQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClpoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACx4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AClFA;AACA;AACA;A;;;;;;ACFA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;ACDA;AACA;AACA;AACA;;A","sourceRoot":""}